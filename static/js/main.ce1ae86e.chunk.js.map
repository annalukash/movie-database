{"version":3,"sources":["components/shared/header/header.js","components/shared/spinner/spinner.js","components/shared/rate.js","components/shared/spinner/loadMoreSpinner.js","components/moviesPage/components/movieList.js","components/moviesContext/moviesContext.js","components/hoc/withMoviesService.js","actions/actionTypes.js","actions/actions.js","components/moviesPage/popularPage.js","components/moviesPage/playingNowPage.js","components/moviesPage/topRatedPage.js","components/moviesPage/upcomingPage.js","components/moviesPage/components/movieDetailsPage/components/casts.js","components/shared/youtubeVideo/youtubeVideo.js","components/moviesPage/components/movieDetailsPage/components/modalWindow.js","components/moviesPage/components/movieDetailsPage/components/details.js","components/moviesPage/components/movieDetailsPage/components/originalDetails.js","components/moviesPage/components/movieDetailsPage/components/keywords.js","components/moviesPage/components/movieDetailsPage/components/collection.js","components/moviesPage/components/movieDetailsPage/components/recommendations.js","components/moviesPage/components/movieDetailsPage/movieDetails.js","components/shared/scrollToTop/scrollToTop.js","services/services.js","components/moviesByKeywordsPage/components/movieListByKeywords.js","components/moviesByKeywordsPage/moviesByKeyword.js","components/fullCastPage/components/fullCastList.js","components/fullCastPage/castsPage.js","components/personDetailsPage/components/personDetailsCasts.js","components/personDetailsPage/components/personDetailsCrew.js","components/personDetailsPage/components/crewByDepartments.js","components/personDetailsPage/components/personDetails.js","components/personDetailsPage/personBiography.js","components/TVPages/tvPopularPage.js","components/TVPages/airingTodayPage.js","components/TVPages/tvTopRatedPage.js","components/TVPages/onTheAirPage.js","components/popularPersonPage/components/personList.js","components/popularPersonPage/popularPersonPage.js","components/collectionPage/components/collectionCast.js","components/collectionPage/components/collectionDetails.js","components/collectionPage/collectionPage.js","components/shared/toggler/toggler.js","components/homePage/components/inTrend.js","components/homePage/homePage.js","components/app/app.js","reducers/reducers/moviePageReducers.js","reducers/reducers/tvPageReducer.js","reducers/reducers/popularPersonReducer.js","reducers/reducers/movieDetailsReducer.js","reducers/reducers/homePageReducer.js","reducers/combineReducers.js","store.js","components/errorComponent/errorComponent.js","index.js"],"names":["NavBarWrapper","styled","div","LogoWrapper","LinkWrapper","NavCollapseWrapper","Header","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Spinner","isButton","classNames","RateWrapper","props","small","Rate","vote","value","background","backgroundPadding","text","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","LoadMoreSpinner","PosterWrapper","MovieDetailsWrapper","TitleWrapper","ReleaseWrapper","Poster","img","LoadMoreButton","button","MovieList","movies","loading","loadingMore","url","getMovies","history","movieItems","map","item","index","poster_path","release_date","vote_average","name","first_air_date","src","process","Col","key","onClick","push","alt","moment","format","spinnerDetails","loadSpinner","Container","Row","MoviesServicesContext","React","createContext","WithMoviesService","Wrapped","Consumer","MoviesService","POPULAR_MOVIES_REQUESTED","POPULAR_MOVIES_LOADED","POPULAR_MOVIES_ERROR","POPULAR_MOVIES_MORE_REQUESTED","POPULAR_MOVIES_MORE_LOADED","POPULAR_MOVIES_MORE_ERROR","PLAYING_NOW_MOVIES_REQUESTED","PLAYING_NOW_MOVIES_LOADED","PLAYING_NOW_MOVIES_MORE_REQUESTED","PLAYING_NOW_MOVIES_MORE_LOADED","UPCOMING_MOVIES_REQUESTED","UPCOMING_MOVIES_LOADED","UPCOMING_MOVIES_MORE_REQUESTED","UPCOMING_MOVIES_MORE_LOADED","TOP_RATED_MOVIES_REQUESTED","TOP_RATED_MOVIES_LOADED","TOP_RATED_MOVIES_MORE_REQUESTED","TOP_RATED_MOVIES_MORE_LOADED","POPULAR_TV_REQUESTED","POPULAR_TV_LOADED","POPULAR_TV_ERROR","POPULAR_TV_MORE_REQUESTED","POPULAR_TV_MORE_LOADED","AIRING_TODAY_TV_REQUESTED","AIRING_TODAY_TV_LOADED","AIRING_TODAY_TV_MORE_REQUESTED","AIRING_TODAY_TV_MORE_LOADED","ON_THE_AIR_TV_REQUESTED","ON_THE_AIR_TV_LOADED","ON_THE_AIR_TV_MORE_REQUESTED","ON_THE_AIR_TV_MORE_LOADED","TOP_RATED_TV_REQUESTED","TOP_RATED_TV_LOADED","TOP_RATED_TV_MORE_REQUESTED","TOP_RATED_TV_MORE_LOADED","POPULAR_PERSON_REQUESTED","POPULAR_PERSON_LOADED","POPULAR_PERSON_ERROR","MOVIE_DETAILS_REQUESTED","MOVIE_DETAILS_LOADED","MOVIE_DETAILS_ERROR","CAST_REQUESTED","CAST_LOADED","KEYWORDS_REQUESTED","KEYWORDS_LOADED","MODAL_WINDOW_TOGGLE","VIDEO_LOADED","SOCIAL_LINK_LOADED","COLLECTION_LOADED","RECOMMENDATIONS_LOADED","IN_TREND_REQUESTED","IN_TREND_LOADED","IN_TREND_ERROR","popularMoviesError","type","actionTypes","popularTvError","movieDetailsRequested","movieDetailsLoaded","payload","movieDetailsError","castRequested","castLoaded","PopularPage","loadMovies","success","page","getPopular","then","res","results","catch","error","loadMoreMovies","popularMoviesMoreLoaded","popularMoviesMoreRequested","document","this","length","popularMoviesRequested","popularMoviesLoaded","location","pathname","Component","mapDispatchToProps","connect","state","moviePageReducer","popularMovies","popularPage","PlayingNowPage","getNowPlaying","playingNowMoviesMoreLoaded","playingNowMoviesMoreRequested","playingNowMoviesRequested","playingNowMoviesLoaded","playingNowMovies","playingNowPage","TopRatedPage","getTopRated","topRatedMoviesMoreRequested","topRatedMoviesMoreLoaded","topRatedMoviesRequested","topRatedMoviesLoaded","topRatedMovies","topRatedPage","UpcomingPage","getUpcoming","upcomingMoviesMoreLoaded","upcomingMoviesMoreRequested","upcomingMoviesRequested","upcomingMoviesLoaded","upcomingMovies","upcomingPage","CarouselWrapper","CastTitle","CastItemWrapper","CastImg","CastName","CastCharacter","PrevButton","NextButton","FullCastWrapper","Cast","carousel","casts","onGoPersonBio","castItem","cast","sort","a","b","order","filter","profile_path","character","renderArrow","isEdge","style","display","itemsToScroll","itemsToShow","focusOnSelect","ref","renderPagination","pages","activePage","slidePrev","slideNext","includes","Trailer","resultItem","video","width","height","frameBorder","allowFullScreen","controls","Backdrop","TrailerBodyWrapper","TrailerTitleWraper","TrailerCloseButton","ModalWindow","onCloseModal","ImgWrapper","Title","Year","span","DetailsList","IconWrapper","Vote","ActivityList","ul","TrailerWrapper","TrailerTitle","Overview","TagLine","CreatorNameWrapper","TvCreator","creator","Details","details","movieId","onOpenModal","modalWindow","genres","runtime","tagline","overview","episode_run_time","created_by","genreToString","genre","join","duration","replace","modal","showTrailer","releaseYear","releaseDate","LinkIconWrapper","Link","movie","SocialLinkWrrapper","facebook","twitter","instagram","TvNetwork","networks","networkItem","find","network","logo","logo_path","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","OriginalDetails","socialLink","original_title","status","budget","revenue","original_language","original_name","homepage","facebook_id","instagram_id","twitter_id","nf","Intl","NumberFormat","movieBudget","movieRevenue","tvNet","href","target","rel","homePage","overlayFacebook","overlayTwitter","overlayInstagram","overlayHomePage","statusMovie","KeywordsWrapper","KeywordItemWrapper","Keywords","keyword","useHistory","keywordsItem","keywordItem","CollectionWrapper","CollectionContent","bg","CollectionName","CollectionDescription","CollectionButton","Collection","collection","belongs_to_collection","backdrop_path","parts","path","hasOwnProperty","part","RecommendationCardWrapper","RecommendationCardImgWrapper","RecommendationCardRelease","RecommendationCardImg","RecommendationCardTitleWrapper","RecommendationCardTitle","RecommendationCardRate","SectionTitle","Recommendation","recommendations","getDetails","getCast","getKeywords","getVideos","getSocailLink","getRecommendations","recommendationItems","getTVDetails","getTVCasts","getTVKeywords","getTVVideos","getTVExternalIds","getTVRecommendations","getMovieDetails","getMovieExternalIds","getMovieRecommendations","handleRouting","BackgroundWrapper","backdrop","MovieDetails","request","response","getCollectionDetails","keywordsLoaded","keywords","videoLoaded","socialLinkLoaded","recommendationsLoaded","collectionLoaded","getCollection","showCollection","isBelongToCollection","showRecommendations","isRecommendation","keywordId","loadingCast","loadingKeywords","modalWindowToggle","keywordsRequested","movieDetailsReducer","movieDetails","ScrollToTop","prevProps","window","scrollTo","children","withRouter","MoviesServices","getResource","fetch","_baseApi","_apiKey","_apiLanguage","json","status_code","getMovieByKeyword","getKeywordName","getPersonBiography","personId","biography","combinedMoviesTv","tvId","getTVPopular","getTVAiringToday","getTVTopRated","getTVOnTheAir","getPopularPerson","collectionId","getGenreList","getPersonExternalIds","getInTrend","time","MovieCardWrapper","MovieCardImg","MovieCardContent","MovieCardTitle","MovieCardReleaseDate","MovieCardDescription","HeaderWrapper","KeywordName","MovieQuantity","MovieListByKeywords","totalResults","keywordName","moviesItem","film","MovieListWrapper","ButtonWrapper","MoviesByKeyword","onLoadingMovies","setState","totalPages","onToogleLoading","moviesServices","total_results","total_pages","onLoadingKeywordName","showButton","CastNumber","CastItemImg","CastNameWrapper","CastContent","DepartmentTitle","Actors","Crew","crew","CrewDepartment","department","job","MovieName","MovieReleaseYear","MoviePosterImg","MovieContent","ButtonBack","FullCast","onGoBack","goBack","spinnerActors","spinnerCrew","MovieListItemWrapper","hasBorder","ReleaseDate","MovieTitle","LikeCharacter","Character","MoviePreviewButton","CircleHover","show","PopoverImgWrapper","PopoverPoster","PopoverContentWrapper","PopoverTitleWrapper","PopoverTitle","PopoverDescription","PopoverRate","DepartmentListTitle","MovieListContent","FilterWrapper","ClearButton","HistoryItem","date","useRef","useState","setShow","setTarget","handleClick","event","rate","toFixed","tvEpisodes","episode_count","container","current","rootClose","onHide","media_type","textEllipsis","yearFormatter","PersonDetailsCasts","setCastItem","filterSelected","setFilterSelected","noDateCasts","sortedCast","previous","Date","allCasts","filteredByMovieType","filteredByTVType","movieQuantity","tvQuantity","arr","next","fullDateToYear","useEffect","data","onSelect","content","clearButton","DropdownButton","Dropdown","Item","PersonDetailsCrew","noDateCrew","sortedCrew","Department","CrewByDepartments","filteredCrew","production","writing","art","camera","makeUp","crews","directing","editing","lighting","sound","visualEffects","DescriptionWrapper","BioWrapper","BioContent","mainHeight","childRef","PersonalInfo","PersonalInfoItemTitle","PersonalInfoItemSubtitle","AlsoKnowWrapper","ReadMoreButton","FamousCast","PersonDetails","person","isOpen","setOpen","elementHeight","setElementHeight","element","clientHeight","getElementHeight","gender","alsoKnow","also_known_as","birthday","ageAlive","deathday","diff","ageDead","dateOfDeath","acting","filmCrew","famousCast","known_for_department","place_of_birth","PersonBiography","onLoading","getBiography","getPersonSocailLink","onLoadingLink","spinnerPerson","TVPopularPage","loadTV","loadMoreTv","popularTvMoreRequested","popularTvMoreLoaded","tv","popularTvRequested","popularTvLoaded","tvPageReducer","popularTv","AiringTodayPage","loadMoreTV","airingTodayTvMoreRequested","airingTodayTvMoreLoaded","airingTodayTvRequested","airingTodayTvLoaded","airingTodayTv","airingTodayPage","TVTopRatedPage","topRatedTvTvMoreRequested","topRatedTvTvMoreLoaded","topRatedTvRequested","topRatedTvTvLoaded","topRatedTv","OnTheAirPage","onTheAirTvMoreRequested","onTheAirTvMoreLoaded","onTheAirTvRequested","onTheAirTvLoaded","onTheAirTv","onTheAirPage","PersonItemWrapper","PersonImg","PersonNameWrapper","PersonName","PersonCast","PersonList","getPerson","personItem","known_for","castToString","xs","spinner","Pagination","count","boundaryCount","onChange","PersonPage","onServiceRequest","popularPersonError","popularPersonLoaded","search","loadPerson","loadMorePerson","popularPersonRequested","popularPersonReducer","large","CastImgWrapper","Section","CollectionCast","onGoToPersonDetails","onGoToMovieDetails","sm","crewItem","partItem","DetailsTitleWrapper","DetailsContentWrapper","CollectionDetails","averageVote","reduce","sum","movieOverview","genresList","Object","keys","forEach","genre_ids","uniquesToString","array","indexOf","CollectionPage","loadCollection","movieIds","getGenresName","onLoadingGenres","genresObj","ids","total","onLoadingDetails","totalRevenue","onLoadingCast","template","TogglerWrapper","ToggleItem","isActive","ToggleActive","Toggler","names","loadTrend","types","buttonsArray","buttons","setButtons","setWidth","clientWidth","toggleItems","reference","currentTarget","onToggle","SectionTitleWrapper","TrendCardWrapper","TrendCardImg","TrendCardTitleWrapper","TrendCardTitle","TrendCardRelease","InTrend","inTrend","trendItems","HomePageWrapper","HomePageSubTitle","inTrendRequested","inTrendLoaded","inTrendError","homePageReducer","trending","App","exact","from","render","match","params","initialState","action","combineReducers","store","createStore","composeWithDevTools","ErrorBoundry","hasError","ReactDOM","StrictMode","Provider","getElementById"],"mappings":"o5HAMA,IAAMA,EAAgBC,IAAOC,IAAV,KAMbC,EAAcF,IAAOC,IAAV,KAMXE,EAAcH,IAAOC,IAAV,KAQXG,EAAqBJ,IAAOC,IAAV,KAwETI,EAlEA,WACX,OACI,kBAACN,EAAD,KACI,kBAACO,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,KACI,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMO,GAAG,mBAAT,gBAGR,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAD,KACI,kBAACE,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAAaC,MAAM,uCAASJ,GAAG,sBAC3B,kBAACV,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,mBAAT,iEAEJ,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,uBAAT,oFAEJ,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,oBAAT,2DAEJ,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,qBAAT,6CAMpB,kBAACL,EAAD,KACI,kBAACE,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAAaC,MAAM,6CAAUJ,GAAG,sBAC5B,kBAACV,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,gBAAT,iEAEJ,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,qBAAT,qFAEJ,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,mBAAT,oFAEJ,kBAACN,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,kBAAT,6CAMpB,kBAACL,EAAD,KACI,kBAACE,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACC,EAAA,EAAD,CAAaC,MAAM,2BAAOJ,GAAG,sBACzB,kBAACV,EAAD,KACI,kBAAC,IAAD,CAAMM,GAAG,YAAT,iG,2BCnErBS,G,OAjBC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACRC,EAAU,6CAAyCD,EAAW,SAAW,IAE/E,OACI,yBAAKJ,UAAWK,GACZ,yBAAKL,UAAU,uCACX,yBAAKA,UAAU,oBACX,8BAAW,8BAAW,mC,yUCL1C,IAAMM,EAAcrB,IAAOC,IAAV,KACJ,SAAAqB,GAAK,OAAIA,EAAMC,MAAQ,OAAS,UAC/B,SAAAD,GAAK,OAAIA,EAAMC,MAAQ,OAAS,UAC9B,SAAAD,GAAK,OAAIA,EAAMC,MAAQ,WAAa,YAmCrCC,EAvBF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAMF,EAAW,EAAXA,MAEjB,OACI,kBAACF,EAAD,CAAaE,MAAOA,GAChB,kBAAC,IAAD,CACIG,MAAc,GAAPD,EACPE,YAAc,EACdC,kBAAqB,EACrBC,KAAI,UAAc,IAATJ,EAAa,KAAe,GAAPA,EAAY,KAC1CK,OAAQC,YAAY,CAChBC,SAAU,EACVC,cAAe,OACfC,uBAAwB,GACxBC,UAAWV,EAAO,EAAI,UAAYA,EAAO,EAAI,UAAX,UAClCW,UAAW,OACXC,WAAY,UACZC,gBAAiB,a,iBCvBtBC,G,OAVS,WACpB,OACI,yBAAKxB,UAAU,yCACX,yBAAKA,UAAU,qBACX,kC,6xCCChB,IAAMyB,EAAgBxC,IAAOC,IAAV,KAQbwC,EAAsBzC,IAAOC,IAAV,KASnByC,EAAe1C,IAAOC,IAAV,KAMZ0C,EAAiB3C,YAAO0C,EAAP1C,CAAH,KAKd4C,EAAS5C,IAAO6C,IAAV,KAQNC,EAAiB9C,IAAO+C,OAAV,KAiELC,EAjDG,SAAC,GAA6D,IAA5DC,EAA2D,EAA3DA,OAAQC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QACxDC,EAAaN,EAAOO,KAAI,SAACC,EAAMC,GAAW,IACrCzC,EAA4EwC,EAA5ExC,MAAO0C,EAAqEF,EAArEE,YAAaC,EAAwDH,EAAxDG,aAAcC,EAA0CJ,EAA1CI,aAAchD,EAA4B4C,EAA5B5C,GAAIiD,EAAwBL,EAAxBK,KAAMC,EAAkBN,EAAlBM,eAC3DC,EAAML,EAAe,gDAAkDA,EAAgBM,oCAE7F,OACI,kBAACC,EAAA,EAAD,CAAKC,IAAKT,EAAO3C,UAAU,4CACvB,kBAACyB,EAAD,CACI4B,QAAS,WACLd,EAAQe,KAAR,UAAgBjB,GAAhB,OAAsBvC,MAG9B,kBAAC+B,EAAD,CAAQoB,IAAKA,EAAKM,IAAKrD,GAAS6C,IAChC,kBAACrB,EAAD,KACI,kBAACC,EAAD,KACKzB,GAAS6C,GAEd,kBAACnB,EAAD,KACK4B,IAAOX,GAAgBG,GAAgBS,OAAO,eAEnD,kBAAC,EAAD,CACI/C,KAAMoC,EACNtC,OAAK,UAQnBkD,EAAiBvB,EAAU,kBAAC,EAAD,MAAaK,EACxCmB,EAAcvB,EAAc,kBAAC,EAAD,MAAqB,4EAEvD,OACI,kBAACwB,EAAA,EAAD,CAAW5D,UAAU,QACjB,kBAAC6D,EAAA,EAAD,CAAK7D,UAAU,oDACV0D,GAEL,kBAACG,EAAA,EAAD,CAAK7D,UAAU,oDACX,kBAACmD,EAAA,EAAD,KACA,kBAACpB,EAAD,CACIsB,QAAS,kBAAMf,MACjBqB,OClGHG,EAFeC,IAAMC,gBCerBC,EAdW,kBAAM,SAACC,GAC7B,OAAO,SAAC3D,GACJ,OACI,kBAAC,EAAsB4D,SAAvB,MAEQ,SAACC,GACG,OAAO,kBAACF,EAAD,iBAAa3D,EAAb,CAAoB6D,cAAeA,W,QCTrDC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAuB,uBACvBC,GAAgC,gCAChCC,GAA6B,6BAC7BC,GAA4B,4BAC5BC,GAA+B,+BAC/BC,GAA4B,4BAC5BC,GAAoC,oCACpCC,GAAiC,iCACjCC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAAiC,iCACjCC,GAA8B,8BAC9BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAAkC,kCAClCC,GAA+B,+BAE/BC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAmB,mBACnBC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAAiC,iCACjCC,GAA8B,8BAC9BC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAA+B,+BAC/BC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAA8B,8BAC9BC,GAA2B,2BAE3BC,GAA2B,2BAC3BC,GAAwB,wBACxBC,GAAuB,uBAEvBC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAsB,sBAEtBC,GAAiB,iBACjBC,GAAc,cAEdC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAsB,sBAEtBC,GAAe,eAEfC,GAAqB,qBAErBC,GAAoB,oBAEpBC,GAAyB,yBAEzBC,GAAqB,qBACrBC,GAAkB,kBAClBC,GAAiB,iBChDxBC,GAAqB,WACvB,MAAO,CACHC,KAAMC,KA4GRC,GAAiB,WACnB,MAAO,CACHF,KAAMC,KAkHRE,GAAwB,WAC1B,MAAO,CACHH,KAAMC,KAIRG,GAAqB,SAACC,GACxB,MAAO,CACHL,KAAMC,GACNI,YAIFC,GAAoB,WACtB,MAAO,CACHN,KAAMC,KAIRM,GAAgB,WAClB,MAAO,CACHP,KAAMC,KAIRO,GAAa,SAACH,GAChB,MAAO,CACHL,KAAMC,GACNI,YCvQFI,G,4MAUFC,WAAa,SAACC,GAAa,IAAD,EAC4B,EAAK/H,MAAhD6D,EADe,EACfA,cAAesD,EADA,EACAA,mBAAoBa,EADpB,EACoBA,KAE1CnE,EAAcoE,WAAWD,EAAO,GAC3BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAInB,Q,EAGxBoB,eAAiB,WAAO,IAAD,EACiD,EAAKvI,MAAlEwI,EADY,EACZA,wBAAyBC,EADb,EACaA,2BADb,EACyCT,KAEjD,MAGXS,IACA,EAAKX,WAAWU,K,mEAvBhBE,SAAS/I,MAAQgJ,KAAK3I,MAAML,MAEvBgJ,KAAK3I,MAAM2B,OAAOiH,SACnBD,KAAK3I,MAAM6I,yBACXF,KAAKb,WAAWa,KAAK3I,MAAM8I,wB,+BAsBzB,IAAD,EAC2CH,KAAK3I,MAA9C2B,EADF,EACEA,OAAQC,EADV,EACUA,QAASI,EADnB,EACmBA,QAASH,EAD5B,EAC4BA,YAEjC,OACI,kBAAC,EAAD,CACIF,OAAQA,EACRC,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKJ,qB,GAtCRU,aAsDpBC,GAAqB,CACvBJ,oBDrDwB,SAACrB,GACzB,MAAO,CACHL,KAAMC,GACNI,YCmDJoB,uBD5D2B,WAC3B,MAAO,CACHzB,KAAMC,KC2DVF,sBACAsB,2BDpC+B,WAC/B,MAAO,CACHrB,KAAMC,KCmCVmB,wBD5C4B,SAACf,GAC7B,MAAO,CACHL,KAAMC,GACNI,aC4CO/D,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EAC6BA,EAAMC,iBAClE,MAAO,CACH1H,OAH2B,EACxB2H,cAGH1H,QAJ2B,EACTA,QAIlBC,YAL2B,EACAA,YAK3BmG,KAN2B,EACauB,eAiBYL,GAAzBC,CAA6CtB,KC9D1E2B,G,4MAUF1B,WAAa,SAACC,GAAa,IAAD,EAC4B,EAAK/H,MAAhD6D,EADe,EACfA,cAAesD,EADA,EACAA,mBAAoBa,EADpB,EACoBA,KAE1CnE,EAAc4F,cAAczB,EAAO,GAC9BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAInB,Q,EAGxBoB,eAAiB,WAAO,IAAD,EACuD,EAAKvI,MAAxE0J,EADY,EACZA,2BAA4BC,EADhB,EACgBA,8BADhB,EAC+C3B,KAEvD,MAGX2B,IACA,EAAK7B,WAAW4B,K,mEAvBhBhB,SAAS/I,MAAQgJ,KAAK3I,MAAML,MAExBgJ,KAAK3I,MAAM2B,OAAOiH,SAClBD,KAAK3I,MAAM4J,4BACXjB,KAAKb,WAAWa,KAAK3I,MAAM6J,2B,+BAsBzB,IAAD,EAC2ClB,KAAK3I,MAA9C2B,EADF,EACEA,OAAQC,EADV,EACUA,QAASC,EADnB,EACmBA,YAAaG,EADhC,EACgCA,QAErC,OACI,kBAAC,EAAD,CACIL,OAAQA,EACRC,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKJ,qB,GAtCLU,aAsDvBC,GAAqB,CACvB/B,sBACAyC,0BF5B8B,WAC9B,MAAO,CACHxC,KAAMC,KE2BVwC,uBFvB2B,SAACpC,GAC5B,MAAO,CACHL,KAAMC,GACNI,YEqBJkC,8BFjBkC,WAClC,MAAO,CACHvC,KAAMC,KEgBVqC,2BFZ+B,SAACjC,GAChC,MAAO,CACHL,KAAMC,GACNI,aEYO/D,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EACmCA,EAAMC,iBACxE,MAAO,CACJ1H,OAH4B,EACxBmI,iBAGJlI,QAJ4B,EACNA,QAItBC,YAL4B,EACGA,YAK/BmG,KAN4B,EACgB+B,kBAiBSb,GAAzBC,CAA6CK,KC7D1EQ,G,4MAUFlC,WAAa,SAACC,GAAa,IAAD,EAC4B,EAAK/H,MAAhDgI,EADe,EACfA,KAAMnE,EADS,EACTA,cAAesD,EADN,EACMA,mBAE5BtD,EAAcoG,YAAYjC,EAAO,GAC5BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAInB,Q,EAGxBoB,eAAiB,WAAO,IAAD,EACmD,EAAKvI,MAApEgI,EADY,EACZA,KAAMkC,EADM,EACNA,4BAA6BC,EADvB,EACuBA,yBAEtCnC,EAAO,MAIXkC,IACA,EAAKpC,WAAWqC,K,mEAxBhBzB,SAAS/I,MAAQgJ,KAAK3I,MAAML,MAEvBgJ,KAAK3I,MAAM2B,OAAOiH,SACnBD,KAAK3I,MAAMoK,0BACXzB,KAAKb,WAAWa,KAAK3I,MAAMqK,yB,+BAuBzB,IAAD,EAC2C1B,KAAK3I,MAA9C2B,EADF,EACEA,OAAQC,EADV,EACUA,QAASC,EADnB,EACmBA,YAAaG,EADhC,EACgCA,QAErC,OACI,kBAAC,EAAD,CACIL,OAAQA,EACRC,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKJ,qB,GAvCPU,aAuDrBC,GAAqB,CACvBkB,wBHuB4B,WAC5B,MAAO,CACHhD,KAAMC,KGxBVgD,qBH4ByB,SAAC5C,GAC1B,MAAO,CACHL,KAAMC,GACNI,YG9BJyC,4BHkCgC,WAChC,MAAO,CACH9C,KAAMC,KGnCV8C,yBHuC6B,SAAC1C,GAC9B,MAAO,CACHL,KAAMC,GACNI,YGzCJN,uBAGWzD,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EAC8BA,EAAMC,iBACnE,MAAO,CACH1H,OAH2B,EACxB2I,eAGHtC,KAJ2B,EACRuC,aAInB3I,QAL2B,EACMA,QAKjCC,YAN2B,EACeA,eAiBUqH,GAAzBC,CAA6Ca,KChE1EQ,G,4MAUF1C,WAAa,SAACC,GAAa,IAAD,EAC4B,EAAK/H,MAAhD6D,EADe,EACfA,cAAesD,EADA,EACAA,mBAAoBa,EADpB,EACoBA,KAE1CnE,EAAc4G,YAAYzC,EAAO,GAC5BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAInB,Q,EAGxBoB,eAAiB,WAAO,IAAD,EACmD,EAAKvI,MAApEgI,EADY,EACZA,KAAM0C,EADM,EACNA,yBAA0BC,EADpB,EACoBA,4BAEnC3C,EAAO,MAGX2C,IACA,EAAK7C,WAAW4C,K,mEAvBhBhC,SAAS/I,MAAQgJ,KAAK3I,MAAML,MAEvBgJ,KAAK3I,MAAM2B,OAAOiH,SACnBD,KAAK3I,MAAM4K,0BACXjC,KAAKb,WAAWa,KAAK3I,MAAM6K,yB,+BAsBzB,IAAD,EAC2ClC,KAAK3I,MAA9C2B,EADF,EACEA,OAAQC,EADV,EACUA,QAASC,EADnB,EACmBA,YAAaG,EADhC,EACgCA,QAErC,OACI,kBAAC,EAAD,CACIL,OAAQA,EACRC,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKJ,qB,GAtCPU,aAsDrBC,GAAqB,CACvB0B,wBJD4B,WAC5B,MAAO,CACHxD,KAAMC,KIAVwD,qBJIyB,SAACpD,GAC1B,MAAO,CACHL,KAAMC,GACNI,YINJkD,4BJUgC,WAChC,MAAO,CACHvD,KAAMC,KIXVqD,yBJe6B,SAACjD,GAC9B,MAAO,CACHL,KAAMC,GACNI,YIjBJN,uBAGWzD,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EAC8BA,EAAMC,iBACnE,MAAO,CACH1H,OAH2B,EACxBmJ,eAGHlJ,QAJ2B,EACRA,QAInBC,YAL2B,EACCA,YAK5BmG,KAN2B,EACc+C,gBAiBW7B,GAAzBC,CAA6CqB,K,u0DChEhF,IAAMQ,GAAkBtM,IAAOC,IAAV,MAkBfsM,GAAYvM,IAAOC,IAAV,MAMTuM,GAAkBxM,IAAOC,IAAV,MAOfwM,GAAUzM,IAAO6C,IAAV,MAQP6J,GAAW1M,IAAOC,IAAV,MAOR0M,GAAgB3M,IAAOC,IAAV,MAMb2M,GAAa5M,IAAO+C,OAAV,MAgBV8J,GAAa7M,YAAO4M,GAAP5M,CAAH,MAIV8M,GAAkB9M,IAAOC,IAAV,MA2FN8M,GAhFF,SAAC,GAA0B,IAsDhCC,EAtDOC,EAAwB,EAAxBA,MAAOpM,EAAiB,EAAjBA,GAAIyC,EAAa,EAAbA,QAuBhB4J,EAAgB,SAACrM,GACnByC,EAAQe,KAAR,kBAAwBxD,KAWtBsM,EARSF,EAARG,KAEyBC,MAAK,SAACC,EAAGC,GAGrC,OAFiBD,EAAEE,MACHD,EAAEC,SAIcC,QAAO,SAAChK,EAAMC,GAAP,OAAiBA,GAAS,KAChEF,KAAI,SAACC,EAAMC,GACR,IAAIM,EAAMP,EAAKiK,aAAgB,gDAAkDjK,EAAKiK,aAAiBzJ,oCACvG,OACI,kBAACuI,GAAD,CAAiBrI,IAAKT,GAClB,kBAAC+I,GAAD,CACIzI,IAAKA,EACLM,IAAKb,EAAKK,KACVM,QAAS,kBAAM8I,EAAczJ,EAAK5C,OAEtC,kBAAC6L,GAAD,CACItI,QAAS,kBAAM8I,EAAczJ,EAAK5C,MACpC4C,EAAKK,MACP,kBAAC6I,GAAD,KAAgBlJ,EAAKkK,eAOrC,OACI,oCACI,kBAACrB,GAAD,KACI,kBAACC,GAAD,yFACA,kBAAC,KAAD,CAAUqB,YAzDN,SAAC,GAA8B,EAA5BlF,KAA4B,EAAtBtE,QAAsB,EAAbyJ,OAC9B,OACE,0BAAMC,MAAO,CAACC,QAAS,WAwDTC,cAAe,EACfC,YAAa,EACbC,eAAe,EACfC,IAAK,SAAAA,GAAG,OAAKnB,EAAWmB,GACxBC,iBAzDC,SAAC,GAAmC,EAAjCC,MAAiC,EAA1BC,WAA0B,EAAdlK,QACvC,OACI,0BAAM0J,MAAO,CAACC,QAAS,YAyDdZ,GAEL,kBAACP,GAAD,CAAYxI,QAAS,kBAAM4I,EAASuB,cAAa,uBAAGxN,UAAU,8BAC9D,kBAAC8L,GAAD,CAAYzI,QAAS,kBAAM4I,EAASwB,cAAa,uBAAGzN,UAAU,+BAC9D,kBAAC+L,GAAD,CACK1I,QAAS,WAxDlBd,EAAQ+G,SAASC,SAASmE,SAAS,MACnCnL,EAAQe,KAAR,cAAoBxD,EAApB,WAEAyC,EAAQe,KAAR,iBAAuBxD,EAAvB,aAoDI,qMCxID6N,I,OAnBC,SAAC,GAAa,IAGpBC,EAHmB,EAAXC,MAEPlF,QACoB,GAE3B,OACI,4BACIzI,MAAM,IACN4N,MAAM,OACNC,OAAO,MACP9K,IAAK,iCAAmC2K,EAAWxK,IACnD4K,YAAY,IACZC,iBAAe,EACfC,SAAS,Q,q1BCXrB,IAAMC,GAAWlP,IAAOC,IAAV,MAURkP,GAAqBnP,IAAOC,IAAV,MAYlBmP,GAAqBpP,IAAOC,IAAV,MAWlBoP,GAAqBrP,IAAOC,IAAV,MAsBTqP,GAlBK,SAAC,GAA2B,IAA1BV,EAAyB,EAAzBA,MAAOW,EAAkB,EAAlBA,aACzB,OACI,kBAACL,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,iIAEI,kBAACC,GAAD,CACIjL,QAASmL,GAET,uBAAGxO,UAAU,mBAGrB,kBAAC,GAAD,CAAS6N,MAAOA,O,q8DC7ChC,IAAMY,GAAaxP,IAAO6C,IAAV,MAQV4M,GAAQzP,IAAOC,IAAV,MAMLyP,GAAO1P,IAAO2P,KAAV,MAKJC,GAAc5P,IAAOC,IAAV,MAIX4P,GAAc7P,IAAOC,IAAV,MAIX6P,GAAO9P,IAAO2P,KAAV,MAOJI,GAAe/P,IAAOgQ,GAAV,MAuBZC,GAAiBjQ,IAAOC,IAAV,MAWdiQ,GAAelQ,IAAOC,IAAV,MAIZkQ,GAAWnQ,IAAOC,IAAV,MAKRmQ,GAAUpQ,IAAOC,IAAV,MAMPoQ,GAAqBrQ,IAAOC,IAAV,MAqFlBqQ,GAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAASjN,EAAa,EAAbA,QACzB,cAAIiN,QAAJ,IAAIA,OAAJ,EAAIA,EAASrG,QAEL,kBAACtF,EAAA,EAAD,CAAK7D,UAAU,oBACX,kBAACmD,EAAA,EAAD,KACI,kBAACmM,GAAD,CACIjM,QAAS,kBAAMd,EAAQe,KAAR,kBAAwBkM,EAAQ,GAAG1P,OAEjD0P,EAAQ,GAAGzM,MAEhB,yFAKL,MAIA0M,GAlGC,SAAC,GAAgF,IAA/EC,EAA8E,EAA9EA,QAASC,EAAqE,EAArEA,QAASC,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,YAAarB,EAAkC,EAAlCA,aAAcX,EAAoB,EAApBA,MAAOtL,EAAa,EAAbA,QACxEK,EAA0I8M,EAA1I9M,YAAa1C,EAA6HwP,EAA7HxP,MAAO2C,EAAsH6M,EAAtH7M,aAAciN,EAAwGJ,EAAxGI,OAAQC,EAAgGL,EAAhGK,QAASjN,EAAuF4M,EAAvF5M,aAAckN,EAAyEN,EAAzEM,QAASC,EAAgEP,EAAhEO,SAAUlN,EAAsD2M,EAAtD3M,KAAMC,EAAgD0M,EAAhD1M,eAAgBkN,EAAgCR,EAAhCQ,iBAAkBC,EAAcT,EAAdS,WAG7HC,EADYN,EAAOrN,KAAI,SAAA4N,GAAK,OAAIA,EAAMtN,QACZuN,KAAK,MAEjCC,EAAYR,GAAWG,EAAoB1M,IAAO+M,SAASR,GAAWG,EAAiB,GAAI,WAAWzM,OAAO,WAAW+M,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAO,KAa5JC,EAAQZ,EAAc,kBAAC,GAAD,CAAahC,MAAOA,EAAOW,aAAcA,IAAkB,KACjFkC,EAAwC,KAArB,OAAL7C,QAAK,IAALA,OAAA,EAAAA,EAAOlF,QAAQQ,QAAe,KAV1C,kBAAC+F,GAAD,KACI,uBAAGlP,UAAU,gBACb,kBAACmP,GAAD,CACI9L,QAAW,kBAAMuM,EAAYD,KADjC,8HASN1M,EAAOL,EAAiE,gDAAkDA,EAApGM,oCACtBsM,EAAUjN,EAAQ+G,SAASC,SAASmE,SAAS,MAAQ,kBAAC,GAAD,CAAW8B,QAASW,EAAY5N,QAASA,IAAa,KAC3GoO,EAAc9N,GAAgBG,EAAhB,WAAqCQ,IAAOX,GAAgBG,GAAgBS,OAAO,QAAnF,KAAgG,KAC9GmN,EAAc/N,GAAgBG,EAAiBQ,IAAOX,GAAgBG,GAAgBS,OAAO,cAAgB,KACnH,OACI,oCACKgN,EACD,kBAACtN,EAAA,EAAD,CAAKnD,UAAU,SACX,kBAACyO,GAAD,CAAYxL,IAAKA,EAAKM,IAAKrD,GAAS6C,KAExC,kBAACI,EAAA,EAAD,CAAKnD,UAAU,wBACf,kBAAC0O,GAAD,KAAQxO,GAAS6C,EAAjB,IAAuB,kBAAC4L,GAAD,KAAOgC,IAE1B,kBAAC9B,GAAD,KACI,kBAAChL,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,sBAAsB4Q,GACrC,kBAACzN,EAAA,EAAD,CAAKnD,UAAU,sCAAqC,kBAAC8O,GAAD,KAAa,uBAAG9O,UAAU,oBAC9E,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,iBAAiBoQ,GAChC,kBAACjN,EAAA,EAAD,CAAKnD,UAAU,sCAAqC,kBAAC8O,GAAD,KAAa,uBAAG9O,UAAU,oBAC9E,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,iBAAiBuQ,IAEpC,kBAAC1M,EAAA,EAAD,CAAK7D,UAAU,yBACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,mBACX,kBAAC,EAAD,CAAMU,KAAMoC,IACZ,kBAACiM,GAAD,mIAEJ,kBAAC5L,EAAA,EAAD,CAAKnD,UAAU,uCACX,kBAACgP,GAAD,KACI,4BAAI,uBAAGhP,UAAU,oBACjB,4BAAI,uBAAGA,UAAU,kBACjB,4BAAI,uBAAGA,UAAU,qBACjB,4BAAI,uBAAGA,UAAU,mBAGzB,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,6BACV0Q,IAGT,kBAAC7M,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,eACX,kBAACqP,GAAD,KAAUW,KAGlB,kBAACnM,EAAA,EAAD,CAAK7D,UAAU,oBACX,kBAACmD,EAAA,EAAD,KACI,kBAACiM,GAAD,wCAIJ,kBAACjM,EAAA,EAAD,KAAM8M,IAETT,M,qqBCnKrB,IAAMqB,GAAkB5R,IAAOC,IAAV,MAUf4R,GAAO7R,IAAOsN,EAAV,MAOJnN,GAAcH,IAAOC,IAAV,MACH,SAAAqB,GAAK,OAAIA,EAAMwQ,MAAQ,gBAAkB,mBAIjDC,GAAqB/R,IAAOC,IAAV,MACT,SAAAqB,GAAK,OAAKA,EAAM0Q,UAAa1Q,EAAM2Q,SAAY3Q,EAAM4Q,UAAqB,QAAT,UA+F1EC,GAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACVC,EAAW,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAUE,MAAK,SAACC,EAAS7O,GAAV,OAA8B,IAAVA,KACjD8O,GAAO,OAACH,QAAD,IAACA,OAAD,EAACA,EAAaI,WAAgC,yBAAKzO,IAAG,+CAAmCqO,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAaI,WAAanO,IAAG,OAAE+N,QAAF,IAAEA,OAAF,EAAEA,EAAavO,OAArI,OAA0BuO,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAavO,KAEpD,OACI,kBAACc,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,oBAAf,oDACA,kBAACmD,EAAA,EAAD,KACKsO,KAMXE,GAAU,SAAC,GAAkB,IAAjBF,EAAgB,EAAhBA,KAAMlJ,EAAU,EAAVA,KACdqJ,EACE,kBAACC,GAAA,EAAD,CAAS/R,GAAG,iBACR,kBAAC+R,GAAA,EAAQC,QAAT,yDACcvJ,IAK1B,OACI,kBAACwJ,GAAA,EAAD,CAAgBC,UAAU,MAAMC,QAASL,GACrC,kBAACf,GAAD,KAAkBY,KAKfS,GAvHS,SAAC,GAAoC,IAAnCxC,EAAkC,EAAlCA,QAASnN,EAAyB,EAAzBA,QAAS4P,EAAgB,EAAhBA,WACjCC,EAAiG1C,EAAjG0C,eAAgBC,EAAiF3C,EAAjF2C,OAAQC,EAAyE5C,EAAzE4C,OAAQC,EAAiE7C,EAAjE6C,QAASC,EAAwD9C,EAAxD8C,kBAAmBC,EAAqC/C,EAArC+C,cAAepB,EAAsB3B,EAAtB2B,SAAUqB,EAAYhD,EAAZgD,SACrFC,EAAyCR,EAAzCQ,YAAaC,EAA4BT,EAA5BS,aAAcC,EAAcV,EAAdU,WAE9BC,EAAK,IAAIC,KAAKC,aACZC,EAAaX,EAASQ,EAAGrP,OAAO6O,GAAQ9B,QAAQ,MAAO,KAAO,IAC9D0C,EAAeX,EAAUO,EAAGrP,OAAO8O,GAAS/B,QAAQ,MAAO,KAAO,IAElE2C,EAAQ5Q,EAAQ+G,SAASC,SAASmE,SAAS,MAAQ,kBAAC,GAAD,CAAW2D,SAAUA,IAAc,KAatFJ,EACF,kBAACH,GAAD,CAAMsC,KAAI,mCAA8BT,GAAeU,OAAO,SAASC,IAAI,uBACvE,uBAAGtT,UAAU,uBAIfkR,EACF,kBAACJ,GAAD,CAAMsC,KAAI,8BAAyBP,GAAcQ,OAAO,SAASC,IAAI,uBACjE,uBAAGtT,UAAU,oBAIfmR,EACF,kBAACL,GAAD,CAAMsC,KAAI,oCAA+BR,GAAgBS,OAAO,SAASC,IAAI,uBACzE,uBAAGtT,UAAU,sBAIfuT,EACF,kBAACzC,GAAD,CAAMsC,KAAMV,EAAUW,OAAO,SAASC,IAAI,uBACtC,uBAAGtT,UAAU,iBAIfwT,EAAkBb,EAAc,kBAAC,GAAD,CAASlB,KAAMR,EAAU1I,KAAM,aAAgB,KAC/EkL,EAAiBZ,EAAc,kBAAC,GAAD,CAASpB,KAAMP,EAAS3I,KAAM,YAAe,KAC5EmL,EAAmBd,EAAe,kBAAC,GAAD,CAASnB,KAAMN,EAAW5I,KAAM,cAAiB,KACnFoL,EAAkBjB,EAAW,kBAAC,GAAD,CAASjB,KAAM8B,EAAUhL,KAAM,sGAAyB,KAE3F,OACI,kBAACpF,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,6BACX,kBAAC,GAAD,CAAa+Q,OAAK,GACd,kBAACC,GAAD,CAAoBC,SAAU0B,EAAazB,QAAS2B,EAAY1B,UAAWyB,GACtEY,EACAC,EACAC,GAEJC,KAIb,kBAAC9P,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,oBAAf,qGACA,kBAACmD,EAAA,EAAD,KAAMiP,GAAkBK,IAE5B,kBAAC5O,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,oBAAf,wCACA,kBAACmD,EAAA,EAAD,KA5DQ,WAChB,OAAQkP,GACJ,IAAK,WACD,MAAO,mDACX,IAAK,mBACD,MAAO,2EACX,QACI,OAAQA,GAqDFuB,KAEV,kBAAC/P,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,oBAAf,6EACA,kBAACmD,EAAA,EAAD,KAA4B,OAAtBqP,EAA8B,+DAAeA,IAEtDW,EACD,kBAACtP,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,oBAAf,wCACA,kBAACmD,EAAA,EAAD,SAAO8P,EAAP,QAEJ,kBAACpP,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,oBAAf,kCACA,kBAACmD,EAAA,EAAD,SAAO+P,EAAP,U,gdCjHhB,IAAMW,GAAkB5U,IAAOC,IAAV,MAMf4U,GAAqB7U,IAAOC,IAAV,MAwCT6U,GA3BE,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,QAAS3R,EAAS,EAATA,IAElBE,EAAU0R,eAENC,EAAeF,EAAQvR,KAAI,SAACuR,EAASrR,GACvC,OACI,kBAACmR,GAAD,CACI1Q,IAAKT,EACLU,QAAS,kBAAMd,EAAQe,KAAR,WAAiBjB,EAAjB,YAAwB2R,EAAQlU,OAE9CkU,EAAQjR,SAKnBoR,EAAsC,IAAxBD,EAAa/K,OAAe,uJAAiC+K,EAEjF,OACI,kBAACL,GAAD,KACI,kBAAC1Q,EAAA,EAAD,CAAKnD,UAAU,oBAAf,mFACA,kBAACmD,EAAA,EAAD,KACKgR,K,8sCC1CjB,IAAMC,GAAoBnV,IAAOC,IAAV,MAKjBmV,GAAoBpV,IAAOC,IAAV,MAEiF,SAAAqB,GAAK,oBAAWA,EAAM+T,GAAjB,QAWvGC,GAAiBtV,IAAOC,IAAV,MAKdsV,GAAwBvV,IAAOC,IAAV,MAMrBuV,GAAmBxV,IAAO+C,OAAV,MA6CP0S,GA5BI,SAAC,GAAoC,IAAnChF,EAAkC,EAAlCA,QAASnN,EAAyB,EAAzBA,QAASoS,EAAgB,EAAhBA,WAE5BC,EAAyBlF,EAAzBkF,sBACA7R,EAA2B6R,EAA3B7R,KAAM8R,EAAqBD,EAArBC,cAAe/U,EAAM8U,EAAN9U,GACrBgV,EAASH,EAATG,MAUDC,EAAI,+DAA2DF,GACrE,OACI,kBAACT,GAAD,KACI,kBAACC,GAAD,CAAmBC,GAAIS,GACvB,kBAACR,GAAD,oDAA0BxR,GAC1B,kBAACyR,GAAD,gHAZAG,EAAWK,eAAe,SACNF,EAAMrS,KAAI,SAAAwS,GAAI,OAAIA,EAAK/U,SACxBoQ,KAAK,MAErB,MASH,kBAACmE,GAAD,CACIpR,QAAS,kBAAMd,EAAQe,KAAR,sBAA4BxD,MAD/C,8G,qhEC9DZ,IAAMoV,GAA4BjW,IAAOC,IAAV,MAIzBiW,GAA+BlW,IAAOC,IAAV,MAW5BkW,GAA4BnW,IAAOC,IAAV,MAUzBmW,GAAwBpW,IAAO6C,IAAV,MAMrBwT,GAAiCrW,IAAOC,IAAV,MAM9BqW,GAA0BtW,IAAOC,IAAV,MAEvBsW,GAAyBvW,IAAOC,IAAV,MAEtBqM,GAAkBtM,IAAOC,IAAV,MAkBf2M,GAAa5M,IAAO+C,OAAV,MAgBV8J,GAAa7M,YAAO4M,GAAP5M,CAAH,MAIVwW,GAAexW,IAAOC,IAAV,MA2FHwW,GAnFQ,SAAC,GAAqK,IA+DrLzJ,EA/DiB0J,EAAmK,EAAnKA,gBAAiBpT,EAAkJ,EAAlJA,QAAS6B,EAAyI,EAAzIA,cAAe8D,EAA0H,EAA1HA,cAAeJ,EAA2G,EAA3GA,sBAAuB8N,EAAoF,EAApFA,WAAYC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,YAAaC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,mBAyB1JC,EAAsBP,EAAgBjJ,QAAO,SAAChK,EAAMC,GAAP,OAAiBA,EAAQ,KACvEF,KAAI,SAACC,EAAMC,GAAW,IACZ7C,EAA8E4C,EAA9E5C,GAAIgD,EAA0EJ,EAA1EI,aAAc5C,EAA4DwC,EAA5DxC,MAAO2C,EAAqDH,EAArDG,aAAcE,EAAuCL,EAAvCK,KAAMC,EAAiCN,EAAjCM,eAAgB6R,EAAiBnS,EAAjBmS,cAC9D5R,EAAM4R,EAAiB,0CAA4CA,EAAkB3R,oCACrF0N,EAAcpN,IAAOX,GAAgBG,GAAgBS,OAAO,cAClE,OACI,kBAACyR,GAAD,CAA2B9R,IAAKT,GAC5B,kBAACwS,GAAD,KACI,kBAACE,GAAD,CACIpS,IAAKA,EACLM,IAAKrD,GAAS6C,EACdM,QAAS,kBAnCX,SAACvD,GACfyC,EAAQ+G,SAASC,SAASmE,SAAS,OACnC5F,IACAI,IACA0N,EAAW9V,EAAIsE,EAAc+R,cAC7BN,EAAQ/V,EAAIsE,EAAcgS,YAC1BN,EAAYhW,EAAIsE,EAAciS,eAC9BN,EAAUjW,EAAIsE,EAAckS,aAC5BN,EAAclW,EAAIsE,EAAcmS,kBAChCN,EAAmBnW,EAAIsE,EAAcoS,sBACrCjU,EAAQe,KAAR,cAAoBxD,MAEpBgI,IACAI,IACA0N,EAAW9V,EAAIsE,EAAcqS,iBAC7BZ,EAAQ/V,EAAIsE,EAAcyR,SAC1BC,EAAYhW,EAAIsE,EAAc0R,aAC9BC,EAAUjW,EAAIsE,EAAc2R,WAC5BC,EAAclW,EAAIsE,EAAcsS,qBAChCT,EAAmBnW,EAAIsE,EAAcuS,yBACrCpU,EAAQe,KAAR,iBAAuBxD,KAeQ8W,CAAc9W,MAEjC,kBAACsV,GAAD,CAA2BpV,UAAW,WAClC,uBAAGA,UAAU,wBADjB,IAC6C4Q,IAGjD,kBAAC0E,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,KAAD,CAAczU,KAAMZ,GAAS6C,EAAMoG,OAAQ,MAE/C,kBAACqM,GAAD,KAAwC,GAAf1S,EAAzB,UAmBpB,OACI,kBAAC,GAAD,KACI,kBAAC2S,GAAD,kFACA,kBAAC,KAAD,CAAU5I,YAhBF,SAAC,GAA8B,EAA5BlF,KAA4B,EAAtBtE,QAAsB,EAAbyJ,OAC9B,OACI,0BAAMC,MAAO,CAACC,QAAS,WAefC,cAAe,EACfC,YAAa,EACbC,eAAe,EACfC,IAAK,SAAAA,GAAG,OAAKnB,EAAWmB,GACxBC,iBAhBK,SAAC,GAAmC,EAAjCC,MAAiC,EAA1BC,WAA0B,EAAdlK,QACvC,OACI,0BAAM0J,MAAO,CAACC,QAAS,YAgBlBkJ,GAEL,kBAAC,GAAD,CAAY7S,QAAS,kBAAM4I,EAASuB,cAAa,uBAAGxN,UAAU,8BAC9D,kBAAC,GAAD,CAAYqD,QAAS,kBAAM4I,EAASwB,cAAa,uBAAGzN,UAAU,iC,oYCnK1E,IAAM6W,GAAoB5X,IAAOC,IAAV,MACkF,SAAAqB,GAAK,yEAAgEA,EAAMuW,SAAtE,QAUxGC,G,4MA4BFnB,WAAa,SAAC9V,EAAIkX,GAAa,IAAD,EACsB,EAAKzW,MAA9CwH,EADmB,EACnBA,mBAAoBE,EADD,EACCA,kBAE3B+O,EAAQlX,GACH2I,MAAK,SAACwO,GACHlP,EAAmBkP,GACfA,GAAYA,EAASrC,uBACrB,EAAKsC,qBAAqBD,EAASrC,sBAAsB9U,OAGhE8I,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxB4N,QAAU,SAAC/V,EAAIkX,GAAa,IAAD,EACiB,EAAKzW,MAAtC0H,EADgB,EAChBA,kBAAmBE,EADH,EACGA,WAE1B6O,EAAQlX,GACH2I,MAAK,SAACwO,GAAD,OAAc9O,EAAW8O,MAC9BrO,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxB6N,YAAc,SAAChW,EAAIkX,GAAa,IAAD,EACiB,EAAKzW,MAA1C4W,EADoB,EACpBA,eAAgBlP,EADI,EACJA,kBAEvB+O,EAAQlX,GACH2I,MAAK,SAACwO,GAAD,OAAcE,EAAeF,EAASG,UAAYH,EAAStO,YAChEC,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxB8N,UAAY,SAACjW,EAAIkX,GAAa,IAAD,EACgB,EAAKzW,MAAvC8W,EADkB,EAClBA,YAAapP,EADK,EACLA,kBAEpB+O,EAAQlX,GACH2I,MAAK,SAACwO,GAAD,OAAcI,EAAYJ,MAC/BrO,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxB+N,cAAgB,SAAClW,EAAIkX,GAAa,IAAD,EACiB,EAAKzW,MAA5C+W,EADsB,EACtBA,iBAAkBrP,EADI,EACJA,kBAEzB+O,EAAQlX,GACH2I,MAAK,SAACwO,GAAD,OAAcK,EAAiBL,MACpCrO,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxBgO,mBAAqB,SAACnW,EAAIkX,GAAa,IAAD,EACiB,EAAKzW,MAAjDgX,EAD2B,EAC3BA,sBAAuBtP,EADI,EACJA,kBAE9B+O,EAAQlX,GACH2I,MAAK,SAAAwO,GAAQ,OAAIM,EAAsBN,EAAStO,YAChDC,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxBiP,qBAAuB,SAACpX,GAAQ,IAAD,EACkC,EAAKS,MAA3D6D,EADoB,EACpBA,cAAeoT,EADK,EACLA,iBAAkBvP,EADb,EACaA,kBAExC7D,EAAcqT,cAAc3X,GACvB2I,MAAK,SAACwO,GAAD,OAAcO,EAAiBP,MACpCrO,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxByP,eAAiB,SAACC,GAA0B,IAAD,EACS,EAAKpX,MAA9CgC,EADgC,EAChCA,QAASmN,EADuB,EACvBA,QAASvN,EADc,EACdA,QAASwS,EADK,EACLA,WAElC,OAAIxS,EACO,kBAAC,EAAD,MACAwV,EACA,kBAAC,GAAD,CAAYjI,QAASA,EAASnN,QAASA,EAASoS,WAAYA,IAE5D,M,EAIfiD,oBAAsB,SAACC,GAAsB,IAAD,EACyD,EAAKtX,MAA/FgC,EADiC,EACjCA,QAASJ,EADwB,EACxBA,QAASwT,EADe,EACfA,gBAAiBvR,EADF,EACEA,cAAe0D,EADjB,EACiBA,sBAAuBI,EADxC,EACwCA,cAEhF,OAAI/F,EACO,kBAAC,EAAD,MACA0V,EAAiB1O,OAEpB,kBAAC,GAAD,CACI5G,QAASA,EACToT,gBAAiBA,EACjBvR,cAAeA,EACfwR,WAAY,EAAKA,WACjBC,QAAS,EAAKA,QACdC,YAAa,EAAKA,YAClBC,UAAW,EAAKA,UAChBC,cAAe,EAAKA,cACpBC,mBAAoB,EAAKA,mBACzBnO,sBAAuBA,EACvBI,cAAeA,IAGf2P,EAAiB1O,YAAtB,EACI,M,kEA1HM,IAAD,EACyED,KAAK3I,MAAvFoP,EADS,EACTA,QAASpN,EADA,EACAA,QAASmN,EADT,EACSA,QAAS5H,EADlB,EACkBA,sBAAuBI,EADzC,EACyCA,cAAe9D,EADxD,EACwDA,cACjEmF,EAAYhH,EAAQ+G,SAApBC,SAEFmG,EAAQvG,SACLI,EAASmE,SAAS,OAClB5F,IACAI,IACAgB,KAAK0M,WAAWjG,EAASvL,EAAc+R,cACvCjN,KAAK2M,QAAQlG,EAASvL,EAAcgS,YACpClN,KAAK4M,YAAYnG,EAASvL,EAAciS,eACxCnN,KAAK6M,UAAUpG,EAASvL,EAAckS,aACtCpN,KAAK8M,cAAcrG,EAASvL,EAAcmS,kBAC1CrN,KAAK+M,mBAAmBtG,EAASvL,EAAcoS,wBAE/C1O,IACAI,IACAgB,KAAK0M,WAAWjG,EAASvL,EAAcqS,iBACvCvN,KAAK2M,QAAQlG,EAASvL,EAAcyR,SACpC3M,KAAK4M,YAAYnG,EAASvL,EAAc0R,aACxC5M,KAAK6M,UAAUpG,EAASvL,EAAc2R,WACtC7M,KAAK8M,cAAcrG,EAASvL,EAAcsS,qBAC1CxN,KAAK+M,mBAAmBtG,EAASvL,EAAcuS,6B,+BAwGjD,IAAD,EACsKzN,KAAK3I,MAAzKoP,EADF,EACEA,QAASmI,EADX,EACWA,UAAWvV,EADtB,EACsBA,QAASmN,EAD/B,EAC+BA,QAASvN,EADxC,EACwCA,QAAS+J,EADjD,EACiDA,MAAO6L,EADxD,EACwDA,YAAaX,EADrE,EACqEA,SAAUY,EAD/E,EAC+EA,gBAAiBnI,EADhG,EACgGA,YAAahC,EAD7G,EAC6GA,MAAOoK,EADpH,EACoHA,kBAAmB9F,EADvI,EACuIA,WAAYwD,EADnJ,EACmJA,gBAExJ,OADsBxT,GAAW4V,GAAeC,EAEtC,kBAAC,EAAD,MAGN,oCACI,kBAACnB,GAAD,CAAmBC,SAAQ,OAAEpH,QAAF,IAAEA,OAAF,EAAEA,EAASmF,eAC9B,kBAACjR,EAAA,EAAD,CAAW5D,UAAU,SACjB,kBAAC6D,EAAA,EAAD,CAAK7D,UAAU,4EACf,kBAAC,GAAD,CAAS0P,QAASA,EAASC,QAASA,EAAS9B,MAAOA,EAAOtL,QAASA,EAASqN,YAAaqI,EAAmBpI,YAAaA,EAAarB,aAAcyJ,OAIjK,kBAACrU,EAAA,EAAD,CAAW5D,UAAU,aACjB,kBAAC6D,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,SACX,kBAAC,GAAD,CAAMkM,MAAOA,EAAOpM,GAAI6P,EAASpN,QAASA,IACzC2G,KAAKwO,eAAL,OAAoBhI,QAApB,IAAoBA,OAApB,EAAoBA,EAASkF,uBAC7B1L,KAAK0O,oBAAoBjC,IAE9B,kBAACxS,EAAA,EAAD,CAAKnD,UAAU,SACX,kBAAC6D,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB6L,QAASA,EAASnN,QAASA,EAAS4P,WAAYA,KAErE,kBAACtO,EAAA,EAAD,CAAK7D,UAAU,eACX,kBAAC,GAAD,CAAUgU,QAASoD,EAAU7U,QAAS2G,KAAK3I,MAAMgC,QAASuV,UAAWA,EAAWzV,IAAK,sB,GA1J1FmH,aAsLrBC,GAAqB,CACvB3B,yBACAC,sBACAE,qBACAC,iBACAC,cACA+P,kBbiEsB,WACtB,MAAO,CACHvQ,KAAMC,KalEVuP,ebsEmB,SAACnP,GACpB,MAAO,CACHL,KAAMC,GACNI,YaxEJiQ,kBb4EsB,WACtB,MAAO,CACHtQ,KAAMC,Ka7EVyP,YbiFgB,SAACrP,GACjB,MAAO,CACHL,KAAMC,GACNI,YanFJsP,iBbuFqB,SAACtP,GACtB,MAAO,CACHL,KAAMC,GACNI,YazFJwP,iBb6FqB,SAACxP,GACtB,MAAO,CACHL,KAAMC,GACNI,Ya/FJuP,sBbmG0B,SAACvP,GAC3B,MAAO,CACHL,KAAMC,GACNI,aanGO/D,OAAoByF,aAhCX,SAACC,GAAW,IAAD,EAC6GA,EAAMwO,oBAClJ,MAAO,CACHzI,QAH2B,EACxB0I,aAGHjW,QAJ2B,EACVA,QAIjB+J,MAL2B,EACDA,MAK1B6L,YAN2B,EACMA,YAMjCX,SAP2B,EACmBA,SAO9CY,gBAR2B,EAC6BA,gBAQxDnI,YAT2B,EAC8CA,YASzEhC,MAV2B,EAC2DA,MAUtFsE,WAX2B,EACkEA,WAW7FwC,WAZ2B,EAC8EA,WAYzGgB,gBAb2B,EAC0FA,mBA+BjElM,GAAzBC,CAA6CqN,KCtN1EsB,G,iLACiBC,GACbpP,KAAK3I,MAAM+I,WAAagP,EAAUhP,UACpCiP,OAAOC,SAAS,EAAG,K,+BAKrB,OAAOtP,KAAK3I,MAAMkY,a,GAREjP,aAYXkP,gBAAWL,I,qCCfLM,GACjB,aAAe,IAAD,gCAMdC,YANc,yCAMA,WAAOvW,GAAP,gBAAAkK,EAAA,sEACQsM,MAAM,GAAD,OAAI,EAAKC,UAAT,OAAoBzW,GAApB,OAA0B,EAAK0W,QAA/B,YAA0C,EAAKC,eAD5D,cACJtQ,EADI,gBAGGA,EAAIuQ,OAHP,mFANA,2DAYdzQ,WAZc,yCAYD,WAAOD,GAAP,gBAAAgE,EAAA,sEACc,EAAKqM,YAAL,8BAAwCrQ,EAAxC,MADd,cACH0O,EADG,yBAEFA,GAFE,2CAZC,2DAiBdR,gBAjBc,yCAiBI,WAAO9G,GAAP,gBAAApD,EAAA,sEACS,EAAKqM,YAAL,iBAA2BjJ,EAA3B,MADT,YACRsH,EADQ,SAE2B,KAAzBA,EAASiC,YAFX,yCAGH,EAAK/C,aAAaxG,IAHf,gCAKPsH,GALO,2CAjBJ,2DAyBdjN,cAzBc,yCAyBE,WAAOzB,GAAP,gBAAAgE,EAAA,sEACW,EAAKqM,YAAL,kCAA4CrQ,EAA5C,MADX,cACN0O,EADM,yBAELA,GAFK,2CAzBF,2DA8BdzM,YA9Bc,yCA8BA,WAAOjC,GAAP,gBAAAgE,EAAA,sEACa,EAAKqM,YAAL,gCAA0CrQ,EAA1C,MADb,cACJ0O,EADI,yBAEHA,GAFG,2CA9BA,2DAmCdjM,YAnCc,yCAmCA,WAAOzC,GAAP,gBAAAgE,EAAA,sEACa,EAAKqM,YAAL,+BAAyCrQ,EAAzC,MADb,cACJ0O,EADI,yBAEHA,GAFG,2CAnCA,2DAwCdpB,QAxCc,yCAwCJ,WAAOlG,GAAP,gBAAApD,EAAA,sEACiB,EAAKqM,YAAL,iBAA2BjJ,EAA3B,cADjB,cACAsH,EADA,yBAECA,GAFD,2CAxCI,2DA6CdnB,YA7Cc,yCA6CA,WAAOnG,GAAP,gBAAApD,EAAA,sEACa,EAAKqM,YAAL,iBAA2BjJ,EAA3B,eADb,cACJsH,EADI,yBAEHA,GAFG,2CA7CA,2DAkDdlB,UAlDc,yCAkDF,WAAOpG,GAAP,gBAAApD,EAAA,sEACe,EAAKqM,YAAL,iBAA2BjJ,EAA3B,aADf,cACFsH,EADE,yBAEDA,GAFC,2CAlDE,2DAuDdkC,kBAvDc,yCAuDM,WAAOrB,EAAWvP,GAAlB,gBAAAgE,EAAA,sEACO,EAAKqM,YAAL,mBAA6Bd,EAA7B,wBAAsDvP,EAAtD,MADP,cACV0O,EADU,yBAETA,GAFS,2CAvDN,6DA4DdmC,eA5Dc,yCA4DG,WAAOtB,GAAP,gBAAAvL,EAAA,sEACU,EAAKqM,YAAL,mBAA6Bd,EAA7B,MADV,cACPb,EADO,yBAENA,GAFM,2CA5DH,2DAiEdoC,mBAjEc,yCAiEO,WAAOC,GAAP,kBAAA/M,EAAA,sEACO,EAAKqM,YAAL,kBAA4BU,EAA5B,MADP,cACXC,EADW,gBAEc,EAAKX,YAAL,kBAA4BU,EAA5B,uBAFd,cAEXE,EAFW,yBAGV,CAACD,YAAWC,qBAHF,2CAjEP,2DAwEdrD,aAxEc,yCAwEC,WAAOsD,GAAP,gBAAAlN,EAAA,sEACY,EAAKqM,YAAL,cAAwBa,EAAxB,MADZ,cACLxC,EADK,yBAEJA,GAFI,2CAxED,2DA6Edb,WA7Ec,yCA6ED,WAAOqD,GAAP,gBAAAlN,EAAA,sEACc,EAAKqM,YAAL,cAAwBa,EAAxB,cADd,cACHxC,EADG,yBAEFA,GAFE,2CA7EC,2DAkFdZ,cAlFc,yCAkFE,WAAOoD,GAAP,gBAAAlN,EAAA,sEACW,EAAKqM,YAAL,cAAwBa,EAAxB,eADX,cACNxC,EADM,yBAELA,GAFK,2CAlFF,2DAuFdX,YAvFc,yCAuFA,WAAOmD,GAAP,gBAAAlN,EAAA,sEACa,EAAKqM,YAAL,cAAwBa,EAAxB,aADb,cACJxC,EADI,yBAEHA,GAFG,2CAvFA,2DA4FdyC,aA5Fc,yCA4FC,WAAOnR,GAAP,gBAAAgE,EAAA,sEACY,EAAKqM,YAAL,2BAAqCrQ,EAArC,MADZ,cACL0O,EADK,yBAEJA,GAFI,2CA5FD,2DAiGd0C,iBAjGc,yCAiGK,WAAOpR,GAAP,gBAAAgE,EAAA,sEACQ,EAAKqM,YAAL,gCAA0CrQ,EAA1C,MADR,cACT0O,EADS,yBAERA,GAFQ,2CAjGL,2DAsGd2C,cAtGc,yCAsGE,WAAOrR,GAAP,gBAAAgE,EAAA,sEACW,EAAKqM,YAAL,6BAAuCrQ,EAAvC,MADX,cACN0O,EADM,yBAELA,GAFK,2CAtGF,2DA2Gd4C,cA3Gc,yCA2GE,WAAOtR,GAAP,gBAAAgE,EAAA,sEACW,EAAKqM,YAAL,8BAAwCrQ,EAAxC,MADX,cACN0O,EADM,yBAELA,GAFK,2CA3GF,2DAgHd6C,iBAhHc,yCAgHK,WAAOvR,GAAP,gBAAAgE,EAAA,sEACQ,EAAKqM,YAAL,+BAAyCrQ,EAAzC,MADR,cACT0O,EADS,yBAERA,GAFQ,2CAhHL,2DAqHdQ,cArHc,yCAqHE,WAAOsC,GAAP,gBAAAxN,EAAA,sEACW,EAAKqM,YAAL,sBAAgCmB,EAAhC,MADX,cACN9C,EADM,yBAELA,GAFK,2CArHF,2DA0Hd+C,aA1Hc,wBA0HC,6BAAAzN,EAAA,sEACY,EAAKqM,YAAL,sBADZ,cACL3B,EADK,yBAEJA,GAFI,2CA1HD,KA+HdP,oBA/Hc,yCA+HQ,WAAO/G,GAAP,gBAAApD,EAAA,sEACK,EAAKqM,YAAL,iBAA2BjJ,EAA3B,mBADL,cACZsH,EADY,yBAEXA,GAFW,2CA/HR,2DAoIdV,iBApIc,yCAoIK,WAAOkD,GAAP,gBAAAlN,EAAA,sEACQ,EAAKqM,YAAL,cAAwBa,EAAxB,mBADR,cACTxC,EADS,yBAERA,GAFQ,2CApIL,2DAyIdgD,qBAzIc,yCAyIS,WAAOX,GAAP,gBAAA/M,EAAA,sEACI,EAAKqM,YAAL,kBAA4BU,EAA5B,mBADJ,cACbrC,EADa,yBAEZA,GAFY,2CAzIT,2DA8IdiD,WA9Ic,yCA8ID,WAAOC,GAAP,gBAAA5N,EAAA,sEACc,EAAKqM,YAAL,wBAAkCuB,EAAlC,MADd,cACHlD,EADG,yBAEFA,GAFE,2CA9IC,2DAmJdN,wBAnJc,yCAmJY,WAAO7W,GAAP,gBAAAyM,EAAA,sEACC,EAAKqM,YAAL,iBAA2B9Y,EAA3B,sBADD,cAChBmX,EADgB,yBAEfA,GAFe,2CAnJZ,2DAwJdT,qBAxJc,yCAwJS,WAAO1W,GAAP,gBAAAyM,EAAA,sEACI,EAAKqM,YAAL,cAAwB9Y,EAAxB,sBADJ,cACbmX,EADa,yBAEZA,GAFY,2CAxJT,sDACV/N,KAAK4P,SAAW,+BAChB5P,KAAK6P,QAAU,2CACf7P,KAAK8P,aAAe,kB,ouDCE5B,IAAMoB,GAAmBnb,IAAOC,IAAV,MAgBhBmb,GAAepb,IAAO6C,IAAV,MAQZwY,GAAmBrb,IAAOC,IAAV,MAIhBqb,GAAiBtb,IAAOC,IAAV,MAMdsb,GAAuBvb,IAAOC,IAAV,MAKpBub,GAAuBxb,IAAOC,IAAV,MAKpBwb,GAAgBzb,IAAOC,IAAV,MASbI,GAASL,IAAOC,IAAV,MASNyb,GAAc1b,IAAOC,IAAV,MAMX0b,GAAgB3b,IAAOC,IAAV,MAuDJ2b,GAhDa,SAAC,GAAyC,IAAxC3Y,EAAuC,EAAvCA,OAAQ4Y,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,YAE1CxY,EAAU0R,eAEV+G,EAAa9Y,EAAOO,KAAI,SAACC,EAAMC,GAEjC,IAAMiO,EAAcpN,IAAOd,EAAKG,cAAcY,OAAO,cAE/CR,EAAOP,EAAKE,YAAiE,iDAAmDF,EAAKE,YAA1GM,oCAGjC,OACI,kBAACkX,GAAD,CAAkBhX,IAAKT,GACnB,kBAAC0X,GAAD,CACIpX,IAAKA,EACLI,QAAS,WACLd,EAAQe,KAAR,iBAAuBZ,EAAK5C,QAEpC,kBAACwa,GAAD,KACI,kBAACC,GAAD,CACIlX,QAAS,WACLd,EAAQe,KAAR,iBAAuBZ,EAAK5C,OAElC4C,EAAKxC,OACP,kBAACsa,GAAD,KAAuB5J,GACvB,kBAAC6J,GAAD,KACI,kBAAC,KAAD,CAAc3Z,KAAM4B,EAAKuN,SAAU9G,OAAQ,YAOzD8R,EAAwB,IAAjBH,EAAqB,iCAAUA,EAAe,EAAI,uCAAW,6CAE1E,OACI,oCACI,kBAACJ,GAAD,KACI,kBAAC,GAAD,KACI,kBAACC,GAAD,KAAcI,GACd,kBAACH,GAAD,KAAgBE,EAAhB,IAA+BG,KAGtCD,I,0nBCrHb,IAAME,GAAmBjc,IAAOC,IAAV,MAQhBic,GAAgBlc,IAAOC,IAAV,MAKb6C,GAAiB9C,IAAO+C,OAAV,MAeCoZ,G,kDACjB,WAAY7a,GAAQ,IAAD,8BACf,cAAMA,IAmBV8a,gBAAkB,SAACpE,EAAUtO,EAAS2E,GAClC,EAAKgO,SAAS,CACVpZ,OAAO,GAAD,oBAAM,EAAKyH,MAAMzH,QAAjB,aAA4B+U,IAClC9U,SAAS,EACToG,KAAM,EAAKoB,MAAMpB,KAAO,EACxBnG,aAAa,EACb0Y,aAAcnS,EACd4S,WAAYjO,KA3BD,EAgCnBhL,UAAY,SAACwV,GAAe,IACjBvP,EAAQ,EAAKoB,MAAbpB,KAEP,EAAKiT,kBAEL,EAAKC,eAAetC,kBAAkB,EAAK5Y,MAAMuX,UAAWvP,EAAO,GAC9DE,MAAK,SAACwO,GACH,EAAKoE,gBAAgBpE,EAAStO,QAASsO,EAASyE,cAAezE,EAAS0E,iBAvCjE,EA2CnBvC,eAAiB,SAACtB,GACd,EAAK2D,eAAerC,eAAe,EAAK7Y,MAAMuX,WACzCrP,MAAK,SAACwO,GACH,EAAK2E,qBAAqB3E,EAASlU,UA9C5B,EAkDnB6Y,qBAAuB,SAAC3E,GACpB,EAAKqE,SAAS,CACVP,YAAa9D,KApDF,EAwDnBuE,gBAAkB,WACd,EAAKF,SAAS,CACVlZ,aAAa,KA1DF,EA8DnByZ,WAAa,WAAO,IAAD,EACmB,EAAKlS,MAAhCvH,EADQ,EACRA,YAAamZ,EADL,EACKA,WACd5X,EAAcvB,EAAc,kBAAC,EAAD,MAAqB,4EACvD,GAAmB,IAAfmZ,EACA,OACI,kBAACJ,GAAD,KACI,kBAAC,GAAD,CAAgB9X,QAAU,kBAAM,EAAKf,cAChCqB,KAnEjB,EAAKgG,MAAQ,CACTzH,OAAQ,GACRC,SAAS,EACToG,KAAM,EACNnG,aAAa,EACb0Y,aAAc,EACdS,WAAY,EACZR,YAAa,IAEjB,EAAKU,eAAiB,IAAI9C,GAXX,E,gEAefzP,KAAK5G,UAAU4G,KAAK3I,MAAMuX,WAE1B5O,KAAKkQ,eAAelQ,KAAK3I,MAAMuX,a,+BA2DzB,IAAD,EACgD5O,KAAKS,MAAnDzH,EADF,EACEA,OAAQC,EADV,EACUA,QAAS2Y,EADnB,EACmBA,aAAcC,EADjC,EACiCA,YAEtC,OAAI5Y,EACO,kBAAC,EAAD,MAGH,oCACI,kBAAC+Y,GAAD,KACI,kBAAC,GAAD,CACIhZ,OAAQA,EACR4Y,aAAcA,EACdC,YAAaA,KAGhB7R,KAAK2S,kB,GA5FerS,a,koCChC7C,IAAMgC,GAAYvM,IAAOC,IAAV,MAMT4c,GAAa7c,IAAO2P,KAAV,MAIVnD,GAAkBxM,IAAOC,IAAV,MAMf6c,GAAc9c,IAAO6C,IAAV,MAOXka,GAAkB/c,IAAOC,IAAV,MAMfyM,GAAW1M,IAAOC,IAAV,MAMR0M,GAAgB3M,IAAOC,IAAV,MAKb+c,GAAchd,IAAOC,IAAV,MAEXgd,GAAkBjd,IAAOC,IAAV,MAMfid,GAAS,SAAC,GAAsB,IAArBjQ,EAAoB,EAApBA,MAAO3J,EAAa,EAAbA,QAEb8J,EAAQH,EAARG,KAQDD,EANqBC,EAAKC,MAAK,SAACC,EAAGC,GAGrC,OAFiBD,EAAEE,MACHD,EAAEC,SAIchK,KAAI,SAACC,EAAMC,GAC3C,IAAMM,EAAMP,EAAKiK,aAAgB,8CAAgDjK,EAAKiK,aAAiBzJ,oCAEvG,OACI,kBAAC,GAAD,CAAiBE,IAAKT,GAClB,kBAACoZ,GAAD,CACIxY,IAAKb,EAAKK,KACVE,IAAKA,EACLI,QAAS,kBAAMd,EAAQe,KAAR,kBAAwBZ,EAAK5C,QAEhD,kBAACkc,GAAD,KACI,kBAAC,GAAD,CACI3Y,QAAS,kBAAMd,EAAQe,KAAR,kBAAwBZ,EAAK5C,OAC9C4C,EAAKK,MACP,kBAAC,GAAD,KAAgBL,EAAKkK,gBAMrC,OACI,oCACI,kBAAC,GAAD,oGACqB,kBAACkP,GAAD,KAAazP,EAAKlD,SAEvC,kBAAC8S,GAAD,KACK7P,KAMXgQ,GAAO,SAAC,GAAsB,IAArBlQ,EAAoB,EAApBA,MAAO3J,EAAa,EAAbA,QAEX8Z,EAAQnQ,EAARmQ,KAEDC,EAAiB,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAuBrB,OAtBiBF,EAAK5Z,KAAI,SAACC,EAAMC,GAC7B,IAAMM,EAAMP,EAAKiK,aAAgB,8CAAgDjK,EAAKiK,aAAiBzJ,oCAEvG,OAAIR,EAAK6Z,aAAeA,EAEhB,kBAAC,GAAD,CAAiBnZ,IAAKT,GAClB,kBAACoZ,GAAD,CACIxY,IAAKb,EAAKK,KACVE,IAAKA,EACLI,QAAS,WAAOd,EAAQe,KAAR,kBAAwBZ,EAAK5C,QAEjD,kBAACkc,GAAD,KACI,kBAAC,GAAD,CACI3Y,QAAS,WAAOd,EAAQe,KAAR,kBAAwBZ,EAAK5C,OAC/C4C,EAAKK,MACP,kBAAC,GAAD,KAAgBL,EAAK8Z,OAK9B,SAKf,OACI,oCACI,kBAAC,GAAD,oGACqB,kBAACV,GAAD,KAAaO,EAAKlT,SAEvC,kBAAC8S,GAAD,KACI,kBAACC,GAAD,qEACA,kBAACI,EAAD,CAAgBC,WAAY,QAC5B,kBAACL,GAAD,6CACA,kBAACI,EAAD,CAAgBC,WAAY,WAC5B,kBAACL,GAAD,mFACA,kBAACI,EAAD,CAAgBC,WAAY,sBAC5B,kBAACL,GAAD,2BACA,kBAACI,EAAD,CAAgBC,WAAY,SAC5B,kBAACL,GAAD,+DACA,kBAACI,EAAD,CAAgBC,WAAY,cAC5B,kBAACL,GAAD,6CACA,kBAACI,EAAD,CAAgBC,WAAY,YAC5B,kBAACL,GAAD,iCACA,kBAACI,EAAD,CAAgBC,WAAY,aAC5B,kBAACL,GAAD,yDACA,kBAACI,EAAD,CAAgBC,WAAY,eAC5B,kBAACL,GAAD,iCACA,kBAACI,EAAD,CAAgBC,WAAY,UAC5B,kBAACL,GAAD,gHACA,kBAACI,EAAD,CAAgBC,WAAY,mBAC5B,kBAACL,GAAD,yDACA,kBAACI,EAAD,CAAgBC,WAAY,e,2pCC3I5C,IAAM7B,GAAgBzb,IAAOC,IAAV,MAUbI,GAASL,IAAOC,IAAV,MAQNud,GAAYxd,IAAOC,IAAV,MAOTwd,GAAmBzd,IAAO2P,KAAV,MAOhB+N,GAAiB1d,IAAO6C,IAAV,MAOd8a,GAAe3d,IAAOC,IAAV,MAIZ2d,GAAa5d,IAAOC,IAAV,MAQV4d,G,4MAoBFjH,QAAU,SAAClG,EAASqH,GAAa,IAAD,EACY,EAAKzW,MAAtC4H,EADqB,EACrBA,WAAYF,EADS,EACTA,kBAEnB+O,EAAQrH,GACHlH,MAAK,SAACwO,GAAD,OAAc9O,EAAW8O,MAC9BrO,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxB2N,WAAa,SAACjG,EAASqH,GAAa,IAAD,EACiB,EAAKzW,MAA9CwH,EADwB,EACxBA,mBAAoBE,EADI,EACJA,kBAE3B+O,EAAQrH,GACHlH,MAAK,SAACwO,GAAD,OAAclP,EAAmBkP,MACtCrO,OAAM,SAAAC,GAAK,OAAIZ,Q,EAGxB8U,SAAW,WACP,EAAKxc,MAAMgC,QAAQya,U,mEApCD,IAAD,EACwE9T,KAAK3I,MAAvFoP,EADU,EACVA,QAASpN,EADC,EACDA,QAASmN,EADR,EACQA,QAAStL,EADjB,EACiBA,cAAe0D,EADhC,EACgCA,sBAAuBI,EADvD,EACuDA,cACjEqB,EAAYhH,EAAQ+G,SAApBC,SAEFmG,EAAQvG,SACLI,EAASmE,SAAS,OAClB5F,IACAI,IACAgB,KAAK2M,QAAQlG,EAASvL,EAAcgS,YACpClN,KAAK0M,WAAWjG,EAASvL,EAAc+R,gBAEvCrO,IACAI,IACAgB,KAAK2M,QAAQlG,EAASvL,EAAcyR,SACpC3M,KAAK0M,WAAWjG,EAASvL,EAAcqS,qB,+BAyBzC,IAAD,EAC0CvN,KAAK3I,MAA7C2L,EADF,EACEA,MAAO6L,EADT,EACSA,YAAaxV,EADtB,EACsBA,QAASmN,EAD/B,EAC+BA,QAC9BuN,EAAgBlF,EAAc,kBAAC,EAAD,MAAa,kBAAC,GAAD,CAAQ7L,MAAOA,EAAO3J,QAASA,IAC1E2a,EAAcnF,EAAc,kBAAC,EAAD,MAAa,kBAAC,GAAD,CAAM7L,MAAOA,EAAO3J,QAASA,IAEtEoO,EAAcnN,IAAOkM,EAAQ1M,gBAAkB0M,EAAQ7M,cAAcY,OAAO,QAC5ER,EAAOyM,EAAQ9M,YAAiE,8CAAgD8M,EAAQ9M,YAA1GM,oCAEpC,OACI,oCACI,kBAAC,GAAD,KACI,kBAAC,GAAD,KACI,kBAACyZ,GAAD,CAAgB1Z,IAAKA,EAAKM,IAAKmM,EAAQ3M,MAAQ2M,EAAQxP,MAAOmD,QAAS6F,KAAK6T,WAC5E,kBAACH,GAAD,KACI,kBAACH,GAAD,CAAWpZ,QAAS6F,KAAK6T,UAAWrN,EAAQ3M,MAAQ2M,EAAQxP,MACxD,kBAACwc,GAAD,UAAqB/L,EAArB,MAEJ,kBAACkM,GAAD,CACIxZ,QAAS6F,KAAK6T,UADlB,IAEE,uBAAG/c,UAAU,sBAFf,8FAMZ,kBAAC4D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,KACK8Z,GAEL,kBAAC9Z,EAAA,EAAD,KACK+Z,U,GArEN1T,aAwFjBC,GAAqB,CACvB3B,yBACAC,sBACAE,qBACAC,iBACAC,eAGWlE,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EACYA,EAAMwO,oBAEjD,MAAO,CACHzI,QAJ2B,EACxB0I,aAIHlM,MAL2B,EACVA,MAKjB6L,YAN2B,EACHA,eAiB4BtO,GAAzBC,CAA6CoT,K,8mHCnJhF,IAAMK,GAAuBle,IAAOC,IAAV,MACL,SAAAqB,GAAK,OAAKA,EAAM6c,UAA6C,OAAjC,kCAO3CC,GAAcpe,IAAOC,IAAV,MAOXoe,GAAare,IAAOC,IAAV,MAMVqe,GAAgBte,IAAOC,IAAV,MAKbse,GAAYve,IAAOC,IAAV,MAKTue,GAAqBxe,IAAOC,IAAV,MAwBlBwe,GAAcze,IAAOC,IAAV,MAUF,SAACqB,GAAD,OAAWA,EAAMod,KAAO,EAAI,KAQrCC,GAAoB3e,IAAOC,IAAV,MAEjB2e,GAAgB5e,IAAO6C,IAAV,MAObgc,GAAwB7e,IAAOC,IAAV,MAIrB6e,GAAsB9e,IAAOC,IAAV,MAKnB8e,GAAe/e,IAAOC,IAAV,MAMZ+e,GAAqBhf,IAAOC,IAAV,MAKlBgf,GAAcjf,IAAOC,IAAV,MAgBXgc,GAAmBjc,IAAOC,IAAV,MAEhBif,GAAsBlf,IAAOC,IAAV,MAQnBkf,GAAmBnf,IAAOC,IAAV,MAKhBmf,GAAgBpf,IAAOC,IAAV,MAIbof,GAAcrf,IAAO+C,OAAV,MA4FXuc,GAAc,SAAC,GAA6B,IAA5BlS,EAA2B,EAA3BA,KAAMmS,EAAqB,EAArBA,KAAMpB,EAAe,EAAfA,UACxB7a,EAAU0R,eACV7G,EAAMrJ,IAAM0a,OAAO,MAFoB,EAGrBC,oBAAS,GAHY,oBAGtCf,EAHsC,KAGhCgB,EAHgC,OAIjBD,mBAAS,MAJQ,oBAItCrL,EAJsC,KAI9BuL,EAJ8B,KAMvCC,EAAc,SAACC,EAAOnc,GACxBgc,GAAShB,GACTiB,EAAUE,EAAMzL,SAGdpQ,EAAMoJ,EAAKzJ,YAAe,iDAAmDyJ,EAAKzJ,YAAgBM,oCAClG6b,EAAO1S,EAAKvJ,aAAakc,QAAQ,GACjCC,EAAa5S,EAAK6S,cAAL,WAAyB7S,EAAK6S,cAA9B,sDAA0D,KAEvEtI,EAAgB,SAAC9W,EAAI6H,IACA,IAAIgR,IACZlC,gBAAgB3W,GAC1B2I,MAAK,SAACC,GACCA,GAA2B,KAApBA,EAAIwQ,YACX3W,EAAQe,KAAR,sBAA4BxD,IAE5ByC,EAAQe,KAAR,WAAiBqE,EAAjB,YAAyB7H,QAKzC,OACI,kBAACqd,GAAD,CAAsBC,UAAWA,GAC7B,kBAACC,GAAD,KAAcmB,GACd,kBAACf,GAAD,CAAoBrQ,IAAKA,EACrB/J,QAASwb,GACL,kBAACnB,GAAD,CAAaC,KAAMA,KAEvB,kBAAC,KAAD,CACIA,KAAMA,EACNtK,OAAQA,EACR8L,UAAW/R,EAAIgS,QACfC,WAAW,EACXC,OAAQT,GAER,kBAAChN,GAAA,EAAD,KACI,kBAACA,GAAA,EAAQC,QAAT,KACI,kBAAC8L,GAAD,KACI,kBAACC,GAAD,CACI5a,IAAKA,EACLM,IAAK8I,EAAKnM,OAASmM,EAAKtJ,KACxBM,QAAS,kBAAMuT,EAAcvK,EAAKvM,GAAIuM,EAAKkT,gBAGnD,kBAACzB,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,CACI3a,QAAS,kBAAMuT,EAAcvK,EAAKvM,GAAIuM,EAAKkT,cAC7ClT,EAAKnM,OAASmM,EAAKtJ,MACrB,kBAACmb,GAAD,KACI,uBAAGle,UAAU,gBADjB,IACqC+e,IAGzC,kBAACd,GAAD,KAAqBuB,KAAanT,EAAK4D,SAAU,SAKrE,kBAACqN,GAAD,CACIja,QAAS,kBAAMuT,EAAcvK,EAAKvM,GAAIuM,EAAKkT,cAC7ClT,EAAKnM,OAASmM,EAAKtJ,MACrB,kBAACwa,GAAD,SAAiB0B,EAAjB,uBACA,kBAACzB,GAAD,KAAYnR,EAAKO,aAKvB6S,GAAgB,SAACjB,GACnB,OAAOhb,IAAOgb,GAAM/a,OAAO,SAGhBic,GAzJY,SAAC,GAAY,IAAXrT,EAAU,EAAVA,KAAU,EACHqS,mBAAS,IADN,oBAC5BtS,EAD4B,KAClBuT,EADkB,OAESjB,oBAAS,GAFlB,oBAE5BkB,EAF4B,KAEZC,EAFY,KAG7BC,EAAczT,EAAKK,QAAO,SAAChK,GAAD,OAAWA,EAAKG,eAAiBH,EAAKM,kBAEhE+c,EADmB1T,EAAKK,QAAO,SAAChK,GAAD,OAAUA,EAAKG,cAAgBH,EAAKM,kBACrCsJ,MAAK,SAACC,EAAGC,GACzC,IAAMwT,EAAW,IAAIC,KAAK1T,EAAE1J,cAAgB0J,EAAEvJ,gBAE9C,OADgB,IAAIid,KAAKzT,EAAE3J,cAAgB2J,EAAExJ,gBAC5Bgd,KAGfE,EAAQ,uBAAOJ,GAAP,aAAuBC,IAE/BI,EAAsBD,EAASxT,QAAO,SAAAhK,GAAI,MAAwB,UAApBA,EAAK6c,cACnDa,EAAmBF,EAASxT,QAAO,SAAAhK,GAAI,MAAwB,OAApBA,EAAK6c,cAChDc,EAAgBF,EAAoBhX,OACpCmX,EAAaF,EAAiBjX,OAC9BjH,EAAS,SAACgK,GACZ,OAAOA,EAAMzJ,KAAI,SAACC,EAAMC,EAAO4d,GAC3B,GAAI7d,EAAKxC,OAASwC,EAAKK,KAAM,CACzB,IAGIqc,EACAoB,EACW,YALT5P,EAAclO,EAAKG,cAAgBH,EAAKM,eACxCyd,EAAiBjd,IAAOoN,GAAanN,OAAO,QAC5C+a,EAAS9b,EAAKG,cAAiBH,EAAKM,eAAwByd,EAAN,SAG5D,GAAI9d,EAAQ,EACRyc,GAAU,UAAAmB,EAAI5d,UAAJ,eAAYE,cAAe4c,GAAa,UAACc,EAAI5d,UAAL,aAAC,EAAYE,cAAgB4c,GAAa,UAACc,EAAI5d,UAAL,aAAC,EAAYK,gBACzGwd,GAAO,UAAAD,EAAI5d,EAAQ,UAAZ,eAAgBE,cAAe4c,GAAa,UAACc,EAAI5d,EAAQ,UAAb,aAAC,EAAgBE,cAAgB4c,GAAa,UAACc,EAAI5d,EAAQ,UAAb,aAAC,EAAgBK,gBAEtH,OACI,kBAAC,GAAD,CAAaI,IAAKT,EAAO0J,KAAM3J,EAAM8b,KAAMA,EAAMpB,UAAWoD,IAASpB,SAMrFsB,qBAAU,WACN,IAAMC,EAAOze,EAAOge,GACpBP,EAAYgB,KACb,IAEH,IAAMC,EAAW,SAACC,GACd,IAAMF,EAAOze,EAAO2e,GACpBlB,EAAYgB,GACZd,GAAkB,IAShBiB,EAAclB,EAAiB,kBAACtB,GAAD,CAAajb,QAN9B,WAChB,IAAMsd,EAAOze,EAAOge,GACpBP,EAAYgB,GACZd,GAAkB,KAGe,oDAA4D,KAEjG,OACI,oCACI,kBAAC,GAAD,KACI,kBAAC1B,GAAD,qHAEI,kBAACE,GAAD,KACKyC,EACD,kBAACC,GAAA,EAAD,CAAgBjhB,GAAG,wBAAwBI,MAAM,sBAC7C,kBAAC8gB,GAAA,EAASC,KAAV,CAAe5d,QAAS,kBAAMud,EAAST,KAAvC,wCAAqEE,GACrE,kBAACW,GAAA,EAASC,KAAV,CAAe5d,QAAS,kBAAMud,EAASR,KAAvC,2DAAsEE,MAIlF,kBAAClC,GAAD,KACKhS,MC9LfmS,GAAc,SAAC,GAA6B,IAA5B7b,EAA2B,EAA3BA,KAAM8b,EAAqB,EAArBA,KAAMpB,EAAe,EAAfA,UACxB7a,EAAU0R,eACV7G,EAAMrJ,IAAM0a,OAAO,MAFoB,EAGrBC,oBAAS,GAHY,oBAGtCf,EAHsC,KAGhCgB,EAHgC,OAIjBD,mBAAS,MAJQ,oBAItCrL,EAJsC,KAI9BuL,EAJ8B,KAMvCC,EAAc,SAACC,EAAOnc,GACxBgc,GAAShB,GACTiB,EAAUE,EAAMzL,SAGdpQ,EAAMP,EAAKE,YAAe,iDAAmDF,EAAKE,YAAgBM,oCAClG6b,EAAOrc,EAAKI,aAAakc,QAAQ,GACjCC,EAAavc,EAAKwc,cAAL,WAAyBxc,EAAKwc,cAA9B,sDAA0D,KAEvEtI,EAAgB,SAAC9W,EAAI6H,IACA,IAAIgR,IACZlC,gBAAgB3W,GAC1B2I,MAAK,SAACC,GAECA,GAA2B,KAApBA,EAAIwQ,YACX3W,EAAQe,KAAR,sBAA4BxD,IAE5ByC,EAAQe,KAAR,WAAiBqE,EAAjB,YAAyB7H,QAKzC,OACI,kBAACqd,GAAD,CAAsBC,UAAWA,GACzB,kBAACC,GAAD,KAAcmB,GACd,kBAACf,GAAD,CAAoBrQ,IAAKA,EACxB/J,QAASwb,GACF,kBAACnB,GAAD,CAAaC,KAAMA,KAEvB,kBAAC,KAAD,CACIA,KAAMA,EACNtK,OAAQA,EACR8L,UAAW/R,EAAIgS,QACfC,WAAW,EACXC,OAAQT,GAER,kBAAChN,GAAA,EAAD,KACI,kBAACA,GAAA,EAAQC,QAAT,KACI,kBAAC8L,GAAD,KACI,kBAACC,GAAD,CACI5a,IAAKA,EACLM,IAAKb,EAAKxC,OAASwC,EAAKK,KACxBM,QAAS,kBAAMuT,EAAclU,EAAK5C,GAAI4C,EAAK6c,gBAGnD,kBAACzB,GAAD,KACI,kBAACC,GAAD,KACI,kBAACC,GAAD,CACI3a,QAAS,kBAAMuT,EAAclU,EAAK5C,GAAI4C,EAAK6c,cAC7C7c,EAAKxC,OAASwC,EAAKK,MACrB,kBAACmb,GAAD,KACI,uBAAGle,UAAU,gBADjB,IACqC+e,IAGzC,kBAACd,GAAD,KAAqBuB,KAAa9c,EAAKuN,SAAU,SAKrE,kBAACqN,GAAD,CACIja,QAAS,kBAAMuT,EAAclU,EAAK5C,GAAI4C,EAAK6c,cAC7C7c,EAAKxC,OAASwC,EAAKK,MACrB,kBAACwa,GAAD,SAAiB0B,EAAjB,QACA,kBAACzB,GAAD,KAAY9a,EAAK8Z,OAK3BiD,GAAgB,SAACjB,GACnB,OAAOhb,IAAOgb,GAAM/a,OAAO,SAIhByd,GA/GW,SAAC,GAAY,IAAX7E,EAAU,EAAVA,KAClB8E,EAAa9E,EAAK3P,QAAO,SAAChK,GAAD,OAAWA,EAAKG,eAAiBH,EAAKM,kBAE/Doe,EADkB/E,EAAK3P,QAAO,SAAChK,GAAD,OAAUA,EAAKG,cAAgBH,EAAKM,kBACrCsJ,MAAK,SAACC,EAAGC,GACxC,IAAMwT,EAAW,IAAIC,KAAK1T,EAAE1J,cAAgB0J,EAAEvJ,gBAE9C,OADgB,IAAIid,KAAKzT,EAAE3J,cAAgB2J,EAAExJ,gBAC5Bgd,KAsBrB,MAnBc,uBAAOmB,GAAP,aAAsBC,IAEV3e,KAAI,SAACC,EAAMC,EAAO4d,GACxC,GAAI7d,EAAKxC,OAASwC,EAAKK,KAAM,CACzB,IAGIqc,EACAoB,EACW,YALT5P,EAAclO,EAAKG,cAAgBH,EAAKM,eACxCyd,EAAiBjd,IAAOoN,GAAanN,OAAO,QAC5C+a,EAAS9b,EAAKG,cAAiBH,EAAKM,eAAwByd,EAAN,SAG5D,GAAI9d,EAAQ,EACRyc,GAAU,UAAAmB,EAAI5d,UAAJ,eAAYE,cAAe4c,GAAa,UAACc,EAAI5d,UAAL,aAAC,EAAYE,cAAgB4c,GAAa,UAACc,EAAI5d,UAAL,aAAC,EAAYK,gBACzGwd,GAAO,UAAAD,EAAI5d,EAAQ,UAAZ,eAAgBE,cAAe4c,GAAa,UAACc,EAAI5d,EAAQ,UAAb,aAAC,EAAgBE,cAAgB4c,GAAa,UAACc,EAAI5d,EAAQ,UAAb,aAAC,EAAgBK,gBAEtH,OACI,kBAAC,GAAD,CAAaI,IAAKT,EAAOD,KAAMA,EAAM8b,KAAMA,EAAMpB,UAAWoD,IAASpB,S,0XC9BrF,IAAMlE,GAAmBjc,IAAOC,IAAV,MAEhBif,GAAsBlf,IAAOC,IAAV,MAMnBkf,GAAmBnf,IAAOC,IAAV,MAwChBmiB,GAAa,SAAC,GAAY,IAAXhF,EAAU,EAAVA,KACjB,OACI,oCACI,kBAAC,GAAD,KAAsBA,EAAK,GAAGE,YAC9B,kBAAC,GAAD,KACI,kBAAC,GAAD,CAAmBF,KAAMA,OAM1BiF,GA9CW,SAAC,GAAY,IAAXjF,EAAU,EAAVA,KAElBkF,EAAe,SAAChF,GAClB,OAAOF,EAAK3P,QAAO,SAAAhK,GAAI,OAAIA,EAAK6Z,aAAeA,MAG7CiF,EAAcD,EAAa,cAAcpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,gBAAtC,KAClDE,EAAWF,EAAa,WAAWpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,aAAtC,KAC5CG,EAAOH,EAAa,OAAOpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,SAAtC,KACpCI,EAAUJ,EAAa,UAAUpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,YAAtC,KAC1CK,EAAUL,EAAa,qBAAqBpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,uBAAtC,KACrDM,EAASN,EAAa,QAAQpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,UAAtC,KACvCO,EAAaP,EAAa,aAAapY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,eAAtC,KAChDQ,EAAWR,EAAa,WAAWpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,aAAtC,KAC5CS,EAAYT,EAAa,YAAYpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,cAAtC,KAC9CU,EAASV,EAAa,SAASpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,WAAtC,KACxCW,EAAiBX,EAAa,kBAAkBpY,OAAgB,kBAAC,GAAD,CAAYkT,KAAMkF,EAAa,oBAAtC,KAE/D,OACI,kBAAC,GAAD,KACKC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,I,swGCpCb,IAAM3W,GAAkBtM,IAAOC,IAAV,MAmBfsM,GAAYvM,IAAOC,IAAV,MAMT2M,GAAa5M,IAAO+C,OAAV,MAgBV8J,GAAa7M,YAAO4M,GAAP5M,CAAH,MAIVwM,GAAkBxM,IAAOC,IAAV,MAOfwM,GAAUzM,IAAO6C,IAAV,MAQP6J,GAAW1M,IAAOC,IAAV,MAQRuP,GAAaxP,IAAO6C,IAAV,MAMVqgB,GAAqBljB,IAAOC,IAAV,MAMlByC,GAAe1C,IAAOC,IAAV,MAMZkjB,GAAanjB,IAAOC,IAAV,MAMVmjB,GAAapjB,IAAOC,IAAV,MAGF,SAAAqB,GAAK,OAAKA,EAAM+hB,YAAc/hB,EAAMgiB,SAAW,IAAO,QAAU,UAM5D,SAAAhiB,GAAK,OAAIA,EAAMgiB,SAAW,QAItCC,GAAevjB,IAAOC,IAAV,MAKZujB,GAAwBxjB,IAAOC,IAAV,MAMrBwjB,GAA2BzjB,IAAOC,IAAV,MAKxByjB,GAAkB1jB,IAAOC,IAAV,MAIf0jB,GAAiB3jB,IAAO+C,OAAV,MAUL,SAAAzB,GAAK,OAAKA,EAAM+hB,YAAc/hB,EAAMgiB,SAAW,IAAO,OAAS,UAgIxEM,GAAa,SAAC,GAAqB,IAyBjC5W,EAzBaI,EAAmB,EAAnBA,KAAM9J,EAAa,EAAbA,QAajBqU,EAAgB,SAAC9W,EAAI6H,IACA,IAAIgR,IACZlC,gBAAgB3W,GAC1B2I,MAAK,SAACC,GACCA,GAA2B,KAApBA,EAAIwQ,YACX3W,EAAQe,KAAR,sBAA4BxD,IAE5ByC,EAAQe,KAAR,WAAiBqE,EAAjB,YAAyB7H,QAOnCsM,EAAWC,EAAKK,QAAO,SAAChK,EAAMC,GAAP,OAAiBA,GAAS,KAClDF,KAAI,SAACC,EAAMC,GACR,IAAIM,EAAMP,EAAKE,YAAe,kDAAoDF,EAAKE,YAAgBM,oCACvG,OACI,kBAAC,GAAD,CAAiBE,IAAKT,GAClB,kBAAC,GAAD,CACIM,IAAKA,EACLM,IAAKb,EAAKK,MAAQL,EAAKxC,MACvBmD,QAAS,kBAAMuT,EAAclU,EAAK5C,GAAI4C,EAAK6c,eAE/C,kBAAC,GAAD,CACIlc,QAAS,kBAAMuT,EAAclU,EAAK5C,GAAI4C,EAAK6c,cAE3C,kBAAC,KAAD,CAAcze,KAAM4B,EAAKK,MAAQL,EAAKxC,MAAOiJ,OAAQ,UAMzE,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,wFACA,kBAAC,KAAD,CAAU0D,YA/CF,SAAC,GAA8B,EAA5BlF,KAA4B,EAAtBtE,QAAsB,EAAbyJ,OAC9B,OACI,0BAAMC,MAAO,CAACC,QAAS,WA8CfC,cAAe,EACfC,YAAa,EACbC,eAAe,EACfC,IAAK,SAAAA,GAAG,OAAKnB,EAAWmB,GACxBC,iBA/CK,SAAC,GAAmC,EAAjCC,MAAiC,EAA1BC,WAA0B,EAAdlK,QACvC,OACI,0BAAM0J,MAAO,CAACC,QAAS,YA+ClBZ,GAEL,kBAAC,GAAD,CAAY/I,QAAS,kBAAM4I,EAASuB,cAAa,uBAAGxN,UAAU,8BAC9D,kBAAC,GAAD,CAAYqD,QAAS,kBAAM4I,EAASwB,cAAa,uBAAGzN,UAAU,iCAK3D8iB,GA3KO,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,OAAQ1W,EAA4B,EAA5BA,KAAMgQ,EAAsB,EAAtBA,KAAMlK,EAAgB,EAAhBA,WACjCQ,EAAyCR,EAAzCQ,YAAaC,EAA4BT,EAA5BS,aAAcC,EAAcV,EAAdU,WAC5BtQ,EAAU0R,eAFwC,EAG9ByK,oBAAS,GAHqB,oBAGjDsE,EAHiD,KAGzCC,EAHyC,OAIdvE,mBAAS,GAJK,oBAIjDwE,EAJiD,KAIlCC,EAJkC,KAalD9iB,EAAa2iB,EAAS,OAAS,GAC/B/f,EAAO8f,EAAOpW,aAAkE,kDAAoDoW,EAAOpW,aAA7GzJ,oCAC9BqW,EAAawJ,EAAOxJ,UAAuD,yBAAKnM,IAAK,SAAAgW,GAAO,OALzE,SAACA,GACtBD,EAAgB,OAACC,QAAD,IAACA,OAAD,EAACA,EAASC,cAIwEC,CAAiBF,KAAWL,EAAOxJ,WAAvH,iIAA+CwJ,EAAOhgB,MAClEwgB,EAA2B,IAAlBR,EAAOQ,OAAe,6CAAY,6CAC3CC,EAAWT,EAAOU,cAAchhB,KAAI,SAACC,EAAMC,GAC7C,OACI,kBAACggB,GAAD,CAAiBvf,IAAKT,GACjBD,MAIPghB,EAAWX,EAAOW,SAAWX,EAAOW,SAAW,IAC/CC,EAAYZ,EAAOW,SAAiBX,EAAOa,SAAW,KAAlB,WAA8BpgB,MAASqgB,KAAT,UAAiBd,EAAOW,UAAY,SAAlE,wBAAN,IAC9BI,EAAUtgB,IAAO,CAACuf,EAAOa,WAAWC,KAAMrgB,IAAO,CAACuf,EAAOW,WAAa,SACtEK,EAAehB,EAAOa,SAAkB,kBAACnB,GAAD,qEAAkC,kBAACC,GAAD,KAA2BK,EAAOa,SAAlC,KAA8CE,EAA9C,yBAAzC,KACjCE,EAAyB,IAAhB3X,EAAKlD,OAAe,kBAAC,GAAD,CAAoBkD,KAAMA,IAAU,KACjE4X,EAA2B,IAAhB5H,EAAKlT,OAAe,kBAAC,GAAD,CAAmBkT,KAAMA,IAAU,KAClE6H,EAA6B,IAAhB7X,EAAKlD,OAAe,kBAAC,GAAD,CAAYkD,KAAMA,EAAM9J,QAASA,IAAa,KAE/E0O,EACF,kBAACH,GAAD,CAAMsC,KAAI,mCAA8BT,GAAeU,OAAO,SAASC,IAAI,uBACvE,uBAAGtT,UAAU,uBAIfkR,EACF,kBAACJ,GAAD,CAAMsC,KAAI,8BAAyBP,GAAcQ,OAAO,SAASC,IAAI,uBACjE,uBAAGtT,UAAU,oBAIfmR,EACF,kBAACL,GAAD,CAAMsC,KAAI,oCAA+BR,GAAgBS,OAAO,SAASC,IAAI,uBACzE,uBAAGtT,UAAU,sBAIfwT,EAAkBb,EAAc,kBAAC,GAAD,CAASlB,KAAMR,EAAU1I,KAAM,aAAgB,KAC/EkL,EAAiBZ,EAAc,kBAAC,GAAD,CAASpB,KAAMP,EAAS3I,KAAM,YAAe,KAC5EmL,EAAmBd,EAAe,kBAAC,GAAD,CAASnB,KAAMN,EAAW5I,KAAM,cAAiB,KAEzF,OACI,oCACI,kBAACpF,EAAA,EAAD,CAAKnD,UAAU,SACX,kBAAC,GAAD,CAAYiD,IAAKA,EAAKM,IAAKwf,EAAOhgB,OAClC,kBAAC8N,GAAD,KACK2C,EACAC,EACAC,GAEL,kBAAC8O,GAAD,8IACA,kBAACC,GAAD,uFACI,kBAACC,GAAD,KAA2BK,EAAOoB,uBAEtC,kBAAC1B,GAAD,0BACI,kBAACC,GAAD,KAA2Ba,IAE/B,kBAACd,GAAD,iFACI,kBAACC,GAAD,KAA2BgB,EAA3B,IAAsCC,IAEzCI,EACD,kBAACtB,GAAD,uFACI,kBAACC,GAAD,KAA2BK,EAAOqB,iBAEtC,kBAAC3B,GAAD,4HACI,kBAACC,GAAD,KAA2Bc,KAGnC,kBAACrgB,EAAA,EAAD,CAAKnD,UAAU,SACX,kBAACmiB,GAAD,KACI,kBAAC,GAAD,KAAeY,EAAOhgB,MACtB,kBAACqf,GAAD,8DACI,kBAACC,GAAD,CACIriB,UAAWK,EACXkiB,SAAUW,EACVZ,WAAYS,EAAOxJ,WACrBA,GACF,kBAACqJ,GAAD,CACIL,SAAUW,EACVZ,WAAYS,EAAOxJ,UACnBlW,QAvFT,WACX4f,GAASD,KAmFO,2DAKe,uBAAGhjB,UAAU,4BAInCkkB,EACAF,EACAC,KCrQII,G,kDACjB,WAAY9jB,GAAQ,IAAD,8BACf,cAAMA,IAiBV+jB,UAAY,SAACrN,EAAU5K,EAAMgQ,GACzB,EAAKf,SAAS,CACVyH,OAAQ9L,EACR9U,SAAS,EACTkK,KAAMA,EACNgQ,KAAMA,KAvBK,EA2BnBkI,aAAe,SAACjL,GACZ,EAAKmC,eAAepC,mBAAmBC,GAClC7Q,MAAK,SAACwO,GACH,EAAKqN,UAAUrN,EAASsC,UAAWtC,EAASuC,iBAAiBnN,KAAM4K,EAASuC,iBAAiB6C,UA9BtF,EAkCnBmI,oBAAsB,SAAClL,GACnB,EAAKmC,eAAexB,qBAAqBX,GACpC7Q,MAAK,SAACwO,GACH,EAAKwN,cAAcxN,OArCZ,EAyCnBwN,cAAgB,SAACxN,GACb,EAAKqE,SAAS,CACVnJ,WAAY8E,KAzChB,EAAKtN,MAAO,CACRoZ,OAAQ,KACR5gB,SAAS,EACTkK,KAAM,KACNgQ,KAAM,KACNlK,WAAY,IAEhB,EAAKsJ,eAAiB,IAAI9C,GATX,E,gEAYE,IACVW,EAAYpQ,KAAK3I,MAAjB+Y,SACPpQ,KAAKqb,aAAajL,GAClBpQ,KAAKsb,oBAAoBlL,K,+BAiCnB,IAAD,EAC6CpQ,KAAKS,MAAhDoZ,EADF,EACEA,OAAQ5gB,EADV,EACUA,QAASkK,EADnB,EACmBA,KAAMgQ,EADzB,EACyBA,KAAMlK,EAD/B,EAC+BA,WAE9BuS,EAAgBviB,EAAU,kBAAC,EAAD,MAAa,kBAAC,GAAD,CAAe4gB,OAAQA,EAAQ1W,KAAMA,EAAMgQ,KAAMA,EAAMlK,WAAYA,IAChH,OACI,kBAACvO,EAAA,EAAD,CAAW5D,UAAU,QACjB,kBAAC6D,EAAA,EAAD,KACK6gB,Q,GAxDwBlb,aCAvCmb,G,4MAQFC,OAAS,SAACtc,GAAa,IAAD,EAC4B,EAAK/H,MAA5CgI,EADW,EACXA,KAAMnE,EADK,EACLA,cAAeyD,EADV,EACUA,eAE5BzD,EAAcsV,aAAanR,EAAO,GAC7BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAIhB,Q,EAGxBgd,WAAa,WAAO,IAAD,EAC6C,EAAKtkB,MAA1DgI,EADQ,EACRA,KAAMuc,EADE,EACFA,uBAAwBC,EADtB,EACsBA,oBAEjCxc,EAAO,MAIXuc,IACA,EAAKF,OAAOG,K,mEAtBR7b,KAAK3I,MAAMykB,GAAG7b,SACdD,KAAK3I,MAAM0kB,qBACX/b,KAAK0b,OAAO1b,KAAK3I,MAAM2kB,oB,+BAuBrB,IAAD,EACuChc,KAAK3I,MAA1CykB,EADF,EACEA,GAAI7iB,EADN,EACMA,QAASC,EADf,EACeA,YAAaG,EAD5B,EAC4BA,QAEjC,OACI,kBAAC,EAAD,CACIL,OAAQ8iB,EACR7iB,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAK2b,iB,GArCNrb,aAqDtBC,GAAqB,CACvBwb,mBzBmDuB,WACvB,MAAO,CACHtd,KAAMC,KyBpDVsd,gBzBwDoB,SAACld,GACrB,MAAO,CACHL,KAAMC,GACNI,YyB1DJ8c,uBzBoE2B,WAC3B,MAAO,CACHnd,KAAMC,KyBrEVmd,oBzByEwB,SAAC/c,GACzB,MAAO,CACHL,KAAMC,GACNI,YyB3EJH,mBAGW5D,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EACwBA,EAAMwb,cAC7D,MAAO,CACHH,GAH2B,EACxBI,UAGH7c,KAJ2B,EACbuB,YAId3H,QAL2B,EACAA,QAK3BC,YAN2B,EACSA,eAiBgBqH,GAAzBC,CAA6Cib,KC7D1EU,G,4MAQDT,OAAS,SAACtc,GAAa,IAAD,EAC4B,EAAK/H,MAA5CgI,EADW,EACXA,KAAMnE,EADK,EACLA,cAAeyD,EADV,EACUA,eAE5BzD,EAAcuV,iBAAiBpR,EAAO,GACjCE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAIhB,Q,EAGxByd,WAAa,WAAO,IAAD,EACqD,EAAK/kB,MAAlEgI,EADQ,EACRA,KAAMgd,EADE,EACFA,2BAA4BC,EAD1B,EAC0BA,wBAErCjd,EAAO,MAIXgd,IACA,EAAKX,OAAOY,K,mEAtBRtc,KAAK3I,MAAMykB,GAAG7b,SACfD,KAAK3I,MAAMklB,yBACXvc,KAAK0b,OAAO1b,KAAK3I,MAAMmlB,wB,+BAuBpB,IAAD,EACuCxc,KAAK3I,MAA1CykB,EADF,EACEA,GAAI7iB,EADN,EACMA,QAASC,EADf,EACeA,YAAaG,EAD5B,EAC4BA,QAElC,OACI,kBAAC,EAAD,CACIL,OAAQ8iB,EACR7iB,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKoc,iB,GArCJ9b,aAqDxBC,GAAqB,CACvBgc,uB1BmF2B,WAC3B,MAAO,CACH9d,KAAMC,K0BpFV8d,oB1BwFwB,SAAC1d,GACzB,MAAO,CACHL,KAAMC,GACNI,Y0B1FJud,2B1B8F+B,WAC/B,MAAO,CACH5d,KAAMC,K0B/FV4d,wB1BmG4B,SAACxd,GAC7B,MAAO,CACHL,KAAMC,GACNI,Y0BrGJH,mBAGW5D,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EACgCA,EAAMwb,cAA9DQ,EADwB,EACxBA,cAAexjB,EADS,EACTA,QAASC,EADA,EACAA,YAC/B,MAAO,CACH4iB,GAAIW,EACJpd,KAJ2B,EACaqd,gBAIxCzjB,UACAC,iBAYoDqH,GAAzBC,CAA6C2b,KC7D1EQ,G,4MAQFjB,OAAS,SAACtc,GAAa,IAAD,EAC4B,EAAK/H,MAA5CgI,EADW,EACXA,KAAMnE,EADK,EACLA,cAAeyD,EADV,EACUA,eAE5BzD,EAAcwV,cAAcrR,EAAO,GAC9BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAIhB,Q,EAGxByd,WAAa,WAAO,IAAD,EACmD,EAAK/kB,MAAhEgI,EADQ,EACRA,KAAMud,EADE,EACFA,0BAA2BC,EADzB,EACyBA,uBAEpCxd,EAAO,MAIXud,IACA,EAAKlB,OAAOmB,K,mEAtBR7c,KAAK3I,MAAMykB,GAAG7b,SACfD,KAAK3I,MAAMylB,sBACX9c,KAAK0b,OAAO1b,KAAK3I,MAAM0lB,uB,+BAuBpB,IAAD,EACuC/c,KAAK3I,MAA1CykB,EADF,EACEA,GAAI7iB,EADN,EACMA,QAASC,EADf,EACeA,YAAaG,EAD5B,EAC4BA,QAEjC,OACI,kBAAC,EAAD,CACIL,OAAQ8iB,EACR7iB,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKoc,iB,GArCL9b,aAqDvBC,GAAqB,CACvBuc,oB3BuIwB,WACxB,MAAO,CACHre,KAAMC,K2BxIVqe,mB3B4IuB,SAACje,GACxB,MAAO,CACHL,KAAMC,GACNI,Y2B9IJ8d,0B3BkJ8B,WAC9B,MAAO,CACHne,KAAMC,K2BnJVme,uB3BuJ2B,SAAC/d,GAC5B,MAAO,CACHL,KAAMC,GACNI,Y2BzJJH,mBAGW5D,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EAC0BA,EAAMwb,cAC/D,MAAO,CACHH,GAH2B,EACxBkB,WAGH3d,KAJ2B,EACZuC,aAIf3I,QAL2B,EACEA,QAK7BC,YAN2B,EACWA,eAiBcqH,GAAzBC,CAA6Cmc,KC7D1EM,G,4MAQFvB,OAAS,SAACtc,GAAa,IAAD,EAC4B,EAAK/H,MAA5CgI,EADW,EACXA,KAAMnE,EADK,EACLA,cAAeyD,EADV,EACUA,eAE5BzD,EAAcyV,cAActR,EAAO,GAC9BE,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIC,YAC1BC,OAAM,SAAAC,GAAK,OAAIhB,Q,EAGxByd,WAAa,WAAO,IAAD,EAC+C,EAAK/kB,MAA5DgI,EADQ,EACRA,KAAM6d,EADE,EACFA,wBAAyBC,EADvB,EACuBA,qBAElC9d,EAAO,MAIX6d,IACA,EAAKxB,OAAOyB,K,mEAtBRnd,KAAK3I,MAAMykB,GAAG7b,SACfD,KAAK3I,MAAM+lB,sBACXpd,KAAK0b,OAAO1b,KAAK3I,MAAMgmB,qB,+BAuBpB,IAAD,EACuCrd,KAAK3I,MAA1CykB,EADF,EACEA,GAAI7iB,EADN,EACMA,QAASC,EADf,EACeA,YAAaG,EAD5B,EAC4BA,QAEjC,OACI,kBAAC,EAAD,CACIL,OAAQ8iB,EACR7iB,QAASA,EACTC,YAAaA,EACbG,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtBjH,UAAa4G,KAAKoc,iB,GArCP9b,aAqDrBC,GAAqB,CACvB6c,oB5B6GwB,WACxB,MAAO,CACH3e,KAAMC,K4B9GV2e,iB5BkHqB,SAACve,GACtB,MAAO,CACHL,KAAMC,GACNI,Y4BpHJoe,wB5BwH4B,WAC5B,MAAO,CACHze,KAAMC,K4BzHVye,qB5B6HyB,SAACre,GAC1B,MAAO,CACHL,KAAMC,GACNI,Y4B/HJH,mBAGW5D,OAAoByF,aAlBX,SAACC,GAAW,IAAD,EAC0BA,EAAMwb,cAAxDqB,EADwB,EACxBA,WAAYrkB,EADY,EACZA,QAASC,EADG,EACHA,YAC5B,MAAO,CACH4iB,GAAIwB,EACJje,KAJ2B,EACUke,aAIrCtkB,UACAC,iBAYoDqH,GAAzBC,CAA6Cyc,K,syBC7DhF,IAAMO,GAAoBznB,IAAOC,IAAV,MAQjBynB,GAAY1nB,IAAO6C,IAAV,MAMT8kB,GAAoB3nB,IAAOC,IAAV,MAIjB2nB,GAAa5nB,IAAOC,IAAV,MAQV4nB,GAAa7nB,IAAOC,IAAV,MA2DD6nB,GAnDI,SAAC,GAAkE,IAAjEhE,EAAgE,EAAhEA,OAAQ5gB,EAAwD,EAAxDA,QAASI,EAA+C,EAA/CA,QAASF,EAAsC,EAAtCA,IAAKkZ,EAAiC,EAAjCA,WAAYyL,EAAqB,EAArBA,UAAWze,EAAU,EAAVA,KACjE0e,EAAalE,EAAOtgB,KAAI,SAAAC,GAAS,IAC5BK,EAAqCL,EAArCK,KAAMmkB,EAA+BxkB,EAA/BwkB,UAAWva,EAAoBjK,EAApBiK,aAAc7M,EAAM4C,EAAN5C,GAChCmD,EAAM0J,EAAgB,gDAAkDA,EAAiBzJ,oCAGzFikB,EADYD,EAAUzkB,KAAI,SAAAsO,GAAK,OAAIA,EAAMhO,MAAQgO,EAAM7Q,SAC9BoQ,KAAK,MAEpC,OACI,kBAACnN,EAAA,EAAD,CAAKC,IAAKtD,EAAIsnB,GAAI,EAAGpnB,UAAU,QAC3B,kBAAC0mB,GAAD,KACI,kBAACC,GAAD,CACI1jB,IAAKA,EACLM,IAAKR,EACLM,QAAS,kBAAMd,EAAQe,KAAR,UAAgBjB,EAAhB,YAAuBvC,OAE1C,kBAAC8mB,GAAD,KACI,kBAACC,GAAD,CACIxjB,QAAS,kBAAMd,EAAQe,KAAR,UAAgBjB,EAAhB,YAAuBvC,MACxCiD,GACF,kBAAC+jB,GAAD,KACI,kBAAC,KAAD,CAAchmB,KAAMqmB,EAAche,OAAQ,YAQ5Dke,EAAUllB,EAAU,kBAAC,EAAD,MAAa8kB,EAEvC,OACI,kBAACrjB,EAAA,EAAD,CAAW5D,UAAU,qBACjB,kBAAC6D,EAAA,EAAD,CAAK7D,UAAU,oDACVqnB,GAEL,kBAACxjB,EAAA,EAAD,CAAK7D,UAAU,oDACX,kBAACsnB,GAAA,EAAD,CACIC,MAAOhM,EACPiM,cAAe,EACfjf,KAAMA,EACNkf,SAAU,SAAC3I,EAAOvW,GACdye,EAAUze,SC7E5Bmf,G,4MAeFC,iBAAmB,SAACpf,GAAU,IAAD,EACiD,EAAKhI,MAAxE6D,EADkB,EAClBA,cAAewjB,EADG,EACHA,mBAAoBC,EADjB,EACiBA,oBAAqBtlB,EADtC,EACsCA,QAE/D6B,EAAc0V,iBAAiBvR,GAC9BE,MAAK,SAACC,GACH,GAAIA,EAAK,CACLnG,EAAQe,KAAK,CACTiG,SAAU,UACVue,OAAO,SAAD,OAAWvf,KAErB,IAAMP,EAAU,CACZ+a,OAAQra,EAAIC,QACZ4S,WAAY7S,EAAIiT,YAChBpT,KAAMG,EAAIH,MAEdsf,EAAoB7f,OAG3BY,OAAM,SAAAC,GAAK,OAAI+e,Q,EAGpBG,WAAa,WAAO,IACTxf,EAAQ,EAAKhI,MAAbgI,KACP,EAAKof,iBAAiBpf,I,EAG1Byf,eAAiB,SAACzf,GACd,EAAKof,iBAAiBpf,I,mEAzCJ,IAAD,EACuCW,KAAK3I,MAAtD0nB,EADU,EACVA,uBAAwBlF,EADd,EACcA,OAAQxgB,EADtB,EACsBA,QAASgG,EAD/B,EAC+BA,KAEhDhG,EAAQe,KAAK,CACTiG,SAAU,UACVue,OAAO,SAAD,OAAWvf,KAGhBwa,EAAO5Z,SACR8e,IACA/e,KAAK6e,gB,+BAkCH,IAAD,EACgD7e,KAAK3I,MAAnDwiB,EADF,EACEA,OAAQ5gB,EADV,EACUA,QAASoZ,EADnB,EACmBA,WAAYhT,EAD/B,EAC+BA,KAAMhG,EADrC,EACqCA,QAE1C,OACI,kBAAC,GAAD,CACIwgB,OAAQA,EACR5gB,QAASA,EACToG,KAAMA,EACNgT,WAAYA,EACZhZ,QAASA,EACTF,IAAKE,EAAQ+G,SAASC,SACtByd,UAAa9d,KAAK8e,qB,GAxDTxe,aAwEnBC,GAAqB,CACvBwe,uB9B+I2B,WAC3B,MAAO,CACHtgB,KAAMC,K8BhJVigB,oB9BoJwB,SAAC7f,GACzB,MAAO,CACHL,KAAMC,GACNI,Y8BtJJ4f,mB9B0JuB,WACvB,MAAO,CACHjgB,KAAMC,M8BzJC3D,OAAoByF,aAhBX,SAACC,GAAW,IAAD,EACaA,EAAMue,qBAClD,MAAO,CACHnF,OAH2B,EACxBA,OAGH5gB,QAJ2B,EAChBA,QAIXoG,KAL2B,EACPA,KAKpBgT,WAN2B,EACDA,cAe0B9R,GAAzBC,CAA6Cge,K,kyCC9EhF,IAAMjc,GAAkBxM,IAAOC,IAAV,MACJ,SAAAqB,GAAK,OAAIA,EAAM4nB,MAAQ,SAAW,WAQ7CC,GAAiBnpB,IAAO6C,IAAV,MACP,SAAAvB,GAAK,OAAIA,EAAM4nB,MAAQ,OAAS,UAC/B,SAAA5nB,GAAK,OAAIA,EAAM4nB,MAAQ,QAAU,UAMzCnM,GAAkB/c,IAAOC,IAAV,MAOfyM,GAAW1M,IAAOC,IAAV,MACG,SAAAqB,GAAK,OAAIA,EAAM4nB,MAAQ,OAAS,UAS3Cvc,GAAgB3M,IAAOC,IAAV,MAIbwb,GAAgBzb,IAAOC,IAAV,MAKbme,GAAcpe,IAAOC,IAAV,MAMXmpB,GAAUppB,IAAOC,IAAV,MAsIEopB,GAjIQ,SAAC,GAAkC,IAAjCjc,EAAgC,EAAhCA,KAAMgQ,EAA0B,EAA1BA,KAAMvH,EAAoB,EAApBA,MAAOvS,EAAa,EAAbA,QAElCgmB,EAAsB,SAACzoB,GACzByC,EAAQe,KAAR,kBAAwBxD,KAGtB0oB,EAAqB,SAAC1oB,GACxByC,EAAQe,KAAR,iBAAuBxD,KAGrBsM,EAAWC,EAAKK,QAAO,SAAChK,EAAMC,GAAP,OAAiBA,EAAQ,MACjDF,KAAI,SAACC,EAAMC,GACR,IAAMM,EAAMP,EAAKiK,aAAe,8CAAgDjK,EAAKiK,aAAgBzJ,oCAErG,OACI,kBAACC,EAAA,EAAD,CAAKslB,GAAI,EAAGrlB,IAAKT,GACb,kBAAC,GAAD,KACI,kBAACylB,GAAD,CACInlB,IAAKA,EACLM,IAAKb,EAAKK,KACVM,QAAS,kBAAMklB,EAAoB7lB,EAAK5C,OAE5C,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIuD,QAAS,kBAAMklB,EAAoB7lB,EAAK5C,MAC1C4C,EAAKK,MACP,kBAAC,GAAD,KACI,kBAAC,KAAD,CAAcjC,KAAM4B,EAAKkK,UAAWzD,OAAQ,YAQlEuf,EAAWrM,EAAK3P,QAAO,SAAChK,EAAMC,GAAP,OAAiBA,EAAQ,KACjDF,KAAI,SAACC,EAAMC,GACR,IAAMM,EAAMP,EAAKiK,aAAe,8CAAgDjK,EAAKiK,aAAgBzJ,oCAErG,OACI,kBAACC,EAAA,EAAD,CAAKslB,GAAI,EAAGrlB,IAAKT,GACb,kBAAC,GAAD,KACI,kBAACylB,GAAD,CACInlB,IAAKA,EACLM,IAAKb,EAAKK,KACVM,QAAS,kBAAMklB,EAAoB7lB,EAAK5C,OAE5C,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIuD,QAAS,kBAAMklB,EAAoB7lB,EAAK5C,MAC1C4C,EAAKK,MACP,kBAAC,GAAD,KAAgBL,EAAK6Z,kBAOvCoM,EAAW7T,EAAMrS,KAAI,SAACwS,EAAMtS,GAC9B,IAAMM,EAAMgS,EAAKrS,YAAc,iDAAmDqS,EAAKrS,YAAeM,oCAEtG,OACI,kBAACC,EAAA,EAAD,CAAKslB,GAAI,GAAIrlB,IAAKT,GACd,kBAAC,GAAD,CAAiBwlB,OAAK,GAClB,kBAACC,GAAD,CACInlB,IAAKA,EACLM,IAAK0R,EAAK/U,MACVioB,OAAK,EACL9kB,QAAS,kBAAMmlB,EAAmBvT,EAAKnV,OAE3C,kBAAC,GAAD,KACI,kBAAC,GAAD,CACIqoB,OAAK,EACL9kB,QAAS,kBAAMmlB,EAAmBvT,EAAKnV,MAEtCmV,EAAK/U,MACN,kBAAC,GAAD,KAAcsD,IAAOyR,EAAKpS,cAAcY,OAAO,gBAEnD,kBAAC,GAAD,KACI,kBAAC,KAAD,CAAc3C,KAAMmU,EAAKhF,SAAU9G,OAAQ,aAQnE,OACI,kBAACvF,EAAA,EAAD,KACI,kBAACykB,GAAD,KACI,kBAACxkB,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,oBACX,kBAAC,GAAD,2FAKR,kBAAC6D,EAAA,EAAD,KACKuI,IAGT,kBAACic,GAAD,KACI,kBAACxkB,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,oBACX,kBAAC,GAAD,mFAKR,kBAAC6D,EAAA,EAAD,KACK6kB,IAGT,kBAACL,GAAD,KACI,kBAACxkB,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,oBACX,kBAAC,GAAD,KACK8U,EAAM3L,OADX,iDAKR,kBAACtF,EAAA,EAAD,KACK8kB,M,sNC9KrB,IAAMC,GAAsB3pB,IAAOC,IAAV,MAKnB2pB,GAAwB5pB,IAAO2P,KAAV,MA0FZka,GArFW,SAAC,GAAuD,IAAtDnU,EAAqD,EAArDA,WAAYpS,EAAyC,EAAzCA,QAAS8N,EAAgC,EAAhCA,MAAOhE,EAAyB,EAAzBA,KAAMgQ,EAAmB,EAAnBA,KAAM9J,EAAa,EAAbA,QAEzDxP,EAAqD4R,EAArD5R,KAAMH,EAA+C+R,EAA/C/R,YAAaqN,EAAkC0E,EAAlC1E,SAAU6E,EAAwBH,EAAxBG,MAAOD,EAAiBF,EAAjBE,cACrCkU,GAAejU,EAAMkU,QAAO,SAACC,EAAKvmB,GACpC,OAAOumB,EAAMvmB,EAAKI,eACnB,GAAKgS,EAAM3L,QAAQ6V,QAAQ,GACvBlP,EAAUO,EAAVP,OACD7M,EAAOL,EAAiE,kDAAoDA,EAAtGM,oCAEtBgmB,EAAiBjZ,GAAW,IAC5BkZ,EAAa,GAEXxU,EAAWK,eAAe,UAAYoU,OAAOC,KAAKhZ,GAAOlH,QACzD2L,EAAMwU,SAAQ,SAAArU,GACVA,EAAKsU,UAAUD,SAAQ,SAAAxpB,GACnBgQ,EAAOwZ,SAAQ,SAAAjZ,GACPA,EAAMvQ,KAAOA,GACbqpB,EAAW7lB,KAAK+M,EAAMtN,eAS9C,IAGMymB,EAHUL,EAAWzc,QAAO,SAAChK,EAAMC,EAAO8mB,GAC5C,OAAOA,EAAMC,QAAQhnB,KAAUC,KAEH2N,KAAK,MAEjCwC,EAAK,IAAIC,KAAKC,aACZE,EAAeX,EAAO,WAAOO,EAAGrP,OAAO8O,GAAS/B,QAAQ,MAAO,MAAS,IAG9E,OACI,oCACI,kBAACqG,GAAD,CAAmBC,SAAUjC,GACrB,kBAACjR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAK7D,UAAU,4EACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,SACX,kBAACyO,GAAD,CAAYxL,IAAKA,EAAKM,IAAKR,KAE/B,kBAACI,EAAA,EAAD,CAAKnD,UAAU,wBACX,kBAAC0O,GAAD,KAAQ3L,GACR,kBAAC8L,GAAD,KACI,kBAAChL,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,CAAKnD,UAAU,YAAYwpB,IAE/B,kBAAC3lB,EAAA,EAAD,CAAK7D,UAAU,yBACX,kBAACmD,EAAA,EAAD,CAAKnD,UAAU,mBACX,kBAAC,EAAD,CAAMU,KAAMqoB,IACZ,kBAACha,GAAD,oIAGR,kBAAClL,EAAA,EAAD,CAAK7D,UAAU,oBACX,kBAACmD,EAAA,EAAD,KACI,kBAACiM,GAAD,wCAIJ,kBAACjM,EAAA,EAAD,KAAM+lB,IAEV,kBAACrlB,EAAA,EAAD,CAAK7D,UAAU,oBACX,kBAACmD,EAAA,EAAD,KACI,kBAACylB,GAAD,mFACmB,kBAACC,GAAD,KAAwB/T,EAAM3L,UAGrD,kBAAChG,EAAA,EAAD,KACI,kBAACylB,GAAD,wCACW,kBAACC,GAAD,KAAwB3V,WASnE,kBAAC,GAAD,CAAgB7G,KAAMA,EAAMgQ,KAAMA,EAAMvH,MAAOA,EAAOvS,QAASA,MC5FtDonB,G,kDACjB,WAAYppB,GAAQ,IAAD,8BACf,cAAMA,IAkBVqpB,eAAiB,SAAC7P,GACd,EAAK0B,eAAehE,cAAcsC,GAC7BtR,MAAK,SAACC,GACH,GAAIA,EAAK,CACL,IAAMmhB,EAAWnhB,EAAIoM,MAAMrS,KAAI,SAAAwS,GAAI,OAAIA,EAAKnV,MAC5C,EAAKwkB,UAAU5b,GACf,EAAKmN,QAAQnN,GACb,EAAK+N,gBAAgBoT,QA1BlB,EA+BnBvF,UAAY,SAACrN,GACT,EAAKqE,SAAS,CACV3G,WAAYsC,EACZ9U,SAAS,KAlCE,EAsCnB2nB,cAAgB,WACZ,EAAKrO,eAAezB,eACfvR,MAAK,SAACC,GACH,EAAKqhB,gBAAgBrhB,OAzCd,EA6CnBqhB,gBAAkB,SAAC9S,GACf,EAAKqE,SAAS,CACV0O,UAAW/S,KA/CA,EAmDnBR,gBAAkB,SAACwT,GACf,IAAMC,EAAQ,GACdD,EAAIX,SAAQ,SAAAxpB,GACR,EAAK2b,eAAehF,gBAAgB3W,GACnC2I,MAAK,SAACwO,GACCA,IACAiT,EAAM5mB,KAAK2T,EAAS1E,SACpB,EAAK4X,iBAAiBD,WA1DnB,EAgEnBC,iBAAmB,SAACD,GAChB,IAAME,EAAeF,EAAMlB,QAAO,SAACC,EAAK7J,GAAN,OAAkB6J,EAAM7J,IAAS,GACnE,EAAK9D,SAAS,CACV/I,QAAS6X,KAnEE,EAuEnBvU,QAAU,SAAClB,GACP,IAAMsV,EAAMtV,EAAWG,MAAMrS,KAAI,SAAAwS,GAAI,OAAIA,EAAKnV,MAC9C,EAAK2b,eAAe5F,QAAQoU,GAC3BxhB,MAAK,SAACC,GACH,EAAK2hB,cAAc3hB,EAAI2D,KAAM3D,EAAI2T,UA3EtB,EAgFnBgO,cAAgB,SAAChe,EAAMgQ,GACnB,EAAKf,SAAS,CACVjP,OACAgQ,UAjFJ,EAAKZ,eAAiB,IAAI9C,GAC1B,EAAKhP,MAAQ,CACTgL,WAAY,KACZxS,SAAS,EACT6nB,UAAW,GACX3d,KAAM,GACNgQ,KAAM,GACN9J,QAAS,GATE,E,iEAaG,IACXwH,EAAgB7Q,KAAK3I,MAArBwZ,aACP7Q,KAAK4gB,gBACL5gB,KAAK0gB,eAAe7P,K,+BAuEd,IAAD,EACyD7Q,KAAKS,MAA5DgL,EADF,EACEA,WAAYxS,EADd,EACcA,QAAS6nB,EADvB,EACuBA,UAAW3d,EADlC,EACkCA,KAAMgQ,EADxC,EACwCA,KAAM9J,EAD9C,EAC8CA,QAC5ChQ,EAAW2G,KAAK3I,MAAhBgC,QACD+nB,EAAWnoB,EAAU,kBAAC,EAAD,MAAa,kBAAC,GAAD,CACIwS,WAAYA,EACZxS,QAASA,EACTI,QAASA,EACT8N,MAAO2Z,EACP3d,KAAMA,EACNgQ,KAAMA,EACN9J,QAASA,IAGrD,OACI,oCAAG+X,O,GAtG6B9gB,a,mwBCH5C,IAAM+gB,GAAiBtrB,IAAOC,IAAV,MAWdsrB,GAAavrB,IAAOC,IAAV,MAEH,SAAAqB,GAAK,OAAIA,EAAMkqB,SAAW,oBAAsB,oBAKvDC,GAAezrB,IAAOC,IAAV,MAIL,SAAAqB,GAAK,OAAKA,EAAMuN,MAAQ,OAAS,KAS9B,SAAAvN,GAAK,4BAAmBA,EAAMuN,MAAzB,UA6DN6c,GAzDC,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MAC1BC,EAAe,CACjB,CACIN,UAAU,EACV3pB,KAAM8pB,EAAM,GACZjjB,KAAMmjB,EAAM,IAEhB,CACIL,UAAU,EACV3pB,KAAM8pB,EAAM,GACZjjB,KAAMmjB,EAAM,KAVuB,EAcbpM,mBAASqM,GAAgB,IAdZ,oBAcpCC,EAdoC,KAc3BC,EAd2B,OAejBvM,mBAAS,GAfQ,oBAepC5Q,EAfoC,KAe7Bod,EAf6B,KAgBrC9d,EAAMqR,iBAAO,MACnBiC,qBAAU,WACFsK,EAAQ,GAAGP,UACXS,EAAS9d,EAAIgS,QAAQ+L,eAG1B,IAEH,IAAI9qB,EAAa2qB,EAAQ,GAAGP,SAAW,eAAiB,gBAalDW,EAAcJ,EAAQvoB,KAAI,SAACC,EAAMC,GACnC,IAAM0oB,EAAY3oB,EAAK+nB,SAAWrd,EAAM,KACxC,OACI,kBAACod,GAAD,CACIC,SAAU/nB,EAAK+nB,SACfrnB,IAAKT,EACLU,QAAS,SAACyb,GAAD,OAjBJ,SAACA,EAAOnc,GACrBuoB,EAASpM,EAAMwM,cAAcH,aAE7BH,EAAQ1B,SAAQ,SAAA5mB,GAAI,OAAIA,EAAK+nB,UAAW,KACxCO,EAAQroB,GAAO8nB,UAAW,EAC1BI,EAAUG,EAAQroB,GAAOgF,MAEzBsjB,EAAWD,GAUiBO,CAASzM,EAAOnc,IACpCyK,IAAKie,GACP3oB,EAAK5B,SAIf,OACI,kBAACypB,GAAD,KACKa,EACD,kBAACV,GAAD,CAAc1qB,UAAWK,EAAYyN,MAAOA,M,y6DClFxD,IAAMvC,GAAkBtM,IAAOC,IAAV,MAkBf2M,GAAa5M,IAAO+C,OAAV,MAgBV8J,GAAa7M,YAAO4M,GAAP5M,CAAH,MAIVusB,GAAsBvsB,IAAOC,IAAV,MAMnBuW,GAAexW,IAAOC,IAAV,MAMZusB,GAAmBxsB,IAAOC,IAAV,MAKhBwsB,GAAezsB,IAAO6C,IAAV,MAOZ6pB,GAAwB1sB,IAAOC,IAAV,MAIrB0sB,GAAiB3sB,IAAOC,IAAV,MAOd2sB,GAAmB5sB,IAAOC,IAAV,MAkFP4sB,GA9EC,SAAC,GAAyC,IAsDlD7f,EAtDU8f,EAAuC,EAAvCA,QAAS3nB,EAA8B,EAA9BA,cAAeymB,EAAe,EAAfA,UAChCtoB,EAAU0R,eAEV2C,EAAgB,SAAC9W,EAAI6H,GACvBvD,EAAcqS,gBAAgB3W,GACzB2I,MAAK,SAACC,GACCA,GAA2B,KAApBA,EAAIwQ,YACX3W,EAAQe,KAAR,sBAA4BxD,IAE5ByC,EAAQe,KAAR,WAAiBqE,EAAjB,YAAyB7H,QAKnCksB,EAAaD,EAAQtpB,KAAI,SAACC,EAAMC,GAAW,IACtC7C,EAAwF4C,EAAxF5C,GAAI+C,EAAoFH,EAApFG,aAAcG,EAAsEN,EAAtEM,eAAgBuc,EAAsD7c,EAAtD6c,WAAYxc,EAA0CL,EAA1CK,KAAM7C,EAAoCwC,EAApCxC,MAAO0C,EAA6BF,EAA7BE,YAAaE,EAAgBJ,EAAhBI,aAC3EG,EAAML,EAAe,0CAA4CA,EAAgBM,oCAC/Esb,EAAOhb,IAAOX,GAAgBG,GAAgBS,OAAO,cAC3D,OACI,kBAACgoB,GAAD,CAAkBroB,IAAKT,GACnB,kBAAC+oB,GAAD,CACIzoB,IAAKA,EACLM,IAAKR,GAAQ7C,EACbmD,QAAS,kBAAMuT,EAAc9W,EAAIyf,MAErC,kBAACoM,GAAD,KACI,kBAACC,GAAD,CACIvoB,QAAS,kBAAMuT,EAAc9W,EAAIyf,KAEhCxc,GAAQ7C,GAEb,kBAAC2rB,GAAD,KACKrN,GAEL,kBAAC,EAAD,CACI9d,KAAMoC,EACNtC,OAAK,SAoBzB,OACI,kBAAC,GAAD,KACI,kBAACgrB,GAAD,KACI,kBAAC,GAAD,qDACA,kBAAC,GAAD,CAASZ,MAAO,CAAC,6CAAW,8EAAmBC,UAAWA,EAAWC,MAAO,CAAC,MAAO,WAExF,kBAAC,KAAD,CAAUje,YAnBF,SAAC,GAA8B,EAA5BlF,KAA4B,EAAtBtE,QAAsB,EAAbyJ,OAC9B,OACI,0BAAMC,MAAO,CAACC,QAAS,WAkBfC,cAAe,EACfC,YAAa,EACbC,eAAe,EACfC,IAAK,SAAAA,GAAG,OAAKnB,EAAWmB,GACxBC,iBAnBK,SAAC,GAAmC,EAAjCC,MAAiC,EAA1BC,WAA0B,EAAdlK,QACvC,OACI,0BAAM0J,MAAO,CAACC,QAAS,YAmBlBgf,GAEL,kBAAC,GAAD,CAAY3oB,QAAS,kBAAM4I,EAASuB,cAAa,uBAAGxN,UAAU,8BAC9D,kBAAC,GAAD,CAAYqD,QAAS,kBAAM4I,EAASwB,cAAa,uBAAGzN,UAAU,iC,ygBCpJ1E,IAAMisB,GAAkBhtB,IAAOC,IAAV,MAefgtB,GAAmBjtB,IAAOC,IAAV,MAgDhBuK,GAAqB,CACvB0iB,iBpCuPqB,WACrB,MAAO,CACHxkB,KAAMC,KoCxPVwkB,cpC4PkB,SAACpkB,GACnB,MAAO,CACHL,KAAMC,GACNI,YoC9PJqkB,apCkQiB,WACjB,MAAO,CACH1kB,KAAMC,MoCjQC3D,OAAoByF,aAdX,SAACC,GAAW,IAAD,EACJA,EAAM2iB,gBACjC,MAAO,CACHP,QAH2B,EACxBA,QAGH5pB,QAJ2B,EACfA,WAawCsH,GAAzBC,EAjDlB,SAAC,GAA2E,IAA1ExJ,EAAyE,EAAzEA,MAAOkE,EAAkE,EAAlEA,cAAegoB,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,aAAcN,EAAsB,EAAtBA,QAAS5pB,EAAa,EAAbA,QAC3E8G,SAAS/I,MAAQA,EAEjB,IAAM2qB,EAAY,SAAC1Q,GACf/V,EAAc8V,WAAWC,GACpB1R,MAAK,SAACC,GAAD,OAAS0jB,EAAc1jB,EAAIC,YAChCC,OAAM,SAAAC,GAAK,OAAIwjB,QAGxB3L,qBAAU,WACNmK,EAAU,SACX,IAEH,IAAM0B,EAAWpqB,EAAU,kBAAC,EAAD,MAAa,kBAAC,GAAD,CAAS4pB,QAASA,EAAS3nB,cAAeA,EAAeymB,UAAWA,IAC5G,OACI,kBAACjnB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,KACI,kBAAC8oB,GAAD,2HAEI,kBAACC,GAAD,mSAMZ,kBAACroB,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,KACKopB,SC1CAC,G,uKAGb,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,GAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAUC,OAAK,EAACC,KAAK,IAAIhtB,GAAG,oBAC5B,kBAAC,KAAD,CAAO+sB,OAAK,EAAC1X,KAAK,kBAAkB4X,OAChC,WACI,OAAO,kBAAC,GAAD,CAAUzsB,MAAM,sBAK/B,kBAAC,KAAD,CAAOusB,OAAK,EAAC1X,KAAK,UAAU4X,OACxB,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAYA,QAASA,OAGpC,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,iBAAiB4X,OAC/B,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAaA,QAASA,EAASrC,MAAM,yGAGpD,kBAAC,KAAD,CAAOusB,OAAK,EAAC1X,KAAK,qBAAqB4X,OACnC,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAgBA,QAASA,EAASrC,MAAM,4HAGvD,kBAAC,KAAD,CAAOusB,OAAK,EAAC1X,KAAK,kBAAkB4X,OAChC,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAcA,QAASA,EAASrC,MAAM,6FAGrD,kBAAC,KAAD,CAAOusB,OAAK,EAAC1X,KAAK,mBAAmB4X,OACjC,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAcA,QAASA,EAASrC,MAAM,iFAGrD,kBAAC,KAAD,CAAOusB,OAAK,EAAC1X,KAAK,kBAAkB4X,OAChC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAgBia,aAAgBja,EAAIyC,QAASA,OAG5D,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,qBAAqB4X,OACnC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,yBAAyB4X,OACvC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,sBAAsB4X,OACpC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,uBAAuB4X,OACrC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,eAAe4X,OAC7B,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAeA,QAASA,OAGvC,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,mBAAmB4X,OACjC,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAiBA,QAASA,OAGzC,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,iBAAiB4X,OAC/B,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAcA,QAASA,OAGtC,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,gBAAgB4X,OAC9B,YAAgB,IAAdpqB,EAAa,EAAbA,QACE,OAAO,kBAAC,GAAD,CAAgBA,QAASA,OAGxC,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,kBAAkB4X,OAChC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,uBAAuB4X,OACrC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,qBAAqB4X,OACnC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,oBAAoB4X,OAClC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAIrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,mBAAmB4X,OACjC,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAU6P,QAAW7P,EAAIyC,QAASA,OAGjD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,gBAAgB4X,OAC9B,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAU6P,QAAW7P,EAAIyC,QAASA,OAGjD,kBAAC,KAAD,CAAOwS,KAAK,gBAAgB4X,OACxB,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAiBgY,UAAahY,EAAIyC,QAASA,OAG1D,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,aAAa4X,OAC3B,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,UAAU4X,OACxB,YAAuB,IAArBC,EAAoB,EAApBA,MAAOrqB,EAAa,EAAbA,QACEzC,EAAM8sB,EAAMC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAc6P,QAAW7P,EAAIyC,QAASA,OAGrD,kBAAC,KAAD,CAAOkqB,OAAK,EAAC1X,KAAK,cAAc4X,OAC5B,YAAc,IACH7sB,EADE,EAAX8sB,MACqBC,OAAZ/sB,GACP,OAAO,kBAAC,GAAD,CAAiBwZ,SAAYxZ,c,GArJnC0J,a,0BCb3BsjB,GAAe,CACjBjjB,cAAe,GACf1H,SAAS,EACTC,aAAa,EACbyG,OAAO,EACPiB,YAAa,EACbO,iBAAkB,GAClBC,eAAgB,EAChBe,eAAgB,GAChBC,aAAc,EACdT,eAAgB,GAChBC,aAAc,GA+GHlB,GA5GU,WAAmC,IAAlCD,EAAiC,uDAAzBmjB,GAAcC,EAAW,uCACvD,OAAQA,EAAOplB,MACX,KAAKC,EAAYvD,yBACb,OAAO,6BACAsF,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYtD,sBACb,OAAO,6BACAqF,GADP,IAEIE,cAAekjB,EAAO/kB,QACtB7F,SAAS,EACT2H,YAAaH,EAAMG,YAAc,IAEzC,KAAKlC,EAAYrD,qBACb,OAAO,6BACAoF,GADP,IAEId,OAAO,IAEf,KAAKjB,EAAYpD,8BACb,OAAO,6BACAmF,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAYnD,2BACb,OAAO,6BACAkF,GADP,IAEIE,cAAc,GAAD,oBAAMF,EAAME,eAAZ,aAA8BkjB,EAAO/kB,UAClD5F,aAAa,EACb0H,YAAaH,EAAMG,YAAc,IAEzC,KAAKlC,EAAYjD,6BACb,OAAO,6BACAgF,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYhD,0BACb,OAAO,6BACA+E,GADP,IAEIU,iBAAkB0iB,EAAO/kB,QACzB7F,SAAS,EACTmI,eAAgBX,EAAMW,eAAiB,IAE/C,KAAK1C,EAAY/C,kCACb,OAAO,6BACA8E,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAY9C,+BACb,OAAO,6BACA6E,GADP,IAEIU,iBAAiB,GAAD,oBAAMV,EAAMU,kBAAZ,aAAiC0iB,EAAO/kB,UACxD5F,aAAa,EACbkI,eAAgBX,EAAMW,eAAiB,IAE/C,KAAK1C,EAAY7C,0BACb,OAAO,6BACA4E,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAY5C,uBACb,OAAO,6BACA2E,GADP,IAEI0B,eAAgB0hB,EAAO/kB,QACvB7F,SAAS,EACTmJ,aAAc3B,EAAM2B,aAAe,IAE3C,KAAK1D,EAAY3C,+BACb,OAAO,6BACA0E,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAY1C,4BACb,OAAO,6BACAyE,GADP,IAEI0B,eAAe,GAAD,oBAAM1B,EAAM0B,gBAAZ,aAA+B0hB,EAAO/kB,UACpD5F,aAAa,EACbkJ,aAAc3B,EAAM2B,aAAe,IAE3C,KAAK1D,EAAYzC,2BACb,OAAO,6BACAwE,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYxC,wBACb,OAAO,6BACAuE,GADP,IAEIkB,eAAgBkiB,EAAO/kB,QACvB7F,SAAS,EACT2I,aAAcnB,EAAMmB,aAAe,IAE3C,KAAKlD,EAAYvC,gCACb,OAAO,6BACAsE,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAYtC,6BACb,OAAO,6BACAqE,GADP,IAEIkB,eAAe,GAAD,oBAAMlB,EAAMkB,gBAAZ,aAA+BkiB,EAAO/kB,UACpD5F,aAAa,EACb0I,aAAcnB,EAAMmB,aAAe,IAE3C,QACI,OAAOnB,ICtHbmjB,GAAe,CACjB1H,UAAW,GACXjjB,SAAS,EACTC,aAAa,EACb0H,YAAa,EACbjB,OAAO,EACP8c,cAAe,GACfC,gBAAiB,EACjBY,WAAY,GACZC,aAAc,EACdP,WAAY,GACZpb,aAAc,GA+GHqa,GA5GO,WAAmC,IAAlCxb,EAAiC,uDAAzBmjB,GAAcC,EAAW,uCACpD,OAAQA,EAAOplB,MACX,KAAKC,EAAYrC,qBACb,OAAO,6BACAoE,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYpC,kBACb,OAAO,6BACAmE,GADP,IAEIxH,SAAS,EACTijB,UAAW2H,EAAO/kB,QAClB8B,YAAaH,EAAMG,YAAc,IAEzC,KAAKlC,EAAYnC,iBACb,OAAO,6BACAkE,GADP,IAEId,OAAO,IAEf,KAAKjB,EAAYlC,0BACb,OAAO,6BACAiE,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAYjC,uBACb,OAAO,6BACAgE,GADP,IAEIyb,UAAU,GAAD,oBAAMzb,EAAMyb,WAAZ,aAA0B2H,EAAO/kB,UAC1C5F,aAAa,EACb0H,YAAaH,EAAMG,YAAc,IAEzC,KAAKlC,EAAYhC,0BACb,OAAO,6BACA+D,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAY/B,uBACb,OAAO,6BACA8D,GADP,IAEIxH,SAAS,EACTwjB,cAAeoH,EAAO/kB,QACtB4d,gBAAiBjc,EAAMic,gBAAkB,IAEjD,KAAKhe,EAAY9B,+BACb,OAAO,6BACA6D,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAY7B,4BACb,OAAO,6BACA4D,GADP,IAEIgc,cAAc,GAAD,oBAAMhc,EAAMgc,eAAZ,aAA8BoH,EAAO/kB,UAClD5F,aAAa,EACbwjB,gBAAiBjc,EAAMic,gBAAkB,IAEjD,KAAKhe,EAAY5B,wBACb,OAAO,6BACA2D,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAY3B,qBACb,OAAO,6BACA0D,GADP,IAEIxH,SAAS,EACTqkB,WAAYuG,EAAO/kB,QACnBye,aAAc9c,EAAM8c,aAAe,IAE3C,KAAK7e,EAAY1B,6BACb,OAAO,6BACAyD,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAYzB,0BACb,OAAO,6BACAwD,GADP,IAEI6c,WAAW,GAAD,oBAAM7c,EAAM6c,YAAZ,aAA2BuG,EAAO/kB,UAC5C5F,aAAa,EACbqkB,aAAc9c,EAAM8c,aAAe,IAE3C,KAAK7e,EAAYxB,uBACb,OAAO,6BACAuD,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYvB,oBACb,OAAO,6BACAsD,GADP,IAEIxH,SAAS,EACT+jB,WAAY6G,EAAO/kB,QACnB8C,aAAcnB,EAAMmB,aAAe,IAE3C,KAAKlD,EAAYtB,4BACb,OAAO,6BACAqD,GADP,IAEIvH,aAAa,IAErB,KAAKwF,EAAYrB,yBACb,OAAO,6BACAoD,GADP,IAEIuc,WAAW,GAAD,oBAAMvc,EAAMuc,YAAZ,aAA2B6G,EAAO/kB,UAC5C5F,aAAa,EACb0I,aAAcnB,EAAMmB,aAAe,IAE3C,QACI,OAAOnB,ICtHbmjB,GAAe,CACjB/J,OAAQ,GACR5gB,SAAS,EACToG,KAAM,EACNM,OAAO,EACP0S,WAAY,GA6BD2M,GA1Bc,WAAmC,IAAlCve,EAAiC,uDAAzBmjB,GAAcC,EAAW,uCAC3D,OAAQA,EAAOplB,MAEX,KAAKC,EAAYpB,yBACb,OAAO,6BACAmD,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYnB,sBACb,OAAO,6BACAkD,GADP,IAEIxH,SAAS,EACT4gB,OAAQgK,EAAO/kB,QAAQ+a,OACvBxH,WAAYwR,EAAO/kB,QAAQuT,WAC3BhT,KAAMwkB,EAAO/kB,QAAQO,OAE7B,KAAKX,EAAYlB,qBACb,OAAO,6BACAiD,GADP,IAEId,OAAO,IAEf,QACI,OAAOc,IC9BbmjB,GAAe,CACjB1U,aAAc,GACdjW,SAAS,EACT0G,OAAO,EACPqD,MAAO,GACP6L,aAAa,EACbX,SAAU,KACVY,iBAAiB,EACjBnI,aAAa,EACbhC,MAAO,KACPsE,WAAY,GACZwC,WAAY,GACZgB,gBAAiB,IAoENwC,GAjEa,WAAmC,IAAlCxO,EAAiC,uDAAzBmjB,GAAcC,EAAW,uCAC1D,OAAQA,EAAOplB,MACX,KAAKC,EAAYjB,wBACb,OAAO,6BACAgD,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYhB,qBACb,OAAO,6BACA+C,GADP,IAEIxH,SAAS,EACTiW,aAAc2U,EAAO/kB,UAE7B,KAAKJ,EAAYd,eACb,OAAO,6BACA6C,GADP,IAEIoO,aAAa,IAErB,KAAKnQ,EAAYb,YACb,OAAO,6BACA4C,GADP,IAEIuC,MAAO6gB,EAAO/kB,QACd+P,aAAa,IAErB,KAAKnQ,EAAYZ,mBACb,OAAO,6BACA2C,GADP,IAEIqO,iBAAiB,IAEzB,KAAKpQ,EAAYX,gBACb,OAAO,6BACA0C,GADP,IAEIqO,iBAAiB,EACjBZ,SAAU2V,EAAO/kB,UAEzB,KAAKJ,EAAYV,oBACb,OAAO,6BACAyC,GADP,IAEIkG,aAAclG,EAAMkG,cAE5B,KAAKjI,EAAYT,aACb,OAAO,6BACAwC,GADP,IAEIkE,MAAOkf,EAAO/kB,UAEtB,KAAKJ,EAAYR,mBACb,OAAO,6BACAuC,GADP,IAEIwI,WAAY4a,EAAO/kB,UAE3B,KAAKJ,EAAYP,kBACb,OAAO,6BACAsC,GADP,IAEIgL,WAAYoY,EAAO/kB,UAE3B,KAAKJ,EAAYN,uBACb,OAAO,6BACAqC,GADP,IAEIgM,gBAAiBoX,EAAO/kB,UAEhC,QACI,OAAO2B,IC5EbmjB,GAAe,CACjBf,QAAS,GACT5pB,SAAS,EACT0G,OAAO,GA4BIyjB,GAzBS,WAAmC,IAAlC3iB,EAAiC,uDAAzBmjB,GAAcC,EAAW,uCACtD,OAAQA,EAAOplB,MACX,KAAKC,EAAYL,mBACb,OAAO,6BACAoC,GADP,IAEIxH,SAAS,IAEjB,KAAKyF,EAAYJ,gBACb,OAAO,6BACAmC,GADP,IAEIxH,SAAS,EACT4pB,QAASgB,EAAO/kB,UAExB,KAAKJ,EAAYH,eACb,OAAO,6BACAkC,GADP,IAEId,OAAO,EACP1G,SAAS,IAEjB,QACI,OAAOwH,ICrBJqjB,8BAAgB,CAC3BpjB,oBACAub,iBACA+C,wBACA/P,uBACAmU,qB,UCNWW,GAFDC,uBAAYF,GAAiBG,kCCCrCC,G,kDAEF,WAAY7sB,GAAQ,IAAD,8BACf,cAAMA,IACDoJ,MAAQ,CAAE0jB,UAAU,GAFV,E,gEAYfnkB,KAAKoS,SAAS,CACV+R,UAAU,M,+BAKd,OAAInkB,KAAKS,MAAM0jB,SAEN,qDAGFnkB,KAAK3I,MAAMkY,a,GAzBCjP,aAoCrBC,GAAqB,CACvB/B,uBAGWgC,gBAVS,SAACC,GACrB,MAAO,CACHd,MAAOc,EAAMd,SAQmBY,GAAzBC,CAA6C0jB,IClCtD3R,GAAiB,IAAI9C,GAE3B2U,IAASX,OACR,kBAAC,IAAMY,WAAP,KACC,kBAAC,IAAD,CAAUN,MAAOA,IAChB,kBAAC,GAAD,KACC,kBAAC,EAAsBO,SAAvB,CAAgC7sB,MAAO8a,IACtC,kBAAC,GAAD,UAKHxS,SAASwkB,eAAe,W","file":"static/js/main.ce1ae86e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    padding: 5px 15px; \r\n\r\n    &:hover{\r\n        background-color: rgb(209, 220, 240);\r\n    }\r\n`;\r\n\r\nconst NavCollapseWrapper = styled.div`\r\n    &.dropdown-menu {\r\n        min-width: 11rem;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return(\r\n        <NavBarWrapper> \r\n            <Navbar expand=\"lg\">\r\n                <Navbar.Brand>\r\n                    <LogoWrapper>\r\n                        <Link to='/movie-database'> Movies DB</Link>   \r\n                    </LogoWrapper>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Фильмы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Сериалы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Люди\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/person/'>Популярные люди</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n            </Navbar> \r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = ({isButton}) => {\r\n    const classNames = `loadingio-spinner-spin-ddphnesjhka ${isButton ? 'button' : ''}`\r\n\r\n    return (\r\n        <div className={classNames}>\r\n            <div className=\"loadingio-spinner-pulse-4q9a11w5c1h\">\r\n                <div className=\"ldio-8zfoqlwj9ri\">\r\n                    <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\n\r\n\r\nconst RateWrapper = styled.div`\r\n    width: ${props => props.small ? '44px' : '65px'};\r\n    height: ${props => props.small ? '44px' : '65px'};\r\n    position: ${props => props.small ? 'absolute' : 'static'};\r\n    top: -22px;\r\n    left: 10px;\r\n\r\n    .CircularProgressbar-text {\r\n        dominant-baseline: middle;\r\n        text-anchor: middle;\r\n        font-size: 28px;\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Rate = ({vote, small}) => {\r\n\r\n    return (\r\n        <RateWrapper small={small}>\r\n            <CircularProgressbar\r\n                value={vote * 10}\r\n                background = {true}\r\n                backgroundPadding = {5}\r\n                text={`${vote === 0 ? 'NR' : (vote * 10 + '%')}`}\r\n                styles={buildStyles({\r\n                    rotation: 0,\r\n                    strokeLinecap: 'butt',\r\n                    pathTransitionDuration: 0.5,\r\n                    pathColor: vote > 7 ? '#21d07a' : vote < 3 ? '#db2360' : `#d2d531`,\r\n                    textColor: '#fff',\r\n                    trailColor: '#423d0f',\r\n                    backgroundColor: '#000', \r\n                })}\r\n            />\r\n        </RateWrapper>\r\n    )\r\n}\r\n\r\nexport default Rate;","import React from 'react';\r\nimport './loadMoreSpinner.css';\r\n\r\nconst LoadMoreSpinner = () => {\r\n    return(\r\n        <div className=\"loadingio-spinner-eclipse-31fnf915wjs\">\r\n            <div className=\"ldio-0fm56yckxb98\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoadMoreSpinner;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport Rate from '../../shared/rate';\r\nimport moment from 'moment';\r\nimport LoadMoreSpinner from '../../shared/spinner/loadMoreSpinner';\r\n\r\nconst PosterWrapper = styled.div`\r\n    border: 1px solid rgb(227, 227, 227);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n    max-width: 206px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieDetailsWrapper = styled.div`\r\n    background-color:rgb(255, 255, 255);\r\n    border-radius: 15px;\r\n    position: relative;\r\n    padding: 22px 10px 15px;\r\n    text-align: left;\r\n    max-width: 206px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-family: 'Source Sans Pro';\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ReleaseWrapper = styled(TitleWrapper)`\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    max-width: 206px;\r\n    width: 100%;\r\n    border-top-right-radius: 15px;\r\n    border-top-left-radius: 15px;\r\n    height: 310px;\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 930px;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    margin-bottom: 20px;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst MovieList = ({movies, loading, loadingMore, url, getMovies, history}) => {\r\n    const movieItems = movies.map((item, index) => {\r\n        const {title, poster_path, release_date, vote_average, id, name, first_air_date} = item;\r\n        const src = poster_path ? ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return(\r\n            <Col key={index} className=\"col-3 d-flex justify-content-center mb-4\">\r\n                <PosterWrapper\r\n                    onClick={() => {\r\n                        history.push(`${url}${id}`)\r\n                    }}\r\n                >\r\n                <Poster src={src} alt={title || name}/> \r\n                <MovieDetailsWrapper>\r\n                    <TitleWrapper>\r\n                        {title || name}\r\n                    </TitleWrapper>\r\n                    <ReleaseWrapper>\r\n                        {moment(release_date || first_air_date).format('DD.MM.YYYY')}\r\n                    </ReleaseWrapper>\r\n                    <Rate \r\n                        vote={vote_average}\r\n                        small\r\n                    />\r\n                    \r\n                </MovieDetailsWrapper>                   \r\n                </PosterWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n    const spinnerDetails = loading ? <Spinner/> : movieItems;\r\n    const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n\r\n    return(\r\n        <Container className=\"mt-5\">\r\n            <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                {spinnerDetails}\r\n            </Row>\r\n            <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                <Col>\r\n                <LoadMoreButton\r\n                    onClick={() => getMovies()}\r\n                >{loadSpinner}</LoadMoreButton>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )   \r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst MoviesServicesContext = React.createContext();\r\n\r\nexport default MoviesServicesContext;","import React from 'react';\r\nimport MoviesServicesContext from '../moviesContext/moviesContext';\r\n\r\nconst WithMoviesService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <MoviesServicesContext.Consumer>\r\n                {\r\n                    (MoviesService) => {\r\n                        return <Wrapped {...props} MoviesService={MoviesService}/>\r\n                    }\r\n                }\r\n            </MoviesServicesContext.Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WithMoviesService;","export const POPULAR_MOVIES_REQUESTED = 'POPULAR_MOVIES_REQUESTED';\r\nexport const POPULAR_MOVIES_LOADED = 'POPULAR_MOVIES_LOADED';\r\nexport const POPULAR_MOVIES_ERROR = 'POPULAR_MOVIES_ERROR';\r\nexport const POPULAR_MOVIES_MORE_REQUESTED = 'POPULAR_MOVIES_MORE_REQUESTED';\r\nexport const POPULAR_MOVIES_MORE_LOADED = 'POPULAR_MOVIES_MORE_LOADED';\r\nexport const POPULAR_MOVIES_MORE_ERROR = 'POPULAR_MOVIES_MORE_ERROR';\r\nexport const PLAYING_NOW_MOVIES_REQUESTED = 'PLAYING_NOW_MOVIES_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_LOADED = 'PLAYING_NOW_MOVIES_LOADED';\r\nexport const PLAYING_NOW_MOVIES_MORE_REQUESTED = 'PLAYING_NOW_MOVIES_MORE_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_MORE_LOADED = 'PLAYING_NOW_MOVIES_MORE_LOADED';\r\nexport const UPCOMING_MOVIES_REQUESTED = 'UPCOMING_MOVIES_REQUESTED';\r\nexport const UPCOMING_MOVIES_LOADED = 'UPCOMING_MOVIES_LOADED';\r\nexport const UPCOMING_MOVIES_MORE_REQUESTED = 'UPCOMING_MOVIES_MORE_REQUESTED';\r\nexport const UPCOMING_MOVIES_MORE_LOADED = 'UPCOMING_MOVIES_MORE_LOADED';\r\nexport const TOP_RATED_MOVIES_REQUESTED = 'TOP_RATED_MOVIES_REQUESTED';\r\nexport const TOP_RATED_MOVIES_LOADED = 'TOP_RATED_MOVIES_LOADED';\r\nexport const TOP_RATED_MOVIES_MORE_REQUESTED = 'TOP_RATED_MOVIES_MORE_REQUESTED';\r\nexport const TOP_RATED_MOVIES_MORE_LOADED = 'TOP_RATED_MOVIES_MORE_LOADED';\r\n\r\nexport const POPULAR_TV_REQUESTED = 'POPULAR_TV_REQUESTED';\r\nexport const POPULAR_TV_LOADED = 'POPULAR_TV_LOADED';\r\nexport const POPULAR_TV_ERROR = 'POPULAR_TV_ERROR';\r\nexport const POPULAR_TV_MORE_REQUESTED = 'POPULAR_TV_MORE_REQUESTED';\r\nexport const POPULAR_TV_MORE_LOADED = 'POPULAR_TV_MORE_LOADED';\r\nexport const AIRING_TODAY_TV_REQUESTED = 'AIRING_TODAY_TV_REQUESTED';\r\nexport const AIRING_TODAY_TV_LOADED = 'AIRING_TODAY_TV_LOADED';\r\nexport const AIRING_TODAY_TV_MORE_REQUESTED = 'AIRING_TODAY_TV_MORE_REQUESTED';\r\nexport const AIRING_TODAY_TV_MORE_LOADED = 'AIRING_TODAY_TV_MORE_LOADED';\r\nexport const ON_THE_AIR_TV_REQUESTED = 'ON_THE_AIR_TV_REQUESTED';\r\nexport const ON_THE_AIR_TV_LOADED = 'ON_THE_AIR_TV_LOADED';\r\nexport const ON_THE_AIR_TV_MORE_REQUESTED = 'ON_THE_AIR_TV_MORE_REQUESTED';\r\nexport const ON_THE_AIR_TV_MORE_LOADED = 'ON_THE_AIR_TV_MORE_LOADED';\r\nexport const TOP_RATED_TV_REQUESTED = 'TOP_RATED_TV_REQUESTED';\r\nexport const TOP_RATED_TV_LOADED = 'TOP_RATED_TV_LOADED';\r\nexport const TOP_RATED_TV_MORE_REQUESTED = 'TOP_RATED_TV_MORE_REQUESTED';\r\nexport const TOP_RATED_TV_MORE_LOADED = 'TOP_RATED_TV_MORE_LOADED';\r\n\r\nexport const POPULAR_PERSON_REQUESTED = 'POPULAR_PERSON_REQUESTED';\r\nexport const POPULAR_PERSON_LOADED = 'POPULAR_PERSON_LOADED';\r\nexport const POPULAR_PERSON_ERROR = 'POPULAR_PERSON_ERROR';\r\n\r\nexport const MOVIE_DETAILS_REQUESTED = 'MOVIE_DETAILS_REQUESTED';\r\nexport const MOVIE_DETAILS_LOADED = 'MOVIE_DETAILS_LOADED';\r\nexport const MOVIE_DETAILS_ERROR = 'MOVIE_DETAILS_ERROR';\r\n\r\nexport const CAST_REQUESTED = 'CAST_REQUESTED';\r\nexport const CAST_LOADED = 'CAST_LOADED';\r\n\r\nexport const KEYWORDS_REQUESTED = 'KEYWORDS_REQUESTED';\r\nexport const KEYWORDS_LOADED = 'KEYWORDS_LOADED';\r\n\r\nexport const MODAL_WINDOW_TOGGLE = 'MODAL_WINDOW_TOGGLE';\r\n\r\nexport const VIDEO_LOADED = 'VIDEO_LOADED';\r\n\r\nexport const SOCIAL_LINK_LOADED = 'SOCIAL_LINK_LOADED';\r\n\r\nexport const COLLECTION_LOADED = 'COLLECTION_LOADED';\r\n\r\nexport const RECOMMENDATIONS_LOADED = 'RECOMMENDATIONS_LOADED';\r\n\r\nexport const IN_TREND_REQUESTED = 'IN_TREND_REQUESTED';\r\nexport const IN_TREND_LOADED = 'IN_TREND_LOADED';\r\nexport const IN_TREND_ERROR = 'IN_TREND_ERROR';\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nconst popularMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_ERROR\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_ERROR\r\n    }\r\n}\r\n\r\nconst popularTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularPersonLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_ERROR\r\n    }\r\n}\r\n\r\nconst movieDetailsRequested = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_REQUESTED\r\n    }\r\n}\r\n\r\nconst movieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsError = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_ERROR\r\n    }\r\n}\r\n\r\nconst castRequested = () => {\r\n    return {\r\n        type: actionTypes.CAST_REQUESTED\r\n    }  \r\n}\r\n\r\nconst castLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst keywordsRequested = () => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_REQUESTED\r\n    }\r\n}\r\n\r\nconst keywordsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst modalWindowToggle = () => {\r\n    return {\r\n        type: actionTypes.MODAL_WINDOW_TOGGLE\r\n    }\r\n}\r\n\r\nconst videoLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.VIDEO_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst socialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst collectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst recommendationsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.RECOMMENDATIONS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendRequested = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_REQUESTED\r\n    }\r\n}\r\n\r\nconst inTrendLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.IN_TREND_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendError = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    popularMoviesRequested,\r\n    popularMoviesLoaded,\r\n    popularMoviesError,\r\n    popularMoviesMoreLoaded,\r\n    popularMoviesMoreRequested,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded,\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvError,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError,\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError,\r\n    recommendationsLoaded\r\n}","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularMoviesRequested, popularMoviesLoaded, popularMoviesError, popularMoviesMoreLoaded, popularMoviesMoreRequested} from '../../actions/actions';\r\n\r\nclass PopularPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.popularMoviesRequested();\r\n            this.loadMovies(this.props.popularMoviesLoaded);  \r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {popularMoviesMoreLoaded, popularMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        popularMoviesMoreRequested();\r\n        this.loadMovies(popularMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, history, loadingMore} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularMovies, loading, loadingMore, popularPage}  = state.moviePageReducer;\r\n    return {\r\n        movies: popularMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: popularPage\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesLoaded,\r\n    popularMoviesRequested,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PopularPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {playingNowMoviesRequested, playingNowMoviesLoaded, popularMoviesError, playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested} from '../../actions/actions';\r\n\r\nclass PlayingNowPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if(!this.props.movies.length) {\r\n            this.props.playingNowMoviesRequested();\r\n            this.loadMovies(this.props.playingNowMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getNowPlaying(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        playingNowMoviesMoreRequested();\r\n        this.loadMovies(playingNowMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {playingNowMovies, loading, loadingMore, playingNowPage}  = state.moviePageReducer;\r\n    return {\r\n       movies: playingNowMovies,\r\n       loading,\r\n       loadingMore,\r\n       page: playingNowPage \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PlayingNowPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedMoviesRequested, topRatedMoviesLoaded, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded, popularMoviesError} from '../../actions/actions';\r\n\r\n\r\nclass TopRatedPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n        \r\n        if (!this.props.movies.length) {\r\n            this.props.topRatedMoviesRequested();\r\n            this.loadMovies(this.props.topRatedMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {page, MoviesService, popularMoviesError} = this.props;\r\n\r\n        MoviesService.getTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError())\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedMoviesMoreRequested();\r\n        this.loadMovies(topRatedMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedMovies, topRatedPage, loading, loadingMore} = state.moviePageReducer;\r\n    return {\r\n        movies: topRatedMovies,\r\n        page: topRatedPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {upcomingMoviesRequested, upcomingMoviesLoaded, upcomingMoviesMoreRequested, upcomingMoviesMoreLoaded, popularMoviesError} from '../../actions/actions';\r\n\r\nclass UpcomingPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.upcomingMoviesRequested();\r\n            this.loadMovies(this.props.upcomingMoviesLoaded);\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getUpcoming(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, upcomingMoviesMoreLoaded, upcomingMoviesMoreRequested} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        upcomingMoviesMoreRequested();\r\n        this.loadMovies(upcomingMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n       \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {upcomingMovies, loading, loadingMore, upcomingPage} = state.moviePageReducer;\r\n    return {\r\n        movies: upcomingMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: upcomingPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(UpcomingPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 285px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 275px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 64.4%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 13px;\r\n    padding: 5px 10px 0;   \r\n`;\r\n\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst FullCastWrapper = styled.div`\r\n    color: #1e2f3c;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`;\r\n\r\n\r\n\r\nconst Cast = ({casts, id, history}) => {\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n          <span style={{display: 'none'}}></span>\r\n        )\r\n      }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const onGoFullCast = () => {\r\n\r\n        if (history.location.pathname.includes('tv')) {\r\n            history.push(`/tv/${id}/casts`)\r\n        } else {\r\n            history.push(`/movie/${id}/casts`)\r\n        } \r\n        \r\n    }\r\n\r\n    const onGoPersonBio = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.profile_path ? ('https://image.tmdb.org/t/p/w138_and_h175_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name} \r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastItemWrapper>\r\n                \r\n            )\r\n        });\r\n\r\n    let carousel;\r\n    return (\r\n        <>\r\n            <CarouselWrapper>\r\n                <CastTitle>В главных ролях</CastTitle>\r\n                <Carousel renderArrow={myArrow}\r\n                        itemsToScroll={1} \r\n                        itemsToShow={5}\r\n                        focusOnSelect={false}\r\n                        ref={ref => (carousel = ref)}\r\n                        renderPagination={myPagination}\r\n                >\r\n                    {castItem}\r\n                </Carousel>\r\n                <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n                <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n                <FullCastWrapper\r\n                     onClick={() => onGoFullCast()}\r\n                >Полный актёрский и съёмочный состав</FullCastWrapper>\r\n           </CarouselWrapper>\r\n           \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\n\r\nconst Trailer = ({video}) => {\r\n\r\n    const {results} = video;\r\n    const resultItem = results[0];\r\n\r\n    return (\r\n        <iframe\r\n            title='g'\r\n            width=\"1075\"\r\n            height=\"667\"\r\n            src={\"https://www.youtube.com/embed/\" + resultItem.key}\r\n            frameBorder='0' \r\n            allowFullScreen\r\n            controls='2'\r\n        ></iframe>\r\n    )\r\n\r\n}\r\n\r\nexport default Trailer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../shared/youtubeVideo/youtubeVideo';\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: 1075px;\r\n    max-height: 667px;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: 1075px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindow = ({video, onCloseModal}) => {\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper>\r\n                <TrailerTitleWraper>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from '../../../../shared/rate';\r\nimport ModalWindow from './modalWindow';\r\n\r\nconst ImgWrapper = styled.img`\r\n    max-width: 300px;\r\n    max-height: 450px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 7px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    font-family: 'Source Sans Pro';\r\n`;\r\n\r\nconst Year = styled.span`\r\n    opacity: 0.8;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst DetailsList = styled.div`\r\n    font-size: 16px; \r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    font-size: 5px;\r\n`;\r\n\r\nconst Vote = styled.span`\r\n    max-width: 150px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ActivityList = styled.ul`\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    li{\r\n        width: 46px;\r\n        height: 46px;\r\n        background-color: rgb(3, 37, 65);\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-left: 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child{\r\n        margin-left: 0;\r\n    }\r\n    \r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n\r\n    &:hover{\r\n        opacity: 0.6\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst TagLine = styled.div`\r\n    font-size: 17.6px;\r\n    opacity: 0.7;\r\n    font-family: Arial;\r\n`;\r\n\r\nconst CreatorNameWrapper = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Details = ({details, movieId, onOpenModal, modalWindow, onCloseModal, video, history}) => {\r\n    const {poster_path, title, release_date, genres, runtime, vote_average, tagline, overview, name, first_air_date, episode_run_time, created_by} = details;\r\n\r\n    const genreItem = genres.map(genre => genre.name);\r\n    const genreToString = genreItem.join(', ');\r\n\r\n    let duration = (runtime || episode_run_time) ? moment.duration(runtime || episode_run_time[0], \"minutes\").format(\"h : m o\").replace(':', 'h').replace('o', 'm') : null;\r\n\r\n    const trailerButton = () => {\r\n        return(\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle\r\n                    onClick = {() => onOpenModal(movieId)}\r\n                >Воспроизвести трейлер</TrailerTitle>\r\n            </TrailerWrapper>\r\n        )   \r\n    }\r\n\r\n    const modal = modalWindow ? <ModalWindow video={video} onCloseModal={onCloseModal}/> : null;\r\n    const showTrailer = video?.results.length === 0 ? null : trailerButton();\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path);\r\n    const creator = history.location.pathname.includes('tv') ? <TvCreator creator={created_by} history={history}/> : null;\r\n    const releaseYear = release_date || first_air_date ? `(${moment(release_date || first_air_date).format('YYYY')})` : null;\r\n    const releaseDate = release_date || first_air_date ? moment(release_date || first_air_date).format('DD/MM/YYYY') : null;\r\n    return(\r\n        <>\r\n            {modal}\r\n            <Col className='col-4'>\r\n                <ImgWrapper src={src} alt={title || name}/>\r\n            </Col>\r\n            <Col className='col-8 text-left px-0'>\r\n            <Title>{title || name} <Year>{releaseYear}</Year>\r\n                </Title>\r\n                <DetailsList>\r\n                    <Row>\r\n                        <Col className=\"col-auto px-0 pl-3\">{releaseDate}</Col>\r\n                        <Col className=\"col-auto d-flex align-items-center\"><IconWrapper><i className=\"fas fa-circle\"></i></IconWrapper></Col>\r\n                        <Col className=\"col-auto px-0\">{genreToString}</Col>\r\n                        <Col className=\"col-auto d-flex align-items-center\"><IconWrapper><i className=\"fas fa-circle\"></i></IconWrapper></Col>\r\n                        <Col className=\"col-auto px-0\">{duration}</Col>\r\n                    </Row>  \r\n                    <Row className=\"font-weight-bold py-3\">\r\n                        <Col className=\"col-auto d-flex\">\r\n                            <Rate vote={vote_average}/>   \r\n                            <Vote>Пользовательский счёт</Vote>\r\n                        </Col>\r\n                        <Col className=\"px-0 my-0 d-flex align-items-center\">\r\n                            <ActivityList>\r\n                                <li><i className=\"fas fa-list-ul\"></i></li>\r\n                                <li><i className=\"fas fa-heart\"></i></li>\r\n                                <li><i className=\"fas fa-bookmark\"></i></li>\r\n                                <li><i className=\"fas fa-star\"></i></li>\r\n                            </ActivityList>\r\n                        </Col>\r\n                        <Col className=\"d-flex align-items-center\">\r\n                            {showTrailer}                   \r\n                        </Col>\r\n                    </Row>  \r\n                    <Row>\r\n                        <Col className='font-italic'>\r\n                            <TagLine>{tagline}</TagLine>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='flex-column py-2'>\r\n                        <Col>\r\n                            <Overview>\r\n                                Обзор\r\n                            </Overview>\r\n                        </Col>\r\n                        <Col>{overview}</Col>\r\n                    </Row>\r\n                    {creator}\r\n                </DetailsList>  \r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nconst TvCreator = ({creator, history}) => {\r\n    if (creator?.length) {\r\n        return (\r\n            <Row className='flex-column py-2'>\r\n                <Col>\r\n                    <CreatorNameWrapper\r\n                        onClick={() => history.push(`/person/${creator[0].id}`)}\r\n                    >\r\n                        {creator[0].name}\r\n                    </CreatorNameWrapper>\r\n                    <div>Создатель</div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Details;\r\nexport {ImgWrapper, Title, DetailsList, Vote, Overview};","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: inline-block;\r\n    font-size: 25px;  \r\n    cursor: pointer;\r\n    margin-right: 15px;\r\n    & .popover-body {\r\n        background-color: red\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: #000;\r\n    & :hover :active :link :visited {\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    margin: ${props => props.movie ? '0 15px 20px 0' : '30px 15px 0 0'};\r\n    display: flex;\r\n`;\r\n\r\nconst SocialLinkWrrapper = styled.div`\r\n    display: ${props => !props.facebook && !props.twitter && !props.instagram ? 'none' : 'block'};\r\n    border-right: 1px solid #d7d7d7;\r\n    margin-right: 15px;\r\n`;\r\n\r\n\r\nconst OriginalDetails = ({details, history, socialLink}) => {\r\n    const {original_title, status, budget, revenue, original_language, original_name, networks, homepage} = details;\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieBudget= budget ? nf.format(budget).replace(/\\s/g, ',') : '0';\r\n    const movieRevenue = revenue ? nf.format(revenue).replace(/\\s/g, ',') : '0';\r\n\r\n    const tvNet = history.location.pathname.includes('tv') ? <TvNetwork networks={networks}/> : null;\r\n\r\n    const statusMovie = () => {\r\n        switch (status) {\r\n            case 'Released': \r\n                return 'Выпущено';\r\n            case 'Returning Series':\r\n                return 'Продолжается';\r\n            default:\r\n                return (status);\r\n        }\r\n    }\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const homePage = (\r\n        <Link href={homepage} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-link\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n    const overlayHomePage = homepage ? <Overlay logo={homePage} page={'Домашнюю страницу'}/> : null;\r\n\r\n    return(\r\n        <Col>\r\n            <Row>\r\n                <Col className='d-flex align-items-center'>\r\n                    <LinkWrapper movie>\r\n                        <SocialLinkWrrapper facebook={facebook_id} twitter={twitter_id} instagram={instagram_id}>\r\n                            {overlayFacebook}\r\n                            {overlayTwitter}\r\n                            {overlayInstagram}\r\n                        </SocialLinkWrrapper>\r\n                        {overlayHomePage}\r\n                    </LinkWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Исходное название</Col>\r\n                <Col>{original_title || original_name}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Статус</Col>\r\n                <Col>{statusMovie()}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Исходный язык</Col>\r\n                <Col>{original_language === 'en' ?  'английский' : original_language}</Col>\r\n            </Row>\r\n            {tvNet}\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Бюджет</Col>\r\n                <Col>${movieBudget}.00</Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Сборы</Col>\r\n                <Col>${movieRevenue}.00</Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst TvNetwork = ({networks}) => {\r\n    const networkItem = networks?.find((network, index) => index === 0);\r\n    const logo = !networkItem?.logo_path ? networkItem?.name : <img src={`https://image.tmdb.org/t/p/h30${networkItem?.logo_path}`} alt={networkItem?.name}/>;\r\n\r\n    return (\r\n        <Row className=\"flex-column\">\r\n            <Col className=\"font-weight-bold\">Телесеть</Col>\r\n            <Col>  \r\n                {logo}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst Overlay = ({logo, page}) => {\r\n    const popover = (\r\n            <Popover id=\"popover-basic\">              \r\n                <Popover.Content>\r\n                    Посетить {page}\r\n                </Popover.Content>\r\n            </Popover>\r\n    );\r\n    \r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={popover}>\r\n            <LinkIconWrapper>{logo}</LinkIconWrapper>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default OriginalDetails;\r\nexport {Overlay, LinkIconWrapper, Link};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst KeywordsWrapper = styled.div`\r\n    margin: 30px 0;\r\n    max-width: 260px;\r\n    width: 100%;\r\n`;\r\n\r\nconst KeywordItemWrapper = styled.div`\r\n    background-color: rgba(0,0,0,0.1);\r\n    border: 1px solid #d7d7d7;\r\n    color: #000;\r\n    padding: 4px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    font-size: 14.4px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Keywords = ({keyword, url}) => {\r\n\r\n    const history = useHistory();\r\n  \r\n        const keywordsItem = keyword.map((keyword, index) => {\r\n            return(\r\n                <KeywordItemWrapper \r\n                    key={index} \r\n                    onClick={() => history.push(`/${url}/${keyword.id}`)}\r\n                >\r\n                    {keyword.name}\r\n                </KeywordItemWrapper>\r\n            )\r\n        })\r\n\r\n    const keywordItem = keywordsItem.length === 0 ? 'Ключевые слова не добавлены.' : keywordsItem;\r\n\r\n    return (\r\n        <KeywordsWrapper>\r\n            <Col className=\"font-weight-bold\">Ключевые слова</Col>\r\n            <Col>\r\n                {keywordItem}\r\n            </Col>\r\n        </KeywordsWrapper>\r\n    )\r\n}\r\n\r\nexport default Keywords;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CollectionWrapper = styled.div`\r\n    padding: 30px 0;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionContent = styled.div`\r\n    border-radius: 8px;\r\n    background-image: linear-gradient(315deg, rgba(42, 42, 114, 0.5) 0%, rgba(0, 159, 253, 0.5) 74%), ${props => `url(${props.bg})`};\r\n    background-repeat: no-repeat;\r\n    max-width: 730px;\r\n    width: 100%;\r\n    height: 320px;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CollectionName = styled.div`\r\n    color: #fff;\r\n    font-size: 1.9em;\r\n    font-weight: 600;\r\n`\r\nconst CollectionDescription = styled.div`\r\n    font-size: 1.1em;\r\n    margin-bottom: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst CollectionButton = styled.button`\r\n    font-size: 1.1em;\r\n    color: #fff;\r\n    background-color: rgb(53, 40, 30);\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 700;\r\n    padding: 6px 20px;\r\n    max-width: 260px;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst Collection = ({details, history, collection}) => {\r\n\r\n    const {belongs_to_collection} = details;\r\n    const {name, backdrop_path, id} = belongs_to_collection;\r\n    const {parts} = collection;\r\n\r\n    const getTitle = () => {\r\n        if (collection.hasOwnProperty('parts')) {\r\n            const moviesTitle = parts.map(part => part.title);\r\n            return moviesTitle.join(', ');\r\n        } \r\n        return null\r\n    }\r\n    \r\n    const path = `https://image.tmdb.org/t/p/w1440_and_h320_multi_faces${backdrop_path}`\r\n    return (\r\n        <CollectionWrapper>\r\n            <CollectionContent bg={path}>\r\n            <CollectionName>Входит в {name}</CollectionName>\r\n            <CollectionDescription>Коллекция включает {getTitle()}</CollectionDescription>\r\n            <CollectionButton\r\n                onClick={() => history.push(`/collection/${id}`)}\r\n            >Смотреть коллекцию</CollectionButton>\r\n            </CollectionContent>\r\n        </CollectionWrapper>\r\n    )\r\n}\r\n\r\nexport default Collection;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\n\r\nconst RecommendationCardWrapper = styled.div`\r\n    max-width: 230px;\r\n`;\r\n\r\nconst RecommendationCardImgWrapper = styled.div`\r\n    cursor: pointer;\r\n    position: relative;\r\n    max-width: 230px;\r\n    font-size: 16px;\r\n\r\n    &:hover .visible {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst RecommendationCardRelease = styled.div`\r\n    background-color: rgba(255,255,255,0.9);\r\n    position: absolute;\r\n    bottom: 0px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: opacity 200ms;\r\n`;\r\n\r\nconst RecommendationCardImg = styled.img`\r\n    border-radius: 5px;\r\n    max-width: 230px;\r\n    max-height: 130px;\r\n`;\r\n\r\nconst RecommendationCardTitleWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;  \r\n`;\r\n\r\nconst RecommendationCardTitle = styled.div``;\r\n\r\nconst RecommendationCardRate = styled.div``;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    border-bottom: 1px solid rgb(215,215,215);\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 210px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 205px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px;   \r\n    margin-bottom: 20px;\r\n`;\r\n\r\n\r\nconst Recommendation = ({recommendations, history, MoviesService, castRequested, movieDetailsRequested, getDetails, getCast, getKeywords, getVideos, getSocailLink, getRecommendations}) => {\r\n    const handleRouting = (id) => {\r\n        if (history.location.pathname.includes('tv')) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getTVDetails); \r\n            getCast(id, MoviesService.getTVCasts);\r\n            getKeywords(id, MoviesService.getTVKeywords);\r\n            getVideos(id, MoviesService.getTVVideos);\r\n            getSocailLink(id, MoviesService.getTVExternalIds);\r\n            getRecommendations(id, MoviesService.getTVRecommendations);\r\n            history.push(`/tv/${id}`)\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getMovieDetails);\r\n            getCast(id, MoviesService.getCast);\r\n            getKeywords(id, MoviesService.getKeywords);\r\n            getVideos(id, MoviesService.getVideos);\r\n            getSocailLink(id, MoviesService.getMovieExternalIds);\r\n            getRecommendations(id, MoviesService.getMovieRecommendations);\r\n            history.push(`/movie/${id}`)\r\n        }\r\n    }\r\n\r\n    const recommendationItems = recommendations.filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const {id, vote_average, title, release_date, name, first_air_date, backdrop_path} = item;\r\n            const src = backdrop_path ? ('//image.tmdb.org/t/p/w250_and_h141_face' + backdrop_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n            const releaseDate = moment(release_date || first_air_date).format('DD/MM/YYYY');\r\n            return (\r\n                <RecommendationCardWrapper key={index}>\r\n                    <RecommendationCardImgWrapper>\r\n                        <RecommendationCardImg \r\n                            src={src} \r\n                            alt={title || name}\r\n                            onClick={() => handleRouting(id)}\r\n                        />\r\n                        <RecommendationCardRelease className={'visible'}>\r\n                            <i className=\"far fa-calendar-alt\"></i> {releaseDate}\r\n                        </RecommendationCardRelease>\r\n                    </RecommendationCardImgWrapper>\r\n                    <RecommendationCardTitleWrapper>\r\n                        <RecommendationCardTitle>\r\n                            <EllipsisText text={title || name} length={24}/>\r\n                        </RecommendationCardTitle>\r\n                        <RecommendationCardRate>{vote_average * 10}%</RecommendationCardRate>\r\n                    </RecommendationCardTitleWrapper>\r\n                </RecommendationCardWrapper>\r\n            )\r\n        })\r\n    \r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitle>Рекомендации </SectionTitle>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={2} \r\n                    itemsToShow={3}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {recommendationItems}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n        </CarouselWrapper>\r\n    )\r\n}\r\n\r\nexport default Recommendation;","import React, {Component} from 'react';\r\nimport Spinner from '../../../shared/spinner/spinner';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Cast, Details, OriginalDetails, Keywords, Collection, Recommendation} from './components';\r\nimport WithMoviesService from '../../../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded, keywordsRequested, keywordsLoaded, modalWindowToggle, videoLoaded, socialLinkLoaded, collectionLoaded, recommendationsLoaded} from '../../../../actions/actions';\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    background-image: linear-gradient(315deg, rgba(233, 188, 183, 0.7) 0%, rgba(41, 82, 74, 0.8) 74%), ${props => `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.backdrop})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    color: #fff;\r\n    font-family: 'Source Sans Pro';\r\n    background-color: #e9bcb7;\r\n`\r\n\r\nclass MovieDetails extends Component {\r\n    componentDidMount() {\r\n        const {movieId, history, details, movieDetailsRequested, castRequested, MoviesService} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                this.getDetails(movieId, MoviesService.getTVDetails); \r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getKeywords(movieId, MoviesService.getTVKeywords);\r\n                this.getVideos(movieId, MoviesService.getTVVideos);\r\n                this.getSocailLink(movieId, MoviesService.getTVExternalIds);\r\n                this.getRecommendations(movieId, MoviesService.getTVRecommendations);\r\n            } else {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getKeywords(movieId, MoviesService.getKeywords);\r\n                this.getVideos(movieId, MoviesService.getVideos);\r\n                this.getSocailLink(movieId, MoviesService.getMovieExternalIds);\r\n                this.getRecommendations(movieId, MoviesService.getMovieRecommendations);\r\n            } \r\n        }\r\n    }\r\n\r\n    getDetails = (id, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => {\r\n                movieDetailsLoaded(response);\r\n                if (response && response.belongs_to_collection) {\r\n                    this.getCollectionDetails(response.belongs_to_collection.id)\r\n                }  \r\n            })\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getCast = (id, request) => {\r\n        const {movieDetailsError, castLoaded} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getKeywords = (id, request) => {\r\n        const {keywordsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => keywordsLoaded(response.keywords || response.results))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getVideos = (id, request) => {\r\n        const {videoLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => videoLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getSocailLink = (id, request) => {\r\n        const {socialLinkLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => socialLinkLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getRecommendations = (id, request) => {\r\n        const {recommendationsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then(response => recommendationsLoaded(response.results))\r\n            .catch(error => movieDetailsError())\r\n    }\r\n\r\n    getCollectionDetails = (id) => {\r\n        const {MoviesService, collectionLoaded, movieDetailsError} = this.props;\r\n\r\n        MoviesService.getCollection(id)\r\n            .then((response) => collectionLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    showCollection = (isBelongToCollection) => {\r\n        const {history, details, loading, collection} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isBelongToCollection) {\r\n            return <Collection details={details} history={history} collection={collection}/>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    showRecommendations = (isRecommendation) => {\r\n        const {history, loading, recommendations, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isRecommendation.length) {\r\n            return(\r\n                <Recommendation \r\n                    history={history} \r\n                    recommendations={recommendations}\r\n                    MoviesService={MoviesService} \r\n                    getDetails={this.getDetails} \r\n                    getCast={this.getCast}\r\n                    getKeywords={this.getKeywords}\r\n                    getVideos={this.getVideos}\r\n                    getSocailLink={this.getSocailLink}\r\n                    getRecommendations={this.getRecommendations}\r\n                    movieDetailsRequested={movieDetailsRequested}\r\n                    castRequested={castRequested}\r\n                />\r\n            )\r\n        } else if (!isRecommendation.length) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieId, keywordId, history, details, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, modalWindowToggle, socialLink, recommendations} = this.props;\r\n        const globalLoading = loading || loadingCast || loadingKeywords;\r\n        if (globalLoading) {\r\n           return <Spinner/>\r\n        } else {\r\n           return(\r\n            <>\r\n                <BackgroundWrapper backdrop={details?.backdrop_path}>\r\n                        <Container className=\"w-100\">\r\n                            <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                            <Details details={details} movieId={movieId} video={video} history={history} onOpenModal={modalWindowToggle} modalWindow={modalWindow} onCloseModal={modalWindowToggle}/>\r\n                            </Row>\r\n                        </Container> \r\n                </BackgroundWrapper> \r\n                <Container className=\"mt-4 mb-5\">\r\n                    <Row>\r\n                        <Col className=\"col-8\">\r\n                            <Cast casts={casts} id={movieId} history={history}/>\r\n                            {this.showCollection(details?.belongs_to_collection)}\r\n                            {this.showRecommendations(recommendations)}\r\n                        </Col>\r\n                        <Col className=\"col-4\">\r\n                            <Row>\r\n                                <OriginalDetails details={details} history={history} socialLink={socialLink}/>\r\n                            </Row>\r\n                            <Row className=\"flex-column\">\r\n                                <Keywords keyword={keywords} history={this.props.history} keywordId={keywordId} url={'keywords'}/>\r\n                            </Row>\r\n                        </Col>                       \r\n                    </Row>\r\n                </Container>\r\n            </>\r\n           )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, socialLink, collection, recommendations} = state.movieDetailsReducer;\r\n    return {\r\n        details: movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    recommendationsLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(MovieDetails));\r\nexport {BackgroundWrapper};","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\nexport default withRouter(ScrollToTop)","export default class MoviesServices {\r\n    constructor() {\r\n        this._baseApi = 'https://api.themoviedb.org/3';\r\n        this._apiKey = 'api_key=d97132eedaef267781863bedd0564229';\r\n        this._apiLanguage = 'language=ru-RU';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._baseApi}${url}${this._apiKey}&${this._apiLanguage}`);\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getPopular = async (page) => {\r\n        const response = await this.getResource(`/movie/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getMovieDetails = async (movieId) => { \r\n        const response = await this.getResource(`/movie/${movieId}?`);\r\n        if (response && response.status_code === 34) {\r\n            return this.getTVDetails(movieId)\r\n        }\r\n        return response;   \r\n    }\r\n\r\n    getNowPlaying = async (page) => {\r\n        const response = await this.getResource(`/movie/now_playing?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTopRated = async (page) => {\r\n        const response = await this.getResource(`/movie/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getUpcoming = async (page) => {\r\n        const response = await this.getResource(`/movie/upcoming?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCast = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getKeywords = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getVideos = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieByKeyword = async (keywordId, page) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}/movies?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getKeywordName = async (keywordId) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonBiography = async (personId) => {\r\n        const biography = await this.getResource(`/person/${personId}?`);\r\n        const combinedMoviesTv = await this.getResource(`/person/${personId}/combined_credits?`);   \r\n        return {biography, combinedMoviesTv};\r\n\r\n    }\r\n\r\n    getTVDetails = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}?`);\r\n        return response;\r\n    }\r\n\r\n    getTVCasts = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getTVKeywords = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getTVVideos = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getTVPopular = async (page) => {\r\n        const response = await this.getResource(`/tv/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVAiringToday = async (page) => {\r\n        const response = await this.getResource(`/tv/airing_today?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVTopRated = async (page) => {\r\n        const response = await this.getResource(`/tv/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVOnTheAir = async (page) => {\r\n        const response = await this.getResource(`/tv/on_the_air?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getPopularPerson = async (page) => {\r\n        const response = await this.getResource(`/person/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCollection = async (collectionId) => {\r\n        const response = await this.getResource(`/collection/${collectionId}?`);\r\n        return response;\r\n    }\r\n\r\n    getGenreList = async () => {\r\n        const response = await this.getResource(`/genre/movie/list?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieExternalIds = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getTVExternalIds = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonExternalIds = async (personId) => {\r\n        const response = await this.getResource(`/person/${personId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getInTrend = async (time) => {\r\n        const response = await this.getResource(`/trending/all/${time}?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRecommendations = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRecommendations = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MovieCardWrapper = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    min-height: 141px;\r\n    height: 100%;\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    &:first-child {\r\n        margin-top: 35px;\r\n    }\r\n`;\r\n\r\nconst MovieCardImg = styled.img`\r\n    border-top-left-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    width: 94px;\r\n    height: 141px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardContent = styled.div`\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst MovieCardTitle = styled.div`\r\n    font-size: 19.2px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardReleaseDate = styled.div`\r\n    font-size: 16px;\r\n    color: #999;\r\n`;\r\n\r\nconst MovieCardDescription = styled.div`\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    height: 72px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst KeywordName = styled.div`\r\n    font-size: 32px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieQuantity = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    opacity: 0.5;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieListByKeywords = ({movies, totalResults, keywordName}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const moviesItem = movies.map((item, index) => {\r\n        \r\n        const releaseDate = moment(item.release_date).format('DD/MM/YYYY');\r\n    \r\n        const src = !item.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path);\r\n\r\n\r\n        return (\r\n            <MovieCardWrapper key={index}>\r\n                <MovieCardImg \r\n                    src={src}\r\n                    onClick={() => {\r\n                        history.push(`/movie/${item.id}`)\r\n                    }}/>\r\n                <MovieCardContent>\r\n                    <MovieCardTitle\r\n                        onClick={() => {\r\n                            history.push(`/movie/${item.id}`)\r\n                        }}\r\n                    >{item.title}</MovieCardTitle>\r\n                    <MovieCardReleaseDate>{releaseDate}</MovieCardReleaseDate>\r\n                    <MovieCardDescription>\r\n                        <EllipsisText text={item.overview} length={260}/>\r\n                    </MovieCardDescription>\r\n                </MovieCardContent>\r\n            </MovieCardWrapper>\r\n        )\r\n    })\r\n\r\n    const film = totalResults === 1 ? 'фильм' : totalResults < 5 ? 'фильма' : 'фильмов'\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <Header>\r\n                    <KeywordName>{keywordName}</KeywordName>\r\n                    <MovieQuantity>{totalResults} {film}</MovieQuantity>\r\n                </Header>\r\n            </HeaderWrapper>\r\n            {moviesItem}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieListByKeywords;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MoviesServices from '../../services/services';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport LoadMoreSpinner from '../shared/spinner/loadMoreSpinner';\r\nimport MovieListByKeywords from './components/movieListByKeywords';\r\n\r\nconst MovieListWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin: 0 auto 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 930px;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nexport default class MoviesByKeyword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n            loading: true,\r\n            page: 0,\r\n            loadingMore: false,\r\n            totalResults: 0,\r\n            totalPages: 0,\r\n            keywordName: ''\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.keywordId);\r\n\r\n        this.getKeywordName(this.props.keywordId);\r\n    }\r\n\r\n    onLoadingMovies = (response, results, pages) => {\r\n        this.setState({\r\n            movies: [...this.state.movies, ...response],\r\n            loading: false,\r\n            page: this.state.page + 1,\r\n            loadingMore: false,\r\n            totalResults: results,\r\n            totalPages: pages,\r\n            \r\n        })\r\n    }\r\n\r\n    getMovies = (keywordId) => {\r\n        const {page} = this.state;\r\n\r\n        this.onToogleLoading();\r\n\r\n        this.moviesServices.getMovieByKeyword(this.props.keywordId, page + 1)\r\n            .then((response) => {\r\n                this.onLoadingMovies(response.results, response.total_results, response.total_pages)\r\n            })\r\n    }\r\n\r\n    getKeywordName = (keywordId) => {\r\n        this.moviesServices.getKeywordName(this.props.keywordId)\r\n            .then((response) => {\r\n                this.onLoadingKeywordName(response.name)\r\n            })\r\n    }\r\n\r\n    onLoadingKeywordName = (response) => {\r\n        this.setState({\r\n            keywordName: response\r\n        })\r\n    }\r\n\r\n    onToogleLoading = () => {\r\n        this.setState({\r\n            loadingMore: true\r\n        })\r\n    }\r\n\r\n    showButton = () => {\r\n        const {loadingMore, totalPages} = this.state;\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n        if (totalPages !== 1) {\r\n            return (\r\n                <ButtonWrapper>\r\n                    <LoadMoreButton onClick={ () => this.getMovies()}>\r\n                        {loadSpinner}\r\n                    </LoadMoreButton>\r\n                </ButtonWrapper>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, totalResults, keywordName} = this.state;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else {\r\n            return (\r\n                <>               \r\n                    <MovieListWrapper>\r\n                        <MovieListByKeywords \r\n                            movies={movies} \r\n                            totalResults={totalResults} \r\n                            keywordName={keywordName}\r\n                        />\r\n                    </MovieListWrapper>\r\n                        {this.showButton()}         \r\n                </>\r\n            ) \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CastTitle = styled.div`\r\n    font-size: 22.4px;\r\n    font-family: Arial;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst CastNumber = styled.span`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst CastItemImg = styled.img`\r\n    width: 66px;\r\n    height: 66px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastContent = styled.div``;\r\n\r\nconst DepartmentTitle = styled.div`\r\n    margin: 20px 0 8px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Actors = ({casts, history}) => {\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.map((item, index) => {\r\n        const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastItemImg \r\n                    alt={item.name} \r\n                    src={src} \r\n                    onClick={() => history.push(`/person/${item.id}`)}\r\n                />\r\n                <CastNameWrapper>\r\n                    <CastName \r\n                        onClick={() => history.push(`/person/${item.id}`)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastNameWrapper>\r\n            </CastItemWrapper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Актёрский состав <CastNumber>{cast.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                {castItem}\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Crew = ({casts, history}) => {\r\n\r\n    const {crew} = casts;\r\n\r\n    const CrewDepartment = ({department}) => {\r\n        const crewItem = crew.map((item, index) => {\r\n            const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            if (item.department === department) {\r\n                return (\r\n                    <CastItemWrapper key={index}>\r\n                        <CastItemImg \r\n                            alt={item.name} \r\n                            src={src} \r\n                            onClick={() => {history.push(`/person/${item.id}`)}}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName \r\n                                onClick={() => {history.push(`/person/${item.id}`)}}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.job}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        return crewItem;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Съёмочный состав <CastNumber>{crew.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                <DepartmentTitle>Оформление</DepartmentTitle>\r\n                <CrewDepartment department={'Art'}/>\r\n                <DepartmentTitle>Камера</DepartmentTitle>\r\n                <CrewDepartment department={'Camera'}/>\r\n                <DepartmentTitle>Костюмы и грим</DepartmentTitle>\r\n                <CrewDepartment department={'Costume & Make-Up'}/>\r\n                <DepartmentTitle>Ещё</DepartmentTitle>\r\n                <CrewDepartment department={'Crew'}/>\r\n                <DepartmentTitle>Режиссура</DepartmentTitle>\r\n                <CrewDepartment department={'Directing'}/>\r\n                <DepartmentTitle>Монтаж</DepartmentTitle>\r\n                <CrewDepartment department={'Editing'}/>\r\n                <DepartmentTitle>Свет</DepartmentTitle>\r\n                <CrewDepartment department={'Lighting'}/>\r\n                <DepartmentTitle>Продакшн</DepartmentTitle>\r\n                <CrewDepartment department={'Production'}/>\r\n                <DepartmentTitle>Звук</DepartmentTitle>\r\n                <CrewDepartment department={'Sound'}/>\r\n                <DepartmentTitle>Визуальные эффекты</DepartmentTitle>\r\n                <CrewDepartment department={'Visual Effects'}/>\r\n                <DepartmentTitle>Сценарий</DepartmentTitle>\r\n                <CrewDepartment department={'Writing'}/>\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {Actors, Crew};","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport moment from 'moment';\r\nimport {Actors, Crew} from './components/fullCastList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded} from '../../actions/actions';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 0;\r\n    margin: 0 0 30px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1110px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst MovieName = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieReleaseYear = styled.span`\r\n    font-size: 35.2px;\r\n    font-weight: 400;\r\n    opacity: 0.8;\r\n    color: #fff;\r\n`;\r\n\r\nconst MoviePosterImg = styled.img`\r\n    width: 58px;\r\n    height: 87px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieContent = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst ButtonBack = styled.div`\r\n    cursor: pointer;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    opacity: 0.6;\r\n    color: #fff;\r\n`;\r\n\r\nclass FullCast extends Component {\r\n    componentWillMount() {\r\n        const {movieId, history, details, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getDetails(movieId, MoviesService.getTVDetails);\r\n            } else {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n            }\r\n        }\r\n    }\r\n \r\n    getCast = (movieId, request) => {\r\n        const {castLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getDetails = (movieId, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => movieDetailsLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    onGoBack = () => { \r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const {casts, loadingCast, history, details} = this.props;\r\n        const spinnerActors = loadingCast ? <Spinner/> : <Actors casts={casts} history={history}/>;\r\n        const spinnerCrew = loadingCast ? <Spinner/> : <Crew casts={casts} history={history}/>;\r\n\r\n        const releaseYear = moment(details.first_air_date || details.release_date).format('YYYY');\r\n        const src = !details.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w58_and_h87_face' + details.poster_path);\r\n        \r\n        return (\r\n            <>\r\n                <HeaderWrapper>\r\n                    <Header>\r\n                        <MoviePosterImg src={src} alt={details.name || details.title} onClick={this.onGoBack}/>\r\n                        <MovieContent>\r\n                            <MovieName onClick={this.onGoBack}>{details.name || details.title}\r\n                                <MovieReleaseYear> ({releaseYear})</MovieReleaseYear>\r\n                            </MovieName>  \r\n                            <ButtonBack\r\n                                onClick={this.onGoBack}\r\n                            > <i className=\"fas fa-arrow-left\"></i> Назад на главную</ButtonBack>\r\n                        </MovieContent>\r\n                    </Header>\r\n                </HeaderWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {spinnerActors}\r\n                        </Col>\r\n                        <Col>\r\n                            {spinnerCrew}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, casts, loadingCast} = state.movieDetailsReducer;\r\n\r\n    return {\r\n        details: movieDetails,\r\n        casts,\r\n        loadingCast\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(FullCast));","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport MoviesServices from '../../../services/services';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MovieListItemWrapper = styled.div`\r\n    border-bottom: ${props => !props.hasBorder ? '1px solid rgb(227, 227, 227)' : 'none'};\r\n    font-size: 16px;\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`   \r\n    font-weight: 400;\r\n    padding: 8px 16px;\r\n    width: 70px;\r\n    text-align: center;\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n    font-weight: 600;\r\n    padding: 8px 0 8px 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LikeCharacter = styled.div`\r\n    opacity: 0.5;\r\n    padding: 0 8px;\r\n`;\r\n\r\nconst Character = styled.div`\r\n    opacity: 0.8;\r\n    padding: 8px 16px 8px 0;\r\n`;\r\n\r\nconst MoviePreviewButton = styled.div`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    border: 1px solid #000;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    .popover-body {\r\n        width: 535px;\r\n        background-color: rgb(3, 37, 65);\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        cursor: default;\r\n        padding: 13px;\r\n    }\r\n\r\n    .bs-popover-top > .arrow::after, .bs-popover-auto[x-placement^=\"top\"] > .arrow::after{\r\n        border-top-color: rgb(3, 37, 65);\r\n    }\r\n`;\r\n\r\nconst CircleHover = styled.div`\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #000;\r\n    opacity: ${(props) => props.show ? 1 : 0};\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst PopoverImgWrapper = styled.div``;\r\n\r\nconst PopoverPoster = styled.img`\r\n    width: 94px;\r\n    height: 141px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverContentWrapper = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst PopoverTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst PopoverTitle = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverDescription = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 21.6px;\r\n`;\r\n\r\nconst PopoverRate = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    padding: 4px 8px;\r\n    font-size: 14.4px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-left: 10px;\r\n\r\n    & i {\r\n        font-size: 10px;\r\n        margin-right: 3px;\r\n    }\r\n`;\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n\r\n    &:hover {\r\n        color:rgb(30, 213, 169);\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PersonDetailsCasts = ({cast}) => {\r\n    const [castItem, setCastItem] = useState([]);\r\n    const [filterSelected, setFilterSelected] = useState(false);\r\n    const noDateCasts = cast.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCasts = cast.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCast = releaseDateCasts.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n\r\n    const allCasts = [...noDateCasts, ...sortedCast];\r\n\r\n    const filteredByMovieType = allCasts.filter(item => item.media_type === 'movie');\r\n    const filteredByTVType = allCasts.filter(item => item.media_type === 'tv');\r\n    const movieQuantity = filteredByMovieType.length;\r\n    const tvQuantity = filteredByTVType.length;\r\n    const movies = (casts) => {\r\n        return casts.map((item, index, arr) => {\r\n            if (item.title || item.name) {\r\n                const releaseDate = item.release_date || item.first_air_date;\r\n                const fullDateToYear = moment(releaseDate).format('YYYY');\r\n                const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n                let current;\r\n                let next;\r\n                if (index > 0) {\r\n                    current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                    next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n                }\r\n                return (\r\n                    <HistoryItem key={index} cast={item} date={date} hasBorder={next === current}/>  \r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n    }, []);\r\n\r\n    const onSelect = (content) => {\r\n        const data = movies(content)\r\n        setCastItem(data)\r\n        setFilterSelected(true)\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n        setFilterSelected(false)\r\n    }\r\n\r\n    const clearButton = filterSelected ? <ClearButton onClick={clearFilter}>Очистить</ClearButton> : null;\r\n\r\n    return (\r\n        <>\r\n            <MovieListWrapper>\r\n                <DepartmentListTitle>\r\n                    Актёрское искусство\r\n                    <FilterWrapper>\r\n                        {clearButton}\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Все\">\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByMovieType)}>Фильмы {movieQuantity}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByTVType)}>ТВ Сериалы {tvQuantity}</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </FilterWrapper>\r\n                </DepartmentListTitle>\r\n                <MovieListContent>\r\n                    {castItem}\r\n                </MovieListContent>\r\n            </MovieListWrapper>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst HistoryItem = ({cast, date, hasBorder}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = cast.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + cast.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = cast.vote_average.toFixed(1);\r\n    const tvEpisodes = cast.episode_count ? `(${cast.episode_count} эпизодов)` : null;\r\n  \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n            <ReleaseDate>{date}</ReleaseDate>\r\n            <MoviePreviewButton ref={ref}\r\n                onClick={handleClick}>\r\n                    <CircleHover show={show}></CircleHover>  \r\n            </MoviePreviewButton>\r\n                <Overlay \r\n                    show={show}\r\n                    target={target}\r\n                    container={ref.current}\r\n                    rootClose={true}\r\n                    onHide={handleClick}\r\n                >\r\n                    <Popover>\r\n                        <Popover.Content>\r\n                            <PopoverImgWrapper>\r\n                                <PopoverPoster \r\n                                    src={src} \r\n                                    alt={cast.title || cast.name} \r\n                                    onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                />\r\n                            </PopoverImgWrapper>\r\n                            <PopoverContentWrapper>\r\n                                <PopoverTitleWrapper>\r\n                                    <PopoverTitle\r\n                                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                    >{cast.title || cast.name}</PopoverTitle>\r\n                                    <PopoverRate>\r\n                                        <i className=\"fas fa-star\"></i> {rate}\r\n                                    </PopoverRate>\r\n                                </PopoverTitleWrapper> \r\n                                <PopoverDescription>{textEllipsis(cast.overview, 96)}</PopoverDescription>    \r\n                            </PopoverContentWrapper>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n            <MovieTitle\r\n                onClick={() => handleRouting(cast.id, cast.media_type)}\r\n            >{cast.title || cast.name}</MovieTitle>\r\n            <LikeCharacter> {tvEpisodes} как</LikeCharacter>\r\n            <Character>{cast.character}</Character>\r\n        </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\nexport default PersonDetailsCasts;\r\nexport {CircleHover, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate};","import React, {useState} from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport {CircleHover, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate} from './personDetailsCasts';\r\nimport MoviesServices from '../../../services/services';\r\n\r\n\r\n\r\nconst PersonDetailsCrew = ({crew}) => {\r\n    const noDateCrew = crew.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCrew = crew.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCrew = releaseDateCrew.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n    \r\n    const allCrews = [...noDateCrew, ...sortedCrew];\r\n    \r\n    const crewItem = allCrews.map((item, index, arr) => {\r\n        if (item.title || item.name) {\r\n            const releaseDate = item.release_date || item.first_air_date;\r\n            const fullDateToYear = moment(releaseDate).format('YYYY');\r\n            const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n            let current;\r\n            let next;\r\n            if (index > 0) {\r\n                current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n            }\r\n            return (\r\n                <HistoryItem key={index} item={item} date={date} hasBorder={next === current}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return crewItem;\r\n}\r\n\r\n\r\nconst HistoryItem = ({item, date, hasBorder}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = item.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = item.vote_average.toFixed(1);\r\n    const tvEpisodes = item.episode_count ? `(${item.episode_count} эпизодов)` : null;\r\n    \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                debugger\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n                <ReleaseDate>{date}</ReleaseDate>\r\n                <MoviePreviewButton ref={ref}\r\n                 onClick={handleClick}>\r\n                        <CircleHover show={show}></CircleHover>  \r\n                </MoviePreviewButton>\r\n                    <Overlay \r\n                        show={show}\r\n                        target={target}\r\n                        container={ref.current}\r\n                        rootClose={true}\r\n                        onHide={handleClick}\r\n                    >\r\n                        <Popover>\r\n                            <Popover.Content>\r\n                                <PopoverImgWrapper>\r\n                                    <PopoverPoster \r\n                                        src={src} \r\n                                        alt={item.title || item.name} \r\n                                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                                    />\r\n                                </PopoverImgWrapper>\r\n                                <PopoverContentWrapper>\r\n                                    <PopoverTitleWrapper>\r\n                                        <PopoverTitle\r\n                                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                                        >{item.title || item.name}</PopoverTitle>\r\n                                        <PopoverRate>\r\n                                            <i className=\"fas fa-star\"></i> {rate}\r\n                                        </PopoverRate>\r\n                                    </PopoverTitleWrapper> \r\n                                    <PopoverDescription>{textEllipsis(item.overview, 96)}</PopoverDescription>    \r\n                                </PopoverContentWrapper>\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    </Overlay>\r\n                <MovieTitle\r\n                    onClick={() => handleRouting(item.id, item.media_type)}\r\n                >{item.title || item.name}</MovieTitle>\r\n                <LikeCharacter> {tvEpisodes} ...</LikeCharacter>\r\n                <Character>{item.job}</Character>\r\n            </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\n\r\nexport default PersonDetailsCrew;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PersonDetailsCrew from './personDetailsCrew';\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst CrewByDepartments = ({crew}) => {\r\n\r\n    const filteredCrew = (department) => {\r\n        return crew.filter(item => item.department === department);\r\n    }\r\n\r\n    const production = !filteredCrew(\"Production\").length ? null : <Department crew={filteredCrew(\"Production\")}/>;\r\n    const writing = !filteredCrew(\"Writing\").length ? null : <Department crew={filteredCrew(\"Writing\")}/>;\r\n    const art = !filteredCrew(\"Art\").length ? null : <Department crew={filteredCrew(\"Art\")}/>;\r\n    const camera = !filteredCrew(\"Camera\").length ? null : <Department crew={filteredCrew(\"Camera\")}/>;\r\n    const makeUp = !filteredCrew(\"Costume & Make-Up\").length ? null : <Department crew={filteredCrew(\"Costume & Make-Up\")}/>;\r\n    const crews = !filteredCrew(\"Crew\").length ? null : <Department crew={filteredCrew(\"Crew\")}/>;\r\n    const directing = !filteredCrew(\"Directing\").length ? null : <Department crew={filteredCrew(\"Directing\")}/>;\r\n    const editing = !filteredCrew(\"Editing\").length ? null : <Department crew={filteredCrew(\"Editing\")}/>;\r\n    const lighting = !filteredCrew(\"Lighting\").length ? null : <Department crew={filteredCrew(\"Lighting\")}/>;\r\n    const sound = !filteredCrew(\"Sound\").length ? null : <Department crew={filteredCrew(\"Sound\")}/>;\r\n    const visualEffects = !filteredCrew(\"Visual Effects\").length ? null : <Department crew={filteredCrew(\"Visual Effects\")}/>;\r\n\r\n    return (\r\n        <MovieListWrapper>\r\n            {production}\r\n            {writing}\r\n            {art}\r\n            {camera}\r\n            {makeUp}\r\n            {crews}\r\n            {directing}\r\n            {editing}\r\n            {lighting}\r\n            {sound}\r\n            {visualEffects}\r\n        </MovieListWrapper>\r\n    )\r\n}\r\n\r\nconst Department = ({crew}) => {\r\n    return (\r\n        <>\r\n            <DepartmentListTitle>{crew[0].department}</DepartmentListTitle>\r\n            <MovieListContent>\r\n                <PersonDetailsCrew crew={crew}/>\r\n            </MovieListContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrewByDepartments;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport {PersonDetailsCasts, CrewByDepartments} from './index';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport MoviesServices from '../../../services/services';\r\nimport {Overlay, LinkIconWrapper, Link} from '../../moviesPage/components/movieDetailsPage/components/originalDetails';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst ImgWrapper = styled.img`\r\n    width: 300px;\r\n    height: 450px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n    max-width: 890px;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`;\r\n\r\nconst BioWrapper = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n    margin: 30px 0;\r\n`;\r\n\r\nconst BioContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;  \r\n    height: ${props => (props.mainHeight && props.childRef > 200) ? '200px' : 'auto' };\r\n    overflow: hidden;  \r\n    transition: height 200ms;\r\n    text-align: justify;\r\n\r\n    &.open {\r\n        height: ${props => props.childRef + 'px'};\r\n    }\r\n`;\r\n\r\nconst PersonalInfo = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n`;\r\n\r\nconst PersonalInfoItemTitle = styled.div`\r\n    font-size:16px;\r\n    font-weight:600;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst PersonalInfoItemSubtitle = styled.div`\r\n    font-size:16px;\r\n    font-weight:400;\r\n`;\r\n\r\nconst AlsoKnowWrapper = styled.div`\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ReadMoreButton = styled.button`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${props => (props.mainHeight && props.childRef > 200) ? 'flex' : 'none'};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228); \r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PersonDetails = ({person, cast, crew, socialLink}) => {\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n    const history = useHistory();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n    \r\n    const onOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight)\r\n    }\r\n    const classNames = isOpen ? 'open' : '';\r\n    const src = !person.profile_path ? (process.env.PUBLIC_URL + '/assets/avatar.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + person.profile_path);\r\n    const biography = !person.biography ? `У нас нет биографии для ${person.name}` : <div ref={element => getElementHeight(element)}>{person.biography}</div>;\r\n    const gender = person.gender === 1 ? 'Женский' : 'Мужской';\r\n    const alsoKnow = person.also_known_as.map((item, index) => {\r\n        return (\r\n            <AlsoKnowWrapper key={index}>\r\n                {item}\r\n            </AlsoKnowWrapper>\r\n        )\r\n    })\r\n    const birthday = person.birthday ? person.birthday : '-';\r\n    const ageAlive = !person.birthday ? ' ' : person.deathday ? null : (`(${moment().diff(`${person.birthday}`, 'years')} лет)`);\r\n    const ageDead = moment([person.deathday]).diff( moment([person.birthday]) , 'years');\r\n    const dateOfDeath = !person.deathday ? null : <PersonalInfoItemTitle>Дата смерти<PersonalInfoItemSubtitle>{person.deathday} ({ageDead} лет)</PersonalInfoItemSubtitle></PersonalInfoItemTitle>;\r\n    const acting = cast.length !== 0 ? <PersonDetailsCasts cast={cast}/> : null;\r\n    const filmCrew = crew.length !== 0 ? <CrewByDepartments crew={crew}/> : null;\r\n    const famousCast = cast.length !== 0 ? <FamousCast cast={cast} history={history}/> : null;\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <Col className=\"col-4\">\r\n                <ImgWrapper src={src} alt={person.name}/>\r\n                <LinkIconWrapper>\r\n                    {overlayFacebook}\r\n                    {overlayTwitter}\r\n                    {overlayInstagram}\r\n                </LinkIconWrapper>\r\n                <PersonalInfo>Персональная информация</PersonalInfo>\r\n                <PersonalInfoItemTitle>Известность за\r\n                    <PersonalInfoItemSubtitle>{person.known_for_department}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Пол\r\n                    <PersonalInfoItemSubtitle>{gender}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Дата рождения\r\n                    <PersonalInfoItemSubtitle>{birthday} {ageAlive}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                {dateOfDeath}\r\n                <PersonalInfoItemTitle>Место рождения\r\n                    <PersonalInfoItemSubtitle>{person.place_of_birth}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Также известность как\r\n                    <PersonalInfoItemSubtitle>{alsoKnow}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n            </Col>\r\n            <Col className=\"col-8\">\r\n                <DescriptionWrapper>\r\n                    <TitleWrapper>{person.name}</TitleWrapper>\r\n                    <BioWrapper>Биография\r\n                        <BioContent \r\n                            className={classNames}\r\n                            childRef={elementHeight}\r\n                            mainHeight={person.biography}\r\n                        >{biography}</BioContent>\r\n                        <ReadMoreButton\r\n                            childRef={elementHeight}\r\n                            mainHeight={person.biography}\r\n                            onClick={onOpen}\r\n                        >\r\n                            Читать ещё <i className=\"fas fa-chevron-right\"></i>\r\n                        </ReadMoreButton>\r\n                    </BioWrapper>   \r\n                </DescriptionWrapper>\r\n                {famousCast} \r\n                {acting}\r\n                {filmCrew}                 \r\n           </Col>            \r\n        </>            \r\n    )\r\n}\r\n\r\nconst FamousCast = ({cast, history}) => {\r\n    \r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    let carousel;\r\n\r\n    const castItem = cast.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.poster_path ? ('https://image.tmdb.org/t/p/w150_and_h225_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name || item.title} \r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    >\r\n                        <EllipsisText text={item.name || item.title} length={13}/>\r\n                    </CastName>\r\n                </CastItemWrapper>\r\n            )\r\n        });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <CastTitle>Известность за</CastTitle>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={1} \r\n                    itemsToShow={5}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n        </CarouselWrapper>  \r\n    )\r\n}\r\n\r\nexport default PersonDetails;","import React, {Component} from 'react';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport MoviesServices from '../../services/services';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport {PersonDetails} from './components';\r\n\r\n\r\nexport default class PersonBiography extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n            person: null,\r\n            loading: true,\r\n            cast: null,\r\n            crew: null,\r\n            socialLink: {}\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {personId} = this.props;\r\n        this.getBiography(personId);  \r\n        this.getPersonSocailLink(personId); \r\n    }\r\n\r\n    onLoading = (response, cast, crew) => {\r\n        this.setState({\r\n            person: response,\r\n            loading: false,\r\n            cast: cast,\r\n            crew: crew,       \r\n        })\r\n    }\r\n\r\n    getBiography = (personId) => {\r\n        this.moviesServices.getPersonBiography(personId)\r\n            .then((response) => {\r\n                this.onLoading(response.biography, response.combinedMoviesTv.cast, response.combinedMoviesTv.crew)\r\n            })\r\n    }\r\n\r\n    getPersonSocailLink = (personId) => {\r\n        this.moviesServices.getPersonExternalIds(personId)\r\n            .then((response) => {\r\n                this.onLoadingLink(response)\r\n            })\r\n    }\r\n\r\n    onLoadingLink = (response) => {\r\n        this.setState({\r\n            socialLink: response\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {person, loading, cast, crew, socialLink} = this.state;\r\n\r\n        const spinnerPerson = loading ? <Spinner/> : <PersonDetails person={person} cast={cast} crew={crew} socialLink={socialLink}/>\r\n        return(\r\n            <Container className=\"mt-4\">\r\n                <Row>\r\n                    {spinnerPerson}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularTvRequested, popularTvLoaded, popularTvError, popularTvMoreRequested, popularTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass TVPopularPage extends Component {   \r\n    componentWillMount() { \r\n        if(!this.props.tv.length) {\r\n            this.props.popularTvRequested();\r\n            this.loadTV(this.props.popularTvLoaded)\r\n        }      \r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTv = () => {\r\n        const {page, popularTvMoreRequested, popularTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        popularTvMoreRequested();\r\n        this.loadTV(popularTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTv}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularTv, popularPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: popularTv,\r\n        page: popularPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVPopularPage));\r\n","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {airingTodayTvRequested, airingTodayTvLoaded, popularTvError, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass AiringTodayPage extends Component {\r\n    componentWillMount() {\r\n        if (!this.props.tv.length) {\r\n            this.props.airingTodayTvRequested();\r\n            this.loadTV(this.props.airingTodayTvLoaded);\r\n        }\r\n     }\r\n \r\n     loadTV = (success) => {\r\n         const {page, MoviesService, popularTvError} = this.props;\r\n \r\n         MoviesService.getTVAiringToday(page + 1)\r\n             .then((res) => success(res.results))\r\n             .catch(error => popularTvError())\r\n     }\r\n \r\n     loadMoreTV = () => {\r\n         const {page, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} = this.props;\r\n \r\n         if (page > 500) {\r\n             return\r\n         }\r\n \r\n         airingTodayTvMoreRequested();\r\n         this.loadTV(airingTodayTvMoreLoaded)\r\n     }\r\n \r\n     render() {\r\n         const {tv, loading, loadingMore, history} = this.props;\r\n         \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n     }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {airingTodayTv, loading, loadingMore, airingTodayPage} = state.tvPageReducer;\r\n    return {\r\n        tv: airingTodayTv,\r\n        page: airingTodayPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(AiringTodayPage));","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedTvRequested, topRatedTvTvLoaded, popularTvError, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass TVTopRatedPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.topRatedTvRequested();\r\n           this.loadTV(this.props.topRatedTvTvLoaded)\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n    \r\n    loadMoreTV = () => {\r\n        const {page, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedTvTvMoreRequested();\r\n        this.loadTV(topRatedTvTvMoreLoaded)\r\n    } \r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedTv, topRatedPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: topRatedTv,\r\n        page: topRatedPage,\r\n        loading, \r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVTopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {onTheAirTvRequested, onTheAirTvLoaded, popularTvError, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass OnTheAirPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.onTheAirTvRequested();\r\n           this.loadTV(this.props.onTheAirTvLoaded);\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVOnTheAir(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTV = () => {\r\n        const {page, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        onTheAirTvMoreRequested();\r\n        this.loadTV(onTheAirTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {onTheAirTv, loading, loadingMore, onTheAirPage} = state.tvPageReducer;\r\n    return {\r\n        tv: onTheAirTv,\r\n        page: onTheAirPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(OnTheAirPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { Pagination } from '@material-ui/lab';\r\n\r\nconst PersonItemWrapper = styled.div`\r\n    max-width: 235px;\r\n    width: 100%;\r\n    min-height: 287px;\r\n    height: 100%;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PersonImg = styled.img`\r\n    width: 235px;\r\n    height: 235px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonNameWrapper = styled.div`\r\n    padding: 8px 10px;\r\n`;\r\n\r\nconst PersonName = styled.div`\r\n    font-size: 16px;\r\n    line-height: 19.2px;\r\n    font-weight: 700;\r\n    text-align: left;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonCast = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 17.28px;\r\n    opacity: 0.6;\r\n    text-align: left;\r\n`;\r\n\r\n\r\nconst PersonList = ({person, loading, history, url, totalPages, getPerson, page}) => {\r\n    const personItem = person.map(item => {\r\n        const {name, known_for, profile_path, id} = item;\r\n        const src = profile_path ? ('https://image.tmdb.org/t/p/w235_and_h235_face' + profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n        \r\n        const castArray = known_for.map(movie => movie.name || movie.title);\r\n        const castToString = castArray.join(', ');\r\n\r\n        return (\r\n            <Col key={id} xs={3} className='mb-4'>\r\n                <PersonItemWrapper>\r\n                    <PersonImg \r\n                        src={src} \r\n                        alt={name}\r\n                        onClick={() => history.push(`${url}/${id}`)}\r\n                    />\r\n                    <PersonNameWrapper>\r\n                        <PersonName\r\n                            onClick={() => history.push(`${url}/${id}`)}\r\n                        >{name}</PersonName>\r\n                        <PersonCast>\r\n                            <EllipsisText text={castToString} length={27}/>\r\n                        </PersonCast>\r\n                    </PersonNameWrapper>  \r\n                </PersonItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    const spinner = loading ? <Spinner/> : personItem;\r\n\r\n    return (\r\n        <Container className=\"mt-5 container-xl\">\r\n            <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                {spinner}\r\n            </Row>\r\n            <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                <Pagination \r\n                    count={totalPages} \r\n                    boundaryCount={2}\r\n                    page={page}\r\n                    onChange={(event, page) => {\r\n                        getPerson(page)\r\n                    }}\r\n                />\r\n            </Row>\r\n        </Container>\r\n        \r\n    )\r\n}\r\n\r\nexport default PersonList;","import React, { Component }  from 'react';\r\nimport PersonList from './components/personList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularPersonRequested, popularPersonLoaded, popularPersonError} from '../../actions/actions';\r\n\r\nclass PersonPage extends Component {  \r\n    componentWillMount() {\r\n        const {popularPersonRequested, person, history, page} = this.props;\r\n        \r\n        history.push({\r\n            pathname: '/person',\r\n            search: `?page=${page}`\r\n        })\r\n\r\n        if (!person.length) {\r\n            popularPersonRequested();\r\n            this.loadPerson(); \r\n        }     \r\n    }\r\n\r\n    onServiceRequest = (page) => {\r\n        const {MoviesService, popularPersonError, popularPersonLoaded, history} = this.props;\r\n\r\n        MoviesService.getPopularPerson(page)\r\n        .then((res) => {\r\n            if (res) {\r\n                history.push({\r\n                    pathname: '/person',\r\n                    search: `?page=${page}`\r\n                });\r\n                const payload = {\r\n                    person: res.results,\r\n                    totalPages: res.total_pages,\r\n                    page: res.page\r\n                }\r\n                popularPersonLoaded(payload)\r\n            } \r\n        })\r\n        .catch(error => popularPersonError())\r\n    }\r\n\r\n    loadPerson = () => {\r\n        const {page} = this.props;\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    loadMorePerson = (page) => {\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    render() {\r\n        const {person, loading, totalPages, page, history} = this.props;\r\n    \r\n        return(\r\n            <PersonList\r\n                person={person}\r\n                loading={loading}\r\n                page={page}\r\n                totalPages={totalPages}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getPerson = {this.loadMorePerson}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {person, loading, page, totalPages} = state.popularPersonReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        page,\r\n        totalPages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PersonPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\n\r\nconst CastItemWrapper = styled.div`\r\n    max-width: ${props => props.large ? '1218px' : '290px'};\r\n    width: 100%;\r\n    display: flex;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 7px;\r\n    margin: 10px 0 4px;\r\n`;\r\n\r\nconst CastImgWrapper = styled.img`\r\n    width: ${props => props.large ? '94px' : '60px'};\r\n    height: ${props => props.large ? '141px' : '60px'};\r\n    border-top-left-radius: 7px;\r\n    border-bottom-left-radius: 7px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 14px;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: ${props => props.large ? '19px' : '16px'};\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: #08e8de;\r\n    }\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size:14.4px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 1.4em;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`\r\n    color: rgb(153, 153, 153);\r\n    font-size: 16px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionCast = ({cast, crew, parts, history}) => {  \r\n\r\n    const onGoToPersonDetails = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const onGoToMovieDetails = (id) => {\r\n        history.push(`/movie/${id}`)\r\n    }\r\n\r\n    const castItem = cast.filter((item, index) => index < 12)\r\n        .map((item, index) => {\r\n            const src = item.profile_path ? 'https://image.tmdb.org/t/p/w64_and_h64_face' + item.profile_path : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper>\r\n                        <CastImgWrapper \r\n                            src={src} \r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>\r\n                                <EllipsisText text={item.character} length={20}/> \r\n                            </CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n    const crewItem = crew.filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const src = item.profile_path ? 'https://image.tmdb.org/t/p/w64_and_h64_face' + item.profile_path : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper>\r\n                        <CastImgWrapper \r\n                            src={src} \r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.department}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n    const partItem = parts.map((part, index) => {\r\n        const src = part.poster_path ? 'https://image.tmdb.org/t/p/w94_and_h141_bestv2' + part.poster_path : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return (\r\n            <Col sm={12} key={index}>\r\n                <CastItemWrapper large>\r\n                    <CastImgWrapper \r\n                        src={src} \r\n                        alt={part.title} \r\n                        large\r\n                        onClick={() => onGoToMovieDetails(part.id)}\r\n                    />\r\n                    <CastNameWrapper>\r\n                        <CastName \r\n                            large\r\n                            onClick={() => onGoToMovieDetails(part.id)}\r\n                        >\r\n                            {part.title}\r\n                            <ReleaseDate>{moment(part.release_date).format('DD/MM/YYYY')}</ReleaseDate>\r\n                        </CastName>\r\n                        <CastCharacter>\r\n                            <EllipsisText text={part.overview} length={270}/>\r\n                        </CastCharacter>\r\n                    </CastNameWrapper>\r\n                </CastItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <Container>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            В главных ролях\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {castItem}\r\n                </Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            Постановщики\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {crewItem}\r\n                </Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            {parts.length} фильмов\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {partItem}\r\n                </Row>\r\n            </Section>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CollectionCast;","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {ImgWrapper, Title, DetailsList, Vote, Overview} from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport Rate from '../../shared/rate';\r\nimport {BackgroundWrapper} from '../../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport CollectionCast from './collectionCast';\r\n\r\nconst DetailsTitleWrapper = styled.div`\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst DetailsContentWrapper = styled.span`\r\n    font-weight: 400;\r\n`;\r\n\r\n\r\nconst CollectionDetails = ({collection, history, genre, cast, crew, revenue}) => {\r\n\r\n    const {name, poster_path, overview, parts, backdrop_path} = collection;\r\n    const averageVote = (parts.reduce((sum, item) => {\r\n        return sum + item.vote_average;\r\n    }, 0) / parts.length).toFixed(2);\r\n    const {genres} = genre;\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + poster_path);\r\n\r\n    const movieOverview = !overview ? '-' : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty('parts') && Object.keys(genre).length) {\r\n            parts.forEach(part => {\r\n                part.genre_ids.forEach(id => {\r\n                    genres.forEach(genre => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name)\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        return null;\r\n    }  \r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index\r\n    })\r\n    const uniquesToString = uniques.join(', ');\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue ? `$${nf.format(revenue).replace(/\\s/g, ',')}` : '-';\r\n\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={backdrop_path}>\r\n                    <Container>\r\n                        <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                            <Col className='col-4'>\r\n                                <ImgWrapper src={src} alt={name}/>\r\n                            </Col>\r\n                            <Col className='col-8 text-left px-0'>\r\n                                <Title>{name}</Title>\r\n                                <DetailsList>\r\n                                    <Row>                       \r\n                                        <Col className=\"col-auto\">{uniquesToString}</Col>\r\n                                    </Row>  \r\n                                    <Row className=\"font-weight-bold py-3\">\r\n                                        <Col className=\"col-auto d-flex\">\r\n                                            <Rate vote={averageVote}/>   \r\n                                            <Vote>Пользовательский счёт</Vote>\r\n                                        </Col>\r\n                                    </Row> \r\n                                    <Row className='flex-column py-2'>\r\n                                        <Col>\r\n                                            <Overview>\r\n                                                Обзор\r\n                                            </Overview>\r\n                                        </Col>\r\n                                        <Col>{movieOverview}</Col>\r\n                                    </Row>\r\n                                    <Row className='flex-column py-2'>\r\n                                        <Col>\r\n                                            <DetailsTitleWrapper>\r\n                                                Число фильмов: <DetailsContentWrapper>{parts.length}</DetailsContentWrapper>\r\n                                            </DetailsTitleWrapper>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <DetailsTitleWrapper>\r\n                                                Сборы: <DetailsContentWrapper>{movieRevenue}</DetailsContentWrapper>\r\n                                            </DetailsTitleWrapper>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </DetailsList>  \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n            </BackgroundWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionDetails;","import React, { Component }  from 'react';\r\nimport MoviesServices from '../../services/services';\r\nimport CollectionDetails from './components/collectionDetails';\r\nimport Spinner from '../shared/spinner/spinner';\r\n\r\n\r\nexport default class CollectionPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.moviesServices = new MoviesServices();\r\n        this.state = {\r\n            collection: null,\r\n            loading: true,\r\n            genresObj: {},\r\n            cast: [],\r\n            crew: [],\r\n            revenue: 0\r\n        }     \r\n    }\r\n    \r\n    componentWillMount() {\r\n        const {collectionId} = this.props;\r\n        this.getGenresName(); \r\n        this.loadCollection(collectionId); \r\n    }\r\n\r\n    loadCollection = (collectionId) => {\r\n        this.moviesServices.getCollection(collectionId)\r\n            .then((res) => { \r\n                if (res) {\r\n                    const movieIds = res.parts.map(part => part.id);\r\n                    this.onLoading(res);\r\n                    this.getCast(res);\r\n                    this.getMovieDetails(movieIds);\r\n                }\r\n            })\r\n    }\r\n\r\n    onLoading = (response) => {\r\n        this.setState({\r\n            collection: response,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    getGenresName = () => {\r\n        this.moviesServices.getGenreList()\r\n            .then((res) => { \r\n                this.onLoadingGenres(res)\r\n            })\r\n    }\r\n\r\n    onLoadingGenres = (response) => {\r\n        this.setState({\r\n            genresObj: response\r\n        })\r\n    }\r\n\r\n    getMovieDetails = (ids) => {\r\n        const total = [];\r\n        ids.forEach(id => {\r\n            this.moviesServices.getMovieDetails(id)\r\n            .then((response) => {\r\n                if (response) {\r\n                    total.push(response.revenue);\r\n                    this.onLoadingDetails(total);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    onLoadingDetails = (total) => {\r\n        const totalRevenue = total.reduce((sum, current) => sum + current, 0)\r\n        this.setState({\r\n            revenue: totalRevenue\r\n        })\r\n    }\r\n\r\n    getCast = (collection) => {\r\n        const ids = collection.parts.map(part => part.id)\r\n        this.moviesServices.getCast(ids)\r\n        .then((res) => { \r\n            this.onLoadingCast(res.cast, res.crew);\r\n\r\n        })\r\n    }\r\n\r\n    onLoadingCast = (cast, crew) => {\r\n        this.setState({\r\n            cast,\r\n            crew\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {collection, loading, genresObj, cast, crew, revenue} = this.state;\r\n        const {history} = this.props;\r\n        const template = loading ? <Spinner/> : <CollectionDetails \r\n                                                    collection={collection} \r\n                                                    loading={loading} \r\n                                                    history={history} \r\n                                                    genre={genresObj}\r\n                                                    cast={cast}\r\n                                                    crew={crew}\r\n                                                    revenue={revenue}\r\n                                                />\r\n        \r\n        return(\r\n            <>{template}</>\r\n        )\r\n    }\r\n}","import React, {useState, useRef, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TogglerWrapper = styled.div`\r\n    width: fit-content;\r\n    border: 1px solid rgb(3, 37, 65);;\r\n    border-radius: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ToggleItem = styled.div`\r\n    padding: 0 15px;\r\n    color: ${props => props.isActive ? 'rgb(30, 213, 169)' : 'rgb(3, 37, 65)'};\r\n    position: relative;\r\n    z-index: 2;\r\n`;\r\n\r\nconst ToggleActive = styled.div`\r\n    background-color: rgb(3, 37, 65);\r\n    position: absolute;\r\n    height: 100%;\r\n    width: ${props => (props.width + 'px') || '100px'};\r\n    border-radius: 15px;\r\n    transition: all 200ms;\r\n\r\n    &.first-active {\r\n        left: 0;\r\n    }\r\n\r\n    &.second-active {\r\n        left: ${props => `calc(100% - ${props.width}px)`}\r\n    }\r\n`;\r\n\r\nconst Toggler = ({names, loadTrend, types}) => {\r\n    const buttonsArray = [\r\n        {\r\n            isActive: true,\r\n            text: names[0],\r\n            type: types[0]\r\n        },\r\n        {\r\n            isActive: false,\r\n            text: names[1],\r\n            type: types[1]\r\n        }\r\n    ]\r\n\r\n    const [buttons, setButtons] = useState(buttonsArray || []);\r\n    const [width, setWidth] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        if (buttons[0].isActive) {\r\n            setWidth(ref.current.clientWidth)\r\n\r\n        }\r\n    }, []);\r\n\r\n    let classNames = buttons[0].isActive ? 'first-active' : 'second-active';\r\n\r\n    const onToggle = (event, index) => {\r\n        setWidth(event.currentTarget.clientWidth);\r\n        \r\n        buttons.forEach(item => item.isActive = false);\r\n        buttons[index].isActive = true;\r\n        loadTrend(buttons[index].type)\r\n\r\n        setButtons(buttons);\r\n\r\n    }\r\n\r\n    const toggleItems = buttons.map((item, index) => {\r\n        const reference = item.isActive ? ref : null;\r\n        return (\r\n            <ToggleItem \r\n                isActive={item.isActive}\r\n                key={index}\r\n                onClick={(event) => onToggle(event, index)}\r\n                ref={reference}\r\n            >{item.text}</ToggleItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <TogglerWrapper>\r\n            {toggleItems}\r\n            <ToggleActive className={classNames} width={width}></ToggleActive>\r\n        </TogglerWrapper>\r\n    )\r\n}\r\n\r\nexport default Toggler;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Rate from '../../shared/rate';\r\nimport Toggler from '../../shared/toggler/toggler';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    background-image: url('https://www.themoviedb.org/assets/2/v4/misc/trending-bg-39afc2a5f77e31d469b25c187814c0a2efef225494c038098d62317d923f8415.svg');\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 345px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 335px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst SectionTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: baseline;\r\n    margin: 0 15px 20px 5px;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px;   \r\n`;\r\n\r\nconst TrendCardWrapper = styled.div`\r\n    width: 150px;\r\n    min-width: 150px;\r\n`;\r\n\r\nconst TrendCardImg = styled.img`\r\n    border-radius: 8px;\r\n    width: 150px;\r\n    height: 225px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardTitleWrapper = styled.div`\r\n    position: relative;\r\n    padding-top: 20px;\r\n`;\r\nconst TrendCardTitle = styled.div`\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardRelease = styled.div`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst InTrend = ({inTrend, MoviesService, loadTrend}) => {\r\n    const history = useHistory();\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    const trendItems = inTrend.map((item, index) => {\r\n        const {id, release_date, first_air_date, media_type, name, title, poster_path, vote_average} = item;\r\n        let src = poster_path ? ('//image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n        const date = moment(release_date || first_air_date).format('DD.MM.YYYY');\r\n        return (\r\n            <TrendCardWrapper key={index}>\r\n                <TrendCardImg \r\n                    src={src} \r\n                    alt={name || title} \r\n                    onClick={() => handleRouting(id, media_type)}\r\n                />\r\n                <TrendCardTitleWrapper>\r\n                    <TrendCardTitle\r\n                        onClick={() => handleRouting(id, media_type)}\r\n                    >\r\n                        {name || title} \r\n                    </TrendCardTitle>\r\n                    <TrendCardRelease>\r\n                        {date}\r\n                    </TrendCardRelease>\r\n                    <Rate \r\n                        vote={vote_average}\r\n                        small\r\n                    />\r\n                </TrendCardTitleWrapper>\r\n            </TrendCardWrapper>\r\n        )\r\n    })\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitleWrapper>\r\n                <SectionTitle>В тренде </SectionTitle>\r\n                <Toggler names={['Сегодня', 'На этой неделе']} loadTrend={loadTrend} types={['day', 'week']}/>\r\n            </SectionTitleWrapper>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={5} \r\n                    itemsToShow={7}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {trendItems}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n        </CarouselWrapper> \r\n    )\r\n        \r\n}\r\n\r\nexport default InTrend;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {inTrendRequested, inTrendLoaded, inTrendError} from '../../actions/actions';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport {InTrend} from './components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst HomePageWrapper = styled.div`\r\n    width: 1100px;\r\n    margin: 10% auto;\r\n    background-color: #f1f2f6;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: 48px;\r\n    font-weight: 700;\r\n    padding: 100px 0;\r\n`;\r\n\r\nconst HomePageSubTitle = styled.div`\r\n    font-size: 32px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst HomePage = ({title, MoviesService, inTrendLoaded, inTrendError, inTrend, loading}) => {\r\n    document.title = title;\r\n\r\n    const loadTrend = (time) => {\r\n        MoviesService.getInTrend(time)\r\n            .then((res) => inTrendLoaded(res.results))\r\n            .catch(error => inTrendError());\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTrend('day')\r\n    }, []);\r\n\r\n    const trending = loading ? <Spinner/> : <InTrend inTrend={inTrend} MoviesService={MoviesService} loadTrend={loadTrend}/>\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <HomePageWrapper>\r\n                        Добро пожаловать в Movies Database.\r\n                        <HomePageSubTitle>\r\n                            Миллионы фильмов, сериалов и людей. Исследуйте сейчас.\r\n                        </HomePageSubTitle>\r\n                    </HomePageWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {trending}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {inTrend, loading} = state.homePageReducer;\r\n    return {\r\n        inTrend,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(HomePage));","import React, { Component } from 'react';\r\nimport Header from '../shared/header/header';\r\nimport {PopularPage, PlayingNowPage, TopRatedPage, UpcomingPage} from '../moviesPage';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport MovieDetails from '../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport ScrollToTop from '../shared/scrollToTop/scrollToTop';\r\nimport MoviesByKeyword from '../moviesByKeywordsPage/moviesByKeyword';\r\nimport FullCast from '../fullCastPage/castsPage';\r\nimport PersonBiography from '../personDetailsPage/personBiography';\r\nimport {TVPopularPage, OnTheAirPage, TVTopRatedPage, AiringTodayPage} from '../TVPages';\r\nimport PersonPage from '../popularPersonPage/popularPersonPage';\r\nimport CollectionPage from '../collectionPage/collectionPage';\r\nimport HomePage from '../homePage/homePage';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Router>\r\n                <Header/>\r\n                <ScrollToTop>\r\n                    <Switch>\r\n                        <Redirect exact from='/' to='/movie-database'/>\r\n                        <Route exact path='/movie-database' render={\r\n                            () => {\r\n                                return <HomePage title='Movie Database'/>\r\n                            }\r\n                        }>\r\n                            \r\n                        </Route>\r\n                        <Route exact path='/person' render={\r\n                            ({history}) => {\r\n                                return <PersonPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/popular' render={\r\n                            ({history}) => {\r\n                                return <PopularPage history={history} title='Популярные фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/playing-now' render={\r\n                            ({history}) => {\r\n                                return <PlayingNowPage history={history} title='Сейчас смотрят фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/upcoming' render={\r\n                            ({history}) => {\r\n                                return <UpcomingPage history={history} title='Ожидамые фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TopRatedPage history={history} title='Лучшие фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/collection/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <CollectionPage collectionId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/playing-now/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/upcoming/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/popular/' render={\r\n                            ({history}) => {\r\n                                return <TVPopularPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/airing_today' render={\r\n                            ({history}) => {\r\n                                return <AiringTodayPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/on_the_air' render={\r\n                            ({history}) => {\r\n                                return <OnTheAirPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TVTopRatedPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/airing_today/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/on_the_air/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        \r\n                        <Route exact path=\"/movie/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route path=\"/keywords/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MoviesByKeyword keywordId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/person/:id\" render={\r\n                            ({match}) => {\r\n                                const {id} = match.params;\r\n                                return <PersonBiography personId = {id}/>\r\n                            }\r\n                        }/> \r\n                    </Switch>\r\n                </ScrollToTop>\r\n            </Router>\r\n        )\r\n    }\r\n}","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    popularMovies: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    error: false,\r\n    popularPage: 0, \r\n    playingNowMovies: [],\r\n    playingNowPage: 0,\r\n    upcomingMovies: [],\r\n    upcomingPage: 0,\r\n    topRatedMovies: [],\r\n    topRatedPage: 0\r\n}\r\n\r\nconst moviePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                popularMovies: action.payload,\r\n                loading: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_ERROR: \r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularMovies: [...state.popularMovies, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: action.payload,\r\n                loading: false,\r\n                playingNowPage: state.playingNowPage + 1\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: [...state.playingNowMovies, ...action.payload],\r\n                loadingMore: false,\r\n                playingNowPage: state.playingNowPage + 1\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                upcomingMovies: action.payload,\r\n                loading: false,\r\n                upcomingPage: state.upcomingPage + 1\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                upcomingMovies: [...state.upcomingMovies, ...action.payload],\r\n                loadingMore: false,\r\n                upcomingPage: state.upcomingPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                topRatedMovies: action.payload,\r\n                loading: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedMovies: [...state.topRatedMovies, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviePageReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    popularTv: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    popularPage: 0,\r\n    error: false,\r\n    airingTodayTv: [],\r\n    airingTodayPage: 0,\r\n    onTheAirTv: [],\r\n    onTheAirPage: 0,\r\n    topRatedTv: [],\r\n    topRatedPage: 0\r\n}\r\n\r\nconst tvPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                popularTv: action.payload,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.POPULAR_TV_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularTv: [...state.popularTv, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                airingTodayTv: action.payload,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                airingTodayTv: [...state.airingTodayTv, ...action.payload],\r\n                loadingMore: false,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                onTheAirTv: action.payload,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                onTheAirTv: [...state.onTheAirTv, ...action.payload],\r\n                loadingMore: false,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topRatedTv: action.payload,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedTv: [...state.topRatedTv, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }   \r\n}\r\n\r\nexport default tvPageReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    person: [],\r\n    loading: true,\r\n    page: 1,\r\n    error: false,\r\n    totalPages: 0\r\n}\r\n\r\nconst popularPersonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    \r\n        case actionTypes.POPULAR_PERSON_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_PERSON_LOADED: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                totalPages: action.payload.totalPages,\r\n                page: action.payload.page\r\n            }\r\n        case actionTypes.POPULAR_PERSON_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default popularPersonReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    movieDetails: [],\r\n    loading: true,\r\n    error: false,\r\n    casts: [],\r\n    loadingCast: true,\r\n    keywords: null,\r\n    loadingKeywords: true,\r\n    modalWindow: false,\r\n    video: null,\r\n    socialLink: {},\r\n    collection: {},\r\n    recommendations: []\r\n}\r\n\r\nconst movieDetailsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.MOVIE_DETAILS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movieDetails: action.payload\r\n            }\r\n        case actionTypes.CAST_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingCast: true\r\n            }\r\n        case actionTypes.CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                casts: action.payload,\r\n                loadingCast: false\r\n            }\r\n        case actionTypes.KEYWORDS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: true\r\n            }\r\n        case actionTypes.KEYWORDS_LOADED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: false,\r\n                keywords: action.payload\r\n            }\r\n        case actionTypes.MODAL_WINDOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                modalWindow: !state.modalWindow\r\n            }\r\n        case actionTypes.VIDEO_LOADED:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n        case actionTypes.SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.RECOMMENDATIONS_LOADED:\r\n            return {\r\n                ...state,\r\n                recommendations: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default movieDetailsReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    inTrend: [],\r\n    loading: true,\r\n    error: false,\r\n}\r\n\r\nconst homePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.IN_TREND_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.IN_TREND_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                inTrend: action.payload\r\n            }\r\n        case actionTypes.IN_TREND_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default homePageReducer;","import { combineReducers } from 'redux'\r\nimport moviePageReducer from './reducers/moviePageReducers';\r\nimport tvPageReducer from './reducers/tvPageReducer';\r\nimport popularPersonReducer from './reducers/popularPersonReducer';\r\nimport movieDetailsReducer from './reducers/movieDetailsReducer';\r\nimport homePageReducer from './reducers/homePageReducer';\r\n\r\nexport default combineReducers({\r\n    moviePageReducer,\r\n    tvPageReducer,\r\n    popularPersonReducer,\r\n    movieDetailsReducer,\r\n    homePageReducer\r\n})","import {createStore} from 'redux';\r\nimport combineReducers from './reducers/combineReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(combineReducers, composeWithDevTools());\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {popularMoviesError} from '../../actions/actions';\r\nimport {connect} from 'react-redux';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\n\r\nclass ErrorBoundry extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n      }\r\n    \r\n    //   static getDerivedStateFromError(error) {\r\n    //     // Update state so the next render will show the fallback UI.\r\n    //     return { hasError: true };\r\n    //   }\r\n    \r\n      componentDidCatch() {\r\n        // You can also log the error to an error reporting service\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n          // You can render any custom fallback UI\r\n          return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children; \r\n      }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundry);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MoviesServices from './services/services';\nimport {Provider} from 'react-redux';\nimport MoviesServicesContext from './components/moviesContext/moviesContext';\nimport store from './store';\nimport ErrorBoundry from './components/errorComponent/errorComponent';\n\nconst moviesServices = new MoviesServices();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<MoviesServicesContext.Provider value={moviesServices}>\n\t\t\t\t\t<App/>\n\t\t\t\t</MoviesServicesContext.Provider>\n\t\t\t</ErrorBoundry>\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}