{"version":3,"sources":["actions/actionsSearchPage/actionTypesSearchPage.js","actions/actionsSearchPage/actionSearchPage.js","components/shared/header/header.js","components/shared/spinner/spinner.js","components/shared/rate.js","components/shared/spinner/loadMoreSpinner.js","components/shared/useWindowSize/useWindowSize.js","components/moviesPage/components/movieList.js","components/moviesContext/moviesContext.js","components/hoc/withMoviesService.js","actions/actionsMoviesTVPage/actionTypesMoviesTVPage.js","actions/actionsMoviesTVPage/actionMoviesTVPage.js","components/moviesPage/popularPage.js","components/moviesPage/playingNowPage.js","components/moviesPage/topRatedPage.js","components/moviesPage/upcomingPage.js","components/moviesPage/components/movieDetailsPage/components/casts.js","components/shared/youtubeVideo/youtubeVideo.js","components/moviesPage/components/movieDetailsPage/components/modalWindow.js","components/moviesPage/components/movieDetailsPage/components/details.js","components/moviesPage/components/movieDetailsPage/components/originalDetails.js","components/moviesPage/components/movieDetailsPage/components/keywords.js","components/moviesPage/components/movieDetailsPage/components/collection.js","components/moviesPage/components/movieDetailsPage/components/recommendations.js","components/moviesPage/components/movieDetailsPage/components/mobileComponents/modalWindowMob.js","components/moviesPage/components/movieDetailsPage/components/mobileComponents/detailsMob.js","actions/actionsMovieDetailsPage/actionTypesMovieDetailsPage.js","actions/actionsMovieDetailsPage/actionMovieDetailsPage.js","components/moviesPage/components/movieDetailsPage/movieDetails.js","components/shared/scrollToTop/scrollToTop.js","services/services.js","components/moviesByKeywordsPage/components/movieListByKeywords.js","components/moviesByKeywordsPage/moviesByKeyword.js","components/fullCastPage/components/fullCastList.js","components/fullCastPage/fullCastPage.js","components/personDetailsPage/components/personDetailsCasts.js","components/personDetailsPage/components/personDetailsCrew.js","components/personDetailsPage/components/crewByDepartments.js","components/personDetailsPage/components/personDetails.js","components/personDetailsPage/components/componentsMobile/personDetailsMob.js","actions/actionsPersonDetailsPage/actionTypesPersonDetailsPage.js","components/personDetailsPage/personBiography.js","actions/actionsPersonDetailsPage/actionPersonDetailsPage.js","components/TVPages/tvPopularPage.js","components/TVPages/airingTodayPage.js","components/TVPages/tvTopRatedPage.js","components/TVPages/onTheAirPage.js","components/popularPersonPage/components/personList.js","actions/actionsPopularPersonPage/actionTypesPopularPersonPage.js","components/popularPersonPage/popularPersonPage.js","actions/actionsPopularPersonPage/actionPopularPersonPage.js","components/collectionPage/components/collectionCast.js","components/collectionPage/components/collectionDetails.js","components/collectionPage/components/collectionDetailsMob.js","actions/actionsCollectionPage/actionTypesCollectionPage.js","components/collectionPage/collectionPage.js","actions/actionsCollectionPage/actionCollectionPage.js","actions/actionsHomePage/actionTypeHomePage.js","components/shared/toggler/toggler.js","components/homePage/components/inTrend.js","components/homePage/homePage.js","actions/actionsHomePage/actionHomePage.js","components/shared/header/headerMob.js","components/searchResultsPage/components/tvResults.js","components/searchResultsPage/components/personResults.js","components/searchResultsPage/components/movieResults.js","components/searchResultsPage/components/companyResults.js","components/searchResultsPage/components/keywordResults.js","components/searchResultsPage/components/collectionResults.js","components/searchResultsPage/components/searchResultsLink.js","components/searchResultsPage/components/searchResultsLinkMob.js","components/searchResultsPage/components/searchRoutes.js","components/searchResultsPage/searchResultsPage.js","components/app/app.js","reducers/reducers/moviePageReducers.js","reducers/reducers/tvPageReducer.js","reducers/reducers/popularPersonReducer.js","reducers/reducers/movieDetailsReducer.js","reducers/reducers/homePageReducer.js","reducers/reducers/collectionPageReducer.js","reducers/reducers/personDetailsPageReducer.js","reducers/reducers/searchPageReducer.js","reducers/combineReducers.js","store.js","components/errorComponent/errorComponent.js","index.js"],"names":["TV_SEARCH_REQUESTED","TV_SEARCH_LOADED","TV_SEARCH_ERROR","PERSON_SEARCH_REQUESTED","PERSON_SEARCH_LOADED","PERSON_SEARCH_ERROR","MOVIE_SEARCH_REQUESTED","MOVIE_SEARCH_LOADED","MOVIE_SEARCH_ERROR","COMPANY_SEARCH_REQUESTED","COMPANY_SEARCH_LOADED","COMPANY_SEARCH_ERROR","KEYWORD_SEARCH_REQUESTED","KEYWORD_SEARCH_LOADED","KEYWORD_SEARCH_ERROR","COLLECTION_SEARCH_REQUESTED","COLLECTION_SEARCH_LOADED","COLLECTION_SEARCH_ERROR","IS_SEARCH","isSearch","payload","type","actionTypes","NavBarWrapper","styled","div","LogoWrapper","LinkWrapper","NavCollapseWrapper","SearchFormWrapper","mapDispatchToProps","connect","state","searchValue","searchPageReducer","history","useHistory","Container","Row","className","Col","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","placeholder","value","onChange","event","target","onKeyPress","key","push","disabled","onClick","console","log","Spinner","RateWrapper","props","small","static","Rate","vote","isStatic","voteRound","Math","round","background","backgroundPadding","text","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","LoadMoreSpinner","useWindowSize","useState","width","setWindowSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","ContainerWrapper","size","PosterWrapper","MovieDetailsWrapper","TitleWrapper","ReleaseWrapper","Poster","img","LoadMoreButton","button","MovieList","movies","loading","loadingMore","url","getMovies","movieItems","map","item","index","poster_path","release_date","vote_average","name","first_air_date","src","process","alt","length","moment","format","loadSpinner","showButton","MoviesServicesContext","React","createContext","WithMoviesService","Wrapped","Consumer","MoviesService","POPULAR_MOVIES_REQUESTED","POPULAR_MOVIES_LOADED","POPULAR_MOVIES_ERROR","POPULAR_MOVIES_MORE_REQUESTED","POPULAR_MOVIES_MORE_LOADED","POPULAR_MOVIES_MORE_ERROR","PLAYING_NOW_MOVIES_REQUESTED","PLAYING_NOW_MOVIES_LOADED","PLAYING_NOW_MOVIES_MORE_REQUESTED","PLAYING_NOW_MOVIES_MORE_LOADED","UPCOMING_MOVIES_REQUESTED","UPCOMING_MOVIES_LOADED","UPCOMING_MOVIES_MORE_REQUESTED","UPCOMING_MOVIES_MORE_LOADED","TOP_RATED_MOVIES_REQUESTED","TOP_RATED_MOVIES_LOADED","TOP_RATED_MOVIES_MORE_REQUESTED","TOP_RATED_MOVIES_MORE_LOADED","POPULAR_TV_REQUESTED","POPULAR_TV_LOADED","POPULAR_TV_ERROR","POPULAR_TV_MORE_REQUESTED","POPULAR_TV_MORE_LOADED","AIRING_TODAY_TV_REQUESTED","AIRING_TODAY_TV_LOADED","AIRING_TODAY_TV_MORE_REQUESTED","AIRING_TODAY_TV_MORE_LOADED","ON_THE_AIR_TV_REQUESTED","ON_THE_AIR_TV_LOADED","ON_THE_AIR_TV_MORE_REQUESTED","ON_THE_AIR_TV_MORE_LOADED","TOP_RATED_TV_REQUESTED","TOP_RATED_TV_LOADED","TOP_RATED_TV_MORE_REQUESTED","TOP_RATED_TV_MORE_LOADED","popularMoviesError","popularTvError","PopularPage","loadMovies","success","page","getPopular","then","res","results","catch","error","loadMoreMovies","popularMoviesMoreLoaded","popularMoviesMoreRequested","document","this","popularMoviesRequested","popularMoviesLoaded","location","pathname","Component","moviePageReducer","popularMovies","popularPage","PlayingNowPage","getNowPlaying","playingNowMoviesMoreLoaded","playingNowMoviesMoreRequested","playingNowMoviesRequested","playingNowMoviesLoaded","playingNowMovies","playingNowPage","TopRatedPage","getTopRated","topRatedMoviesMoreRequested","topRatedMoviesMoreLoaded","topRatedMoviesRequested","topRatedMoviesLoaded","topRatedMovies","topRatedPage","UpcomingPage","getUpcoming","upcomingMoviesMoreLoaded","upcomingMoviesMoreRequested","upcomingMoviesRequested","upcomingMoviesLoaded","upcomingMovies","upcomingPage","CarouselWrapper","CastTitle","CastItemWrapper","CastImg","CastName","CastCharacter","PrevButton","NextButton","FullCastWrapper","Cast","carousel","casts","onGoPersonBio","castItem","cast","sort","a","b","order","filter","profile_path","character","renderArrow","isEdge","style","display","itemsToScroll","itemsToShow","focusOnSelect","ref","renderPagination","pages","activePage","slidePrev","slideNext","includes","Trailer","resultItem","video","height","frameBorder","allowFullScreen","controls","Backdrop","TrailerBodyWrapper","TrailerTitleWraper","TrailerCloseButton","ModalWindow","onCloseModal","BackgroundWrapper","backdrop","ImgWrapper","Title","Year","span","DetailsList","Vote","ActivityList","ul","TrailerWrapper","TrailerTitle","Overview","TagLine","CreatorNameWrapper","TvCreator","creator","Details","details","movieId","onOpenModal","modalWindow","keywords","socialLink","recommendations","showCollection","showRecommendations","genres","runtime","tagline","overview","episode_run_time","created_by","genreToString","genre","join","durations","duration","replace","modal","showTrailer","releaseYear","showOverview","dateGenreDurationString","backdrop_path","belongs_to_collection","keyword","LinkIconWrapper","Link","movie","SocialLinkWrrapper","facebook","twitter","instagram","TvNetwork","networks","networkItem","find","network","logo","logo_path","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","OriginalDetails","original_title","status","budget","revenue","original_language","original_name","homepage","facebook_id","instagram_id","twitter_id","nf","Intl","NumberFormat","movieBudget","movieRevenue","tvNet","href","rel","homePage","overlayFacebook","overlayTwitter","overlayInstagram","overlayHomePage","statusMovie","KeywordsWrapper","KeywordItemWrapper","Keywords","keywordsItem","keywordItem","CollectionWrapper","CollectionContent","bg","CollectionName","CollectionDescription","CollectionButton","Collection","collection","parts","path","collectionIncludes","hasOwnProperty","part","RecommendationCardWrapper","RecommendationCardImgWrapper","RecommendationCardRelease","RecommendationCardImg","RecommendationCardTitleWrapper","RecommendationCardTitle","RecommendationCardRate","SectionTitle","Recommendation","castRequested","movieDetailsRequested","getDetails","getCast","getKeywords","getVideos","getSocailLink","getRecommendations","recommendationItems","releaseDate","getTVDetails","getTVCasts","getTVKeywords","getTVVideos","getTVExternalIds","getTVRecommendations","getMovieDetails","getMovieExternalIds","getMovieRecommendations","handleRouting","ModalWindowMobile","GlobalWrapper","border","GenreWrapper","GenreList","OverviewWrapper","CreatorWrapper","Creator","DetailsMobile","creatorId","separator","showCast","MOVIE_DETAILS_REQUESTED","MOVIE_DETAILS_LOADED","MOVIE_DETAILS_ERROR","CAST_REQUESTED","CAST_LOADED","KEYWORDS_REQUESTED","KEYWORDS_LOADED","MODAL_WINDOW_TOGGLE","VIDEO_LOADED","SOCIAL_LINK_LOADED","RECOMMENDATIONS_LOADED","MOVIE_DETAILS_COLLECTION_LOADED","movieDetailsLoaded","movieDetailsError","castLoaded","MovieDetails","request","response","getCollectionDetails","keywordsLoaded","videoLoaded","socialLinkLoaded","recommendationsLoaded","movieDetailsCollectionLoaded","getCollection","isBelongToCollection","isRecommendation","keywordsRequested","loadingCast","loadingKeywords","modalWindowToggle","movieDetailsReducer","movieDetails","ScrollToTop","prevProps","scrollTo","children","withRouter","MoviesServices","getResource","fetch","_baseApi","_apiKey","_apiLanguage","json","status_code","getMovieByKeyword","keywordId","getKeywordName","getPersonBiography","personId","biography","combinedMoviesTv","tvId","getTVPopular","getTVAiringToday","getTVTopRated","getTVOnTheAir","getPopularPerson","collectionId","getGenreList","getPersonExternalIds","getInTrend","time","getMovieRating","getTVRating","getSearchByName","MovieCardWrapper","MovieCardImg","MovieCardContent","MovieCardTitle","MovieCardReleaseDate","MovieCardDescription","HeaderWrapper","Header","KeywordName","MovieQuantity","NoFilmTemplate","MovieListByKeywords","totalResults","keywordName","moviesItem","film","showMovieList","MovieListWrapper","ButtonWrapper","MoviesByKeyword","onLoadingMovies","setState","totalPages","onToogleLoading","moviesServices","total_results","total_pages","onLoadingKeywordName","CastNumber","CastItemImg","CastNameWrapper","CastContent","DepartmentTitle","Actors","Crew","crew","CrewDepartment","department","job","MovieName","MovieReleaseYear","MoviePosterImg","MovieContent","ButtonBack","FullCast","onGoBack","goBack","MovieListItemWrapper","hasBorder","ReleaseDate","MovieTitleWrapper","MovieTitle","LikeCharacter","Character","MoviePreviewButton","CircleHover","show","PopoverImgWrapper","PopoverPoster","PopoverContentWrapper","PopoverTitleWrapper","PopoverTitle","PopoverDescription","PopoverRate","DepartmentListTitle","MovieListContent","FilterWrapper","ClearButton","HistoryItem","date","useRef","setShow","setTarget","handleClick","rate","toFixed","tvEpisodes","episode_count","container","current","rootClose","onHide","media_type","textEllipsis","yearFormatter","PersonDetailsCasts","setCastItem","filterSelected","setFilterSelected","noDateCasts","sortedCast","previous","Date","allCasts","filteredByMovieType","filteredByTVType","movieQuantity","tvQuantity","arr","next","fullDateToYear","data","onSelect","content","clearButton","DropdownButton","Dropdown","Item","PersonDetailsCrew","noDateCrew","sortedCrew","Department","CrewByDepartments","filteredCrew","production","writing","art","camera","makeUp","crews","directing","editing","lighting","sound","visualEffects","DescriptionWrapper","BioWrapper","BioContent","mainHeight","childRef","PersonalInfo","PersonalInfoItemTitle","PersonalInfoItemSubtitle","AlsoKnowWrapper","ReadMoreButton","FamousCast","popularity","PersonDetails","person","isOpen","setOpen","elementHeight","setElementHeight","gender","also_known_as","birthday","deathday","known_for_department","place_of_birth","classNames","personBiography","element","clientHeight","getElementHeight","placeOfBirth","personGender","alsoKnow","personBirthday","ageAlive","diff","ageDead","dateOfDeath","acting","filmCrew","famousCast","NameWrapper","SectionSubTitle","BiographyWrapper","PersonDetailsMobile","PERSON_BIOGRAPHY_REQUESTED","PERSON_BIOGRAPHY_LOADED","PERSON_BIOGRAPHY_ERROR","PERSON_SOCIAL_LINK_REQUESTED","PERSON_SOCIAL_LINK_LOADED","PERSON_SOCIAL_LINK_ERROR","PersonBiography","getBiography","personBiographyLoaded","personBiographyError","getPersonSocailLink","personSocialLinkLoaded","personSocialLinkError","personBiographyRequested","personSocialLinkRequested","socialLinkLoading","personDetailsPageReducer","TVPopularPage","loadTV","loadMoreTv","popularTvMoreRequested","popularTvMoreLoaded","tv","popularTvRequested","popularTvLoaded","tvPageReducer","popularTv","AiringTodayPage","loadMoreTV","airingTodayTvMoreRequested","airingTodayTvMoreLoaded","airingTodayTvRequested","airingTodayTvLoaded","airingTodayTv","airingTodayPage","TVTopRatedPage","topRatedTvTvMoreRequested","topRatedTvTvMoreLoaded","topRatedTvRequested","topRatedTvTvLoaded","topRatedTv","OnTheAirPage","onTheAirTvMoreRequested","onTheAirTvMoreLoaded","onTheAirTvRequested","onTheAirTvLoaded","onTheAirTv","onTheAirPage","PersonItemWrapper","PersonImg","PersonNameWrapper","PersonName","PersonCast","PersonList","getPerson","personItem","known_for","castToString","Pagination","count","boundaryCount","POPULAR_PERSON_REQUESTED","POPULAR_PERSON_LOADED","POPULAR_PERSON_ERROR","PersonPage","onServiceRequest","popularPersonError","popularPersonLoaded","search","loadPerson","loadMorePerson","popularPersonRequested","popularPersonReducer","large","CastImgWrapper","Section","CollectionCast","onGoToPersonDetails","onGoToMovieDetails","sm","crewItem","partItem","DetailsTitleWrapper","DetailsContentWrapper","CollectionDetails","averageVote","reduce","sum","movieOverview","genresList","Object","keys","forEach","genre_ids","uniquesToString","array","indexOf","CollectionDetailsMobile","COLLECTION_REQUESTED","COLLECTION_LOADED","COLLECTION_ERROR","GENRES_REQUESTED","GENRES_LOADED","COLLECTION_MOVIE_DETAILS_LOADED","COLLECTION_CAST_LOADED","CollectionPage","loadCollection","collectionLoaded","collectionError","movieIds","getGenresName","genresLoaded","ids","collectionMovieDetailsLoaded","total","collectionCastLoaded","collectionRequested","genresRequested","genresLoading","collectionPageReducer","IN_TREND_REQUESTED","IN_TREND_LOADED","IN_TREND_ERROR","TogglerWrapper","ToggleItem","isActive","ToggleActive","Toggler","names","loadTrend","types","buttonsArray","buttons","setButtons","setWidth","clientWidth","toggleItems","reference","currentTarget","onToggle","SectionTitleWrapper","TrendCardWrapper","TrendCardImg","TrendCardTitleWrapper","TrendCardTitle","TrendCardRelease","InTrend","inTrend","trendItems","HomePageWrapper","HomePageSubTitle","inTrendRequested","inTrendLoaded","inTrendError","homePageReducer","MenuBurger","MenuList","CloseButton","NavList","NavListItem","NavListSubItem","SearchButton","SectionWrapper","SearchInput","setClassNames","toggleMenu","clas","overflow","getElementsByTagName","body","ItemWrapper","ItemImgWrapper","ItemDetailsWrapper","ItemTitleWrapper","ItemTitle","ItemReleaseDate","ItemDescription","NoResults","Items","handleRoute","shortOverview","PaginationTemplate","getResults","TVResults","loadMoreResults","ItemNameWrapper","ItemName","ItemDepartment","ItemCast","castTemplate","PersonResults","MovieResults","CompanyItemWrapper","CompanyItemName","CompanyItemCountry","origin_country","country","CompanyResults","KeywordResults","CollectionResults","SearchBarWrapper","SearchBarHeader","SearchBarBody","SearchBarItem","SearchBarItemSum","SearchResultsLink","numberWithCommas","collectionTotalResults","keywordTotalResults","tvTotalResults","personTotalResults","movieTotalResults","companyTotalResults","SearchResultsLinkMobile","onToggleActive","Array","from","SearchRoutes","tvLoading","tvResults","tvPage","tvTotalPages","personResults","personPage","personTotalPages","personLoading","movieLoading","movieResults","moviePage","movieTotalPages","companyResults","companyPage","companyTotalPages","companyLoading","keywordLoading","keywordResults","keywordPage","keywordTotalPages","collectionLoading","collectionPage","collectionResults","collectionTotalPages","loadMoreTVResults","loadMorePersonResults","loadMoreMovieResults","loadMoreCompanyResults","loadMoreKeywordResults","loadMoreCollectionResults","valueWithoutSpaces","localStorage","getItem","exact","render","SearchResultsPage","getSearch","handleSuccess","handleError","tvSearchLoaded","tvSearchError","personSearchLoaded","personSearchError","movieSearchLoaded","movieSearchError","companySearchLoaded","companySearchError","keywordSearchLoaded","keywordSearchError","collectionSearchLoaded","collectionSearchError","x","toString","tvSearchRequested","personSearchRequested","movieSearchRequested","companySearchRequested","keywordSearchRequested","collectionSearchRequested","createBrowserHistory","linkTemplate","App","updateWindowDimensions","header","match","params","initialState","action","tvError","personError","movieError","companyError","keywordError","setItem","combineReducers","store","createStore","composeWithDevTools","ErrorWrapper","ErrorMessage","ErrorButton","ErrorBoundry","hasError","go","ReactDOM","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.dbd6bb4c.chunk.js","sourcesContent":["export const TV_SEARCH_REQUESTED = 'TV_SEARCH_REQUESTED';\r\nexport const TV_SEARCH_LOADED = 'TV_SEARCH_LOADED';\r\nexport const TV_SEARCH_ERROR = 'SEARCH_ERROR';\r\n\r\nexport const PERSON_SEARCH_REQUESTED = 'PERSON_SEARCH_REQUESTED';\r\nexport const PERSON_SEARCH_LOADED = 'PERSON_SEARCH_LOADED';\r\nexport const PERSON_SEARCH_ERROR = 'PERSON_SEARCH_ERROR';\r\n\r\nexport const MOVIE_SEARCH_REQUESTED = 'MOVIE_SEARCH_REQUESTED';\r\nexport const MOVIE_SEARCH_LOADED = 'MOVIE_SEARCH_LOADED';\r\nexport const MOVIE_SEARCH_ERROR = 'MOVIE_SEARCH_ERROR';\r\n\r\nexport const COMPANY_SEARCH_REQUESTED = 'COMPANY_SEARCH_REQUESTED';\r\nexport const COMPANY_SEARCH_LOADED = 'COMPANY_SEARCH_LOADED';\r\nexport const COMPANY_SEARCH_ERROR = 'COMPANY_SEARCH_ERROR';\r\n\r\nexport const KEYWORD_SEARCH_REQUESTED = 'KEYWORD_SEARCH_REQUESTED';\r\nexport const KEYWORD_SEARCH_LOADED = 'KEYWORD_SEARCH_LOADED';\r\nexport const KEYWORD_SEARCH_ERROR = 'KEYWORD_SEARCH_ERROR';\r\n\r\nexport const COLLECTION_SEARCH_REQUESTED = 'COLLECTION_SEARCH_REQUESTED';\r\nexport const COLLECTION_SEARCH_LOADED = 'COLLECTION_SEARCH_LOADED';\r\nexport const COLLECTION_SEARCH_ERROR = 'COLLECTION_SEARCH_ERROR';\r\n\r\nexport const IS_SEARCH = 'IS_SEARCH';","import * as actionTypes from \"./actionTypesSearchPage\";\r\n\r\nconst tvSearchRequested = () => {\r\n    return {\r\n        type: actionTypes.TV_SEARCH_REQUESTED,\r\n    };\r\n};\r\n\r\nconst tvSearchLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TV_SEARCH_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst tvSearchError = () => {\r\n    return {\r\n        type: actionTypes.TV_SEARCH_ERROR,\r\n    };\r\n};\r\n\r\nconst personSearchRequested = () => {\r\n    return {\r\n        type: actionTypes.PERSON_SEARCH_REQUESTED,\r\n    };\r\n};\r\n\r\nconst personSearchLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PERSON_SEARCH_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst personSearchError = () => {\r\n    return {\r\n        type: actionTypes.PERSON_SEARCH_ERROR,\r\n    };\r\n};\r\n\r\nconst movieSearchRequested = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_SEARCH_REQUESTED,\r\n    };\r\n};\r\n\r\nconst movieSearchLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_SEARCH_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst movieSearchError = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_SEARCH_ERROR,\r\n    };\r\n};\r\n\r\nconst companySearchRequested = () => {\r\n    return {\r\n        type: actionTypes.COMPANY_SEARCH_REQUESTED,\r\n    };\r\n};\r\n\r\nconst companySearchLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COMPANY_SEARCH_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst companySearchError = () => {\r\n    return {\r\n        type: actionTypes.COMPANY_SEARCH_ERROR,\r\n    };\r\n};\r\n\r\nconst keywordSearchRequested = () => {\r\n    return {\r\n        type: actionTypes.KEYWORD_SEARCH_REQUESTED,\r\n    };\r\n};\r\n\r\nconst keywordSearchLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.KEYWORD_SEARCH_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst keywordSearchError = () => {\r\n    return {\r\n        type: actionTypes.KEYWORD_SEARCH_ERROR,\r\n    };\r\n};\r\n\r\nconst collectionSearchRequested = () => {\r\n    return {\r\n        type: actionTypes.COLLECTION_SEARCH_REQUESTED,\r\n    };\r\n};\r\n\r\nconst collectionSearchLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_SEARCH_LOADED,\r\n        payload,\r\n    };\r\n};\r\n\r\nconst collectionSearchError = () => {\r\n    return {\r\n        type: actionTypes.COLLECTION_SEARCH_ERROR,\r\n    };\r\n};\r\n\r\nconst isSearch = (payload) => {\r\n    return {\r\n        type: actionTypes.IS_SEARCH,\r\n        payload\r\n    }\r\n}\r\n\r\nexport {\r\n    tvSearchError,\r\n    tvSearchRequested,\r\n    tvSearchLoaded,\r\n    personSearchRequested,\r\n    personSearchLoaded,\r\n    personSearchError,\r\n    movieSearchRequested,\r\n    movieSearchLoaded,\r\n    movieSearchError,\r\n    companySearchRequested,\r\n    companySearchLoaded,\r\n    companySearchError,\r\n    keywordSearchRequested,\r\n    keywordSearchLoaded,\r\n    keywordSearchError,\r\n    collectionSearchRequested,\r\n    collectionSearchLoaded,\r\n    collectionSearchError,\r\n    isSearch\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { isSearch } from \"../../../actions/actionsSearchPage/actionSearchPage\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: \"Londrina Outline\", cursive;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    padding: 5px 15px;\r\n\r\n    &:hover {\r\n        background-color: rgb(209, 220, 240);\r\n    }\r\n`;\r\n\r\nconst NavCollapseWrapper = styled.div`\r\n    &.dropdown-menu {\r\n        min-width: 11rem;\r\n    }\r\n`;\r\n\r\nconst SearchFormWrapper = styled.div`\r\n    position: relative;\r\n    font-size: 1.1em;\r\n\r\n    & input {\r\n        border-radius: 30px;\r\n        max-width: 350px;\r\n        width: 100%;\r\n        border: none;\r\n        padding: 2px 12px;\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    & button {\r\n        position: absolute;\r\n        right: 0;\r\n        color: #fff;\r\n        background: linear-gradient(to top right, #0066eb 26%, #8affcc 100%);\r\n        border: none;\r\n        border-radius: 30px;\r\n        padding: 2px 12px;\r\n        font-weight: 600;\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Header = ({ searchValue, isSearch }) => {\r\n    const history = useHistory();\r\n\r\n    const onHandleKeyPress = (event) => {\r\n        if (event.key === 'Enter' && event.target.value) {\r\n            history.push('/search/tv');\r\n        }\r\n    }\r\n\r\n    const onHandleButton = () => {\r\n        console.log(1)\r\n        history.push('/search/tv');\r\n    }\r\n\r\n    return (\r\n        <NavBarWrapper>\r\n            <Container>\r\n                <Row className=\"justify-content-between align-items-center\">\r\n                    <Col>\r\n                        <Navbar expand=\"lg\">\r\n                            <Navbar.Brand>\r\n                                <LogoWrapper>\r\n                                    <Link to=\"/movie-database\"> Movies DB</Link>\r\n                                </LogoWrapper>\r\n                            </Navbar.Brand>\r\n                            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <NavCollapseWrapper>\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <NavDropdown title=\"Фильмы\" id=\"basic-nav-dropdown\">\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/movie/popular/\">Популярные</Link>\r\n                                            </LinkWrapper>\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/movie/playing-now/\">Смотрят сейчас</Link>\r\n                                            </LinkWrapper>\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/movie/upcoming/\">Ожидаемые</Link>\r\n                                            </LinkWrapper>\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/movie/top-rated/\">Лучшие</Link>\r\n                                            </LinkWrapper>\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </NavCollapseWrapper>\r\n                            <NavCollapseWrapper>\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <NavDropdown title=\"Сериалы\" id=\"basic-nav-dropdown\">\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/tv/popular/\">Популярные</Link>\r\n                                            </LinkWrapper>\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/tv/airing_today/\">В эфире сегодня</Link>\r\n                                            </LinkWrapper>\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/tv/on_the_air/\">По телевидению</Link>\r\n                                            </LinkWrapper>\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/tv/top-rated/\">Лучшие</Link>\r\n                                            </LinkWrapper>\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </NavCollapseWrapper>\r\n                            <NavCollapseWrapper>\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <NavDropdown title=\"Люди\" id=\"basic-nav-dropdown\">\r\n                                            <LinkWrapper>\r\n                                                <Link to=\"/person/\">Популярные люди</Link>\r\n                                            </LinkWrapper>\r\n                                        </NavDropdown>\r\n                                    </Nav>\r\n                                </Navbar.Collapse>\r\n                            </NavCollapseWrapper>\r\n                        </Navbar>\r\n                    </Col>\r\n                    <Col className='text-right'>\r\n                        <SearchFormWrapper>\r\n                            <form>\r\n                                <input\r\n                                    type=\"search\"\r\n                                    placeholder='Найти фильм, сериал, персону...'\r\n                                    value={searchValue}\r\n                                    onChange={event => isSearch(event.target.value)}\r\n                                    onKeyPress={onHandleKeyPress}\r\n                                />\r\n                                <button\r\n                                    disabled={!searchValue}\r\n                                    onClick={onHandleButton}\r\n                                >\r\n                                    Search\r\n                                </button>\r\n                            </form>\r\n                        </SearchFormWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </NavBarWrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { searchValue } = state.searchPageReducer;\r\n    return {\r\n        searchValue,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    isSearch,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div className=\"loadingio-spinner-pulse-4q9a11w5c1h\">\r\n                <div className=\"ldio-8zfoqlwj9ri\">\r\n                    <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\n\r\n\r\nconst RateWrapper = styled.div`\r\n    width: ${props => props.small ? '44px' : '65px'};\r\n    height: ${props => props.small ? '44px' : '65px'};\r\n    position: ${props => (props.small && props.static) ? 'static' : props.small ? 'absolute' : 'static'};\r\n    top: -22px;\r\n    left: 10px;\r\n\r\n    .CircularProgressbar-text {\r\n        dominant-baseline: middle;\r\n        text-anchor: middle;\r\n        font-size: 28px;\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Rate = ({vote, small, isStatic}) => {\r\n    const voteRound = Math.round(vote) * 10 + '%';\r\n    return (\r\n        <RateWrapper small={small} static={isStatic}>\r\n            <CircularProgressbar\r\n                value={vote * 10}\r\n                background = {true}\r\n                backgroundPadding = {5}\r\n                text={`${!vote ? 'NR' : voteRound}`}\r\n                styles={buildStyles({\r\n                    rotation: 0,\r\n                    strokeLinecap: 'butt',\r\n                    pathTransitionDuration: 0.5,\r\n                    pathColor: vote > 7 ? '#21d07a' : vote < 3 ? '#db2360' : `#d2d531`,\r\n                    textColor: '#fff',\r\n                    trailColor: '#423d0f',\r\n                    backgroundColor: '#000', \r\n                })}\r\n            />\r\n        </RateWrapper>\r\n    )\r\n}\r\n\r\nexport default Rate;","import React from 'react';\r\nimport './loadMoreSpinner.css';\r\n\r\nconst LoadMoreSpinner = () => {\r\n    return(\r\n        <div className=\"loadingio-spinner-eclipse-31fnf915wjs\">\r\n            <div className=\"ldio-0fm56yckxb98\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoadMoreSpinner;\r\n","import {useEffect, useState} from 'react';\r\n\r\nconst useWindowSize = () => {\r\n    const [width, setWindowSize] = useState(null);\r\n  \r\n    useEffect(() => {\r\n        const handleResize = () => setWindowSize(window.innerWidth);\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        \r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n  \r\n    return width;\r\n}\r\n\r\nexport default useWindowSize;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport Rate from '../../shared/rate';\r\nimport moment from 'moment';\r\nimport LoadMoreSpinner from '../../shared/spinner/loadMoreSpinner';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\n\r\nconst ContainerWrapper = styled.div`\r\n    .col {\r\n        max-height: ${props => props.size < 415 ? '275px' : '393px'};\r\n    }\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    border: 1px solid rgb(227, 227, 227);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 5px 8px 0px rgba(0, 0, 0, 0.1);\r\n    max-width: ${props => props.size < 415 ? '150px' : '206px'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieDetailsWrapper = styled.div`\r\n    background-color:rgb(255, 255, 255);\r\n    border-radius: 15px;\r\n    position: relative;\r\n    padding: ${props => props.size < 415 ? '22px 10px 5px' : '22px 10px 15px'};\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n    width: 100%;\r\n\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-family: 'Source Sans Pro';\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ReleaseWrapper = styled(TitleWrapper)`\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    width: 100%;\r\n    border-top-right-radius: 15px;\r\n    border-top-left-radius: 15px;\r\n    height: ${props => props.size < 415 ? '70%' : '80%' };\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 100%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    margin-bottom: 20px;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst MovieList = ({movies, loading, loadingMore, url, getMovies, history}) => {\r\n    const size = useWindowSize();\r\n    const movieItems = movies.map((item, index) => {\r\n        const {title, poster_path, release_date, vote_average, id, name, first_air_date} = item;\r\n        const src = poster_path ? ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return(\r\n            <Col key={index} className=\"col-xl-3 col-6 col-sm-6 d-flex justify-content-center mb-4 px-lg-2 px-0\">\r\n                <PosterWrapper\r\n                    size={size}\r\n                    onClick={() => {\r\n                        history.push(`${url}${id}`)\r\n                    }}\r\n                >\r\n                    <Poster src={src} alt={title || name} size={size}/> \r\n                    <MovieDetailsWrapper size={size}>\r\n                        <TitleWrapper>\r\n                            <EllipsisText text={title || name} length={size < 415 ? 15 : 20}/>    \r\n                        </TitleWrapper>\r\n                        <ReleaseWrapper>\r\n                            {moment(release_date || first_air_date).format('DD.MM.YYYY')}\r\n                        </ReleaseWrapper>\r\n                        <Rate \r\n                            vote={vote_average}\r\n                            small\r\n                        />  \r\n                    </MovieDetailsWrapper>                   \r\n                </PosterWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    const showButton = () => {\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n    \r\n        return (\r\n            <LoadMoreButton\r\n                onClick={() => getMovies()}\r\n            >\r\n                {loadSpinner}\r\n            </LoadMoreButton>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return(\r\n            <ContainerWrapper size={size}>\r\n                <Container className=\"mt-lg-5 mt-3 px-0\">\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        {movieItems}\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        <Col>\r\n                            {showButton()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ContainerWrapper>\r\n        )    \r\n    }  \r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst MoviesServicesContext = React.createContext();\r\n\r\nexport default MoviesServicesContext;","import React from 'react';\r\nimport MoviesServicesContext from '../moviesContext/moviesContext';\r\n\r\nconst WithMoviesService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <MoviesServicesContext.Consumer>\r\n                {\r\n                    (MoviesService) => {\r\n                        return <Wrapped {...props} MoviesService={MoviesService}/>\r\n                    }\r\n                }\r\n            </MoviesServicesContext.Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WithMoviesService;","export const POPULAR_MOVIES_REQUESTED = 'POPULAR_MOVIES_REQUESTED';\r\nexport const POPULAR_MOVIES_LOADED = 'POPULAR_MOVIES_LOADED';\r\nexport const POPULAR_MOVIES_ERROR = 'POPULAR_MOVIES_ERROR';\r\nexport const POPULAR_MOVIES_MORE_REQUESTED = 'POPULAR_MOVIES_MORE_REQUESTED';\r\nexport const POPULAR_MOVIES_MORE_LOADED = 'POPULAR_MOVIES_MORE_LOADED';\r\nexport const POPULAR_MOVIES_MORE_ERROR = 'POPULAR_MOVIES_MORE_ERROR';\r\nexport const PLAYING_NOW_MOVIES_REQUESTED = 'PLAYING_NOW_MOVIES_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_LOADED = 'PLAYING_NOW_MOVIES_LOADED';\r\nexport const PLAYING_NOW_MOVIES_MORE_REQUESTED = 'PLAYING_NOW_MOVIES_MORE_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_MORE_LOADED = 'PLAYING_NOW_MOVIES_MORE_LOADED';\r\nexport const UPCOMING_MOVIES_REQUESTED = 'UPCOMING_MOVIES_REQUESTED';\r\nexport const UPCOMING_MOVIES_LOADED = 'UPCOMING_MOVIES_LOADED';\r\nexport const UPCOMING_MOVIES_MORE_REQUESTED = 'UPCOMING_MOVIES_MORE_REQUESTED';\r\nexport const UPCOMING_MOVIES_MORE_LOADED = 'UPCOMING_MOVIES_MORE_LOADED';\r\nexport const TOP_RATED_MOVIES_REQUESTED = 'TOP_RATED_MOVIES_REQUESTED';\r\nexport const TOP_RATED_MOVIES_LOADED = 'TOP_RATED_MOVIES_LOADED';\r\nexport const TOP_RATED_MOVIES_MORE_REQUESTED = 'TOP_RATED_MOVIES_MORE_REQUESTED';\r\nexport const TOP_RATED_MOVIES_MORE_LOADED = 'TOP_RATED_MOVIES_MORE_LOADED';\r\n\r\nexport const POPULAR_TV_REQUESTED = 'POPULAR_TV_REQUESTED';\r\nexport const POPULAR_TV_LOADED = 'POPULAR_TV_LOADED';\r\nexport const POPULAR_TV_ERROR = 'POPULAR_TV_ERROR';\r\nexport const POPULAR_TV_MORE_REQUESTED = 'POPULAR_TV_MORE_REQUESTED';\r\nexport const POPULAR_TV_MORE_LOADED = 'POPULAR_TV_MORE_LOADED';\r\nexport const AIRING_TODAY_TV_REQUESTED = 'AIRING_TODAY_TV_REQUESTED';\r\nexport const AIRING_TODAY_TV_LOADED = 'AIRING_TODAY_TV_LOADED';\r\nexport const AIRING_TODAY_TV_MORE_REQUESTED = 'AIRING_TODAY_TV_MORE_REQUESTED';\r\nexport const AIRING_TODAY_TV_MORE_LOADED = 'AIRING_TODAY_TV_MORE_LOADED';\r\nexport const ON_THE_AIR_TV_REQUESTED = 'ON_THE_AIR_TV_REQUESTED';\r\nexport const ON_THE_AIR_TV_LOADED = 'ON_THE_AIR_TV_LOADED';\r\nexport const ON_THE_AIR_TV_MORE_REQUESTED = 'ON_THE_AIR_TV_MORE_REQUESTED';\r\nexport const ON_THE_AIR_TV_MORE_LOADED = 'ON_THE_AIR_TV_MORE_LOADED';\r\nexport const TOP_RATED_TV_REQUESTED = 'TOP_RATED_TV_REQUESTED';\r\nexport const TOP_RATED_TV_LOADED = 'TOP_RATED_TV_LOADED';\r\nexport const TOP_RATED_TV_MORE_REQUESTED = 'TOP_RATED_TV_MORE_REQUESTED';\r\nexport const TOP_RATED_TV_MORE_LOADED = 'TOP_RATED_TV_MORE_LOADED';","import * as actionTypes from './actionTypesMoviesTVPage';\r\n\r\nconst popularMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_ERROR\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_ERROR\r\n    }\r\n}\r\n\r\nconst popularTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport {\r\n    popularMoviesRequested,\r\n    popularMoviesLoaded,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded,\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvError,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded\r\n}","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularMoviesRequested, popularMoviesLoaded, popularMoviesError, popularMoviesMoreLoaded, popularMoviesMoreRequested} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\nclass PopularPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.popularMoviesRequested();\r\n            this.loadMovies(this.props.popularMoviesLoaded);  \r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {popularMoviesMoreLoaded, popularMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        popularMoviesMoreRequested();\r\n        this.loadMovies(popularMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, history, loadingMore} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularMovies, loading, loadingMore, popularPage}  = state.moviePageReducer;\r\n    return {\r\n        movies: popularMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: popularPage,\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesLoaded,\r\n    popularMoviesRequested,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PopularPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {playingNowMoviesRequested, playingNowMoviesLoaded, popularMoviesError, playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\nclass PlayingNowPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if(!this.props.movies.length) {\r\n            this.props.playingNowMoviesRequested();\r\n            this.loadMovies(this.props.playingNowMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getNowPlaying(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        playingNowMoviesMoreRequested();\r\n        this.loadMovies(playingNowMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {playingNowMovies, loading, loadingMore, playingNowPage}  = state.moviePageReducer;\r\n    return {\r\n       movies: playingNowMovies,\r\n       loading,\r\n       loadingMore,\r\n       page: playingNowPage \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PlayingNowPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedMoviesRequested, topRatedMoviesLoaded, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded, popularMoviesError} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass TopRatedPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n        \r\n        if (!this.props.movies.length) {\r\n            this.props.topRatedMoviesRequested();\r\n            this.loadMovies(this.props.topRatedMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {page, MoviesService, popularMoviesError} = this.props;\r\n\r\n        MoviesService.getTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError())\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedMoviesMoreRequested();\r\n        this.loadMovies(topRatedMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedMovies, topRatedPage, loading, loadingMore} = state.moviePageReducer;\r\n    return {\r\n        movies: topRatedMovies,\r\n        page: topRatedPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {upcomingMoviesRequested, upcomingMoviesLoaded, upcomingMoviesMoreRequested, upcomingMoviesMoreLoaded, popularMoviesError} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\nclass UpcomingPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.upcomingMoviesRequested();\r\n            this.loadMovies(this.props.upcomingMoviesLoaded);\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getUpcoming(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, upcomingMoviesMoreLoaded, upcomingMoviesMoreRequested} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        upcomingMoviesMoreRequested();\r\n        this.loadMovies(upcomingMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n       \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {upcomingMovies, loading, loadingMore, upcomingPage} = state.moviePageReducer;\r\n    return {\r\n        movies: upcomingMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: upcomingPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(UpcomingPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 285px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 275px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 64.4%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 13px;\r\n    padding: 5px 10px 0;   \r\n`;\r\n\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: ${props => props.size < 415 ? 'none' : 'flex'};\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst FullCastWrapper = styled.div`\r\n    color: #1e2f3c;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n`;\r\n\r\n\r\n\r\nconst Cast = ({casts, id, history}) => {\r\n    const size = useWindowSize();\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n          <span style={{display: 'none'}}></span>\r\n        )\r\n      }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const onGoFullCast = () => {\r\n\r\n        if (history.location.pathname.includes('tv')) {\r\n            history.push(`/tv/${id}/casts`)\r\n        } else {\r\n            history.push(`/movie/${id}/casts`)\r\n        } \r\n        \r\n    }\r\n\r\n    const onGoPersonBio = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.profile_path ? ('https://image.tmdb.org/t/p/w138_and_h175_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name} \r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastItemWrapper>\r\n                \r\n            )\r\n        });\r\n\r\n    let carousel;\r\n    return (\r\n        <>\r\n            <CarouselWrapper size={size}>\r\n                <CastTitle>В главных ролях</CastTitle>\r\n                <Carousel renderArrow={myArrow}\r\n                        itemsToScroll={size < 415 ? 2 : 1} \r\n                        itemsToShow={size < 415 ? 2 : 5}\r\n                        focusOnSelect={false}\r\n                        ref={ref => (carousel = ref)}\r\n                        renderPagination={myPagination}\r\n                >\r\n                    {castItem}\r\n                </Carousel>\r\n                <PrevButton \r\n                    size={size}\r\n                    onClick={() => carousel.slidePrev()}\r\n                >\r\n                    <i className=\"fas fa-angle-double-left\"></i>\r\n                </PrevButton>\r\n                <NextButton \r\n                    size={size}\r\n                    onClick={() => carousel.slideNext()}\r\n                >\r\n                    <i className=\"fas fa-angle-double-right\"></i>\r\n                </NextButton>\r\n                <FullCastWrapper\r\n                    size={size}\r\n                    onClick={() => onGoFullCast()}\r\n                >Полный актёрский и съёмочный состав</FullCastWrapper>\r\n           </CarouselWrapper>\r\n           \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\nimport useWindowSize from '../useWindowSize/useWindowSize';\r\n\r\nconst Trailer = ({video}) => {\r\n\r\n    const {results} = video;\r\n    const resultItem = results[0];\r\n    const size= useWindowSize();\r\n    return (\r\n        <iframe\r\n            title='g'\r\n            width={ size < 415 ? size : \"1075\"}\r\n            height={ size < 415 ? (size/1.6) : \"667\"}\r\n            src={\"https://www.youtube.com/embed/\" + resultItem.key}\r\n            frameBorder='0' \r\n            allowFullScreen\r\n            controls='2'\r\n        ></iframe>\r\n    )\r\n}\r\n\r\nexport default Trailer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../shared/youtubeVideo/youtubeVideo';\r\n\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: 1075px;\r\n    max-height: 667px;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: 1075px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindow = ({video, onCloseModal}) => {\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper>\r\n                <TrailerTitleWraper>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindow;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from \"../../../../shared/rate\";\r\nimport ModalWindow from \"./modalWindow\";\r\nimport { Cast, OriginalDetails, Keywords } from \"./index\";\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    background-image: linear-gradient(\r\n            315deg,\r\n            rgba(233, 188, 183, 0.7) 0%,\r\n            rgba(41, 82, 74, 0.8) 74%\r\n        ),\r\n        ${(props) =>\r\n            `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.backdrop})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    color: #fff;\r\n    font-family: \"Source Sans Pro\";\r\n    background-color: #e9bcb7;\r\n`;\r\n\r\nconst ImgWrapper = styled.img`\r\n    max-width: 300px;\r\n    max-height: 450px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 7px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    font-family: \"Source Sans Pro\";\r\n`;\r\n\r\nconst Year = styled.span`\r\n    opacity: 0.8;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst DetailsList = styled.div`\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Vote = styled.span`\r\n    max-width: 150px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ActivityList = styled.ul`\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    li {\r\n        width: 46px;\r\n        height: 46px;\r\n        background-color: rgb(3, 37, 65);\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-left: 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 0.6;\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst TagLine = styled.div`\r\n    font-size: 17.6px;\r\n    opacity: 0.7;\r\n    font-family: Arial;\r\n`;\r\n\r\nconst CreatorNameWrapper = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Details = ({\r\n    details,\r\n    movieId,\r\n    onOpenModal,\r\n    modalWindow,\r\n    onCloseModal,\r\n    video,\r\n    history,\r\n    casts,\r\n    keywords,\r\n    socialLink,\r\n    recommendations,\r\n    showCollection,\r\n    showRecommendations\r\n}) => {\r\n    const {\r\n        poster_path,\r\n        title,\r\n        release_date,\r\n        genres,\r\n        runtime,\r\n        vote_average,\r\n        tagline,\r\n        overview,\r\n        name,\r\n        first_air_date,\r\n        episode_run_time,\r\n        created_by,\r\n    } = details;\r\n    const genreItem = genres.map((genre) => genre.name);\r\n    const genreToString = genreItem.join(\", \");\r\n\r\n    const durations =\r\n        runtime || episode_run_time\r\n            ? moment\r\n                  .duration(runtime || episode_run_time[0], \"minutes\")\r\n                  .format(\"h : m o\")\r\n                  .replace(\":\", \"h\")\r\n                  .replace(\"o\", \"m\")\r\n            : null;\r\n\r\n    const trailerButton = () => {\r\n        return (\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle onClick={() => onOpenModal(movieId)}>\r\n                    Воспроизвести трейлер\r\n                </TrailerTitle>\r\n            </TrailerWrapper>\r\n        );\r\n    };\r\n\r\n    const modal = modalWindow ? (\r\n        <ModalWindow video={video} onCloseModal={onCloseModal} />\r\n    ) : null;\r\n    const showTrailer = video?.results.length === 0 ? null : trailerButton();\r\n    const src = !poster_path\r\n        ? process.env.PUBLIC_URL + \"/assets/poster.png\"\r\n        : \"https://image.tmdb.org/t/p/w220_and_h330_face\" + poster_path;\r\n    const creator = history.location.pathname.includes(\"tv\") ? (\r\n        <TvCreator creator={created_by} history={history} />\r\n    ) : null;\r\n    const releaseYear =\r\n        release_date || first_air_date\r\n            ? `(${moment(release_date || first_air_date).format(\"YYYY\")})`\r\n            : null;\r\n    const releaseDate =\r\n        release_date || first_air_date\r\n            ? moment(release_date || first_air_date).format(\"DD/MM/YYYY\")\r\n            : null;\r\n\r\n    const showOverview = overview ? overview : '-';\r\n    const dateGenreDurationArray = [releaseDate, genreToString, durations];\r\n    const dateGenreDurationString = dateGenreDurationArray.filter(item => item).join('  \\u25CF  ');\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={details?.backdrop_path}>\r\n                <Container className=\"w-100\">\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                        <Col className=\"col-4\">\r\n                            {modal}\r\n                            <ImgWrapper src={src} alt={title || name} />\r\n                        </Col>\r\n                        <Col className=\"col-8 text-left px-0\">\r\n                            <Title>\r\n                                {title || name} <Year>{releaseYear}</Year>\r\n                            </Title>\r\n                            <DetailsList>\r\n                                <Row>\r\n                                    <Col className=\"col-auto d-flex align-items-center\">\r\n                                        {dateGenreDurationString}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"font-weight-bold py-3\">\r\n                                    <Col className=\"col-auto d-flex\">\r\n                                        <Rate vote={vote_average} />\r\n                                        <Vote>Пользовательский счёт</Vote>\r\n                                    </Col>\r\n                                    <Col className=\"px-0 my-0 d-flex align-items-center\">\r\n                                        <ActivityList>\r\n                                            <li>\r\n                                                <i className=\"fas fa-list-ul\"></i>\r\n                                            </li>\r\n                                            <li>\r\n                                                <i className=\"fas fa-heart\"></i>\r\n                                            </li>\r\n                                            <li>\r\n                                                <i className=\"fas fa-bookmark\"></i>\r\n                                            </li>\r\n                                            <li>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                            </li>\r\n                                        </ActivityList>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex align-items-center\">\r\n                                        {showTrailer}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"font-italic\">\r\n                                        <TagLine>{tagline}</TagLine>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"flex-column py-2\">\r\n                                    <Col>\r\n                                        <Overview>Обзор</Overview>\r\n                                    </Col>\r\n                                    <Col>{showOverview}</Col>\r\n                                </Row>\r\n                                {creator}\r\n                            </DetailsList>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </BackgroundWrapper>\r\n            <Container>\r\n                <Row className='mt-5'>\r\n                    <Col className=\"col-8 px-4\">\r\n                        <Cast casts={casts} id={movieId} history={history} />\r\n                        {showCollection(details?.belongs_to_collection)}\r\n                        {showRecommendations(recommendations)}\r\n                    </Col>\r\n                    <Col className=\"col-4 px-4\">\r\n                        <Row>\r\n                            <OriginalDetails\r\n                                details={details}\r\n                                history={history}\r\n                                socialLink={socialLink}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"flex-column\">\r\n                            <Keywords\r\n                                keyword={keywords}\r\n                                history={history}\r\n                                url={\"keywords\"}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nconst TvCreator = ({ creator, history }) => {\r\n    if (creator?.length) {\r\n        return (\r\n            <Row className=\"flex-column py-2\">\r\n                <Col>\r\n                    <CreatorNameWrapper\r\n                        onClick={() => history.push(`/person/${creator[0].id}`)}\r\n                    >\r\n                        {creator[0].name}\r\n                    </CreatorNameWrapper>\r\n                    <div>Создатель</div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Details;\r\nexport { BackgroundWrapper, ImgWrapper, Title, DetailsList, Vote, Overview };","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: inline-block;\r\n    font-size: 25px;  \r\n    cursor: pointer;\r\n    margin-right: 15px;\r\n    & .popover-body {\r\n        background-color: red\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: #000;\r\n    & :hover :active :link :visited {\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    margin: ${props => props.movie ? '0 15px 20px 0' : '30px 15px 0 0'};\r\n    display: flex;\r\n`;\r\n\r\nconst SocialLinkWrrapper = styled.div`\r\n    display: ${props => !props.facebook && !props.twitter && !props.instagram ? 'none' : 'block'};\r\n    border-right: 1px solid #d7d7d7;\r\n    margin-right: 15px;\r\n`;\r\n\r\n\r\nconst OriginalDetails = ({details, history, socialLink}) => {\r\n    const {original_title, status, budget, revenue, original_language, original_name, networks, homepage} = details;\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieBudget= budget ? nf.format(budget).replace(/\\s/g, ',') : '0';\r\n    const movieRevenue = revenue ? nf.format(revenue).replace(/\\s/g, ',') : '0';\r\n\r\n    const tvNet = history.location.pathname.includes('tv') ? <TvNetwork networks={networks}/> : null;\r\n\r\n    const statusMovie = () => {\r\n        switch (status) {\r\n            case 'Released': \r\n                return 'Выпущено';\r\n            case 'Returning Series':\r\n                return 'Продолжается';\r\n            default:\r\n                return (status);\r\n        }\r\n    }\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const homePage = (\r\n        <Link href={homepage} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-link\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n    const overlayHomePage = homepage ? <Overlay logo={homePage} page={'Домашнюю страницу'}/> : null;\r\n\r\n    return(\r\n        <Col>\r\n            <Row>\r\n                <Col className='d-flex align-items-center'>\r\n                    <LinkWrapper movie>\r\n                        <SocialLinkWrrapper facebook={facebook_id} twitter={twitter_id} instagram={instagram_id}>\r\n                            {overlayFacebook}\r\n                            {overlayTwitter}\r\n                            {overlayInstagram}\r\n                        </SocialLinkWrrapper>\r\n                        {overlayHomePage}\r\n                    </LinkWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Исходное название</Col>\r\n                <Col>{original_title || original_name}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Статус</Col>\r\n                <Col>{statusMovie()}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Исходный язык</Col>\r\n                <Col>{original_language === 'en' ?  'английский' : original_language}</Col>\r\n            </Row>\r\n            {tvNet}\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Бюджет</Col>\r\n                <Col>${movieBudget}.00</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Сборы</Col>\r\n                <Col>${movieRevenue}.00</Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst TvNetwork = ({networks}) => {\r\n    const networkItem = networks?.find((network, index) => index === 0);\r\n    const logo = !networkItem?.logo_path ? networkItem?.name : <img src={`https://image.tmdb.org/t/p/h30${networkItem?.logo_path}`} alt={networkItem?.name}/>;\r\n\r\n    return (\r\n        <Row className=\"flex-column\">\r\n            <Col className=\"font-weight-bold\">Телесеть</Col>\r\n            <Col>  \r\n                {logo}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst Overlay = ({logo, page}) => {\r\n    const popover = (\r\n            <Popover id=\"popover-basic\">              \r\n                <Popover.Content>\r\n                    Посетить {page}\r\n                </Popover.Content>\r\n            </Popover>\r\n    );\r\n    \r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={popover}>\r\n            <LinkIconWrapper>{logo}</LinkIconWrapper>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default OriginalDetails;\r\nexport {Overlay, LinkIconWrapper, Link};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst KeywordsWrapper = styled.div`\r\n    margin: 10px 0;\r\n    max-width: ${props => props.size < 415 ? props.size + 'px' : '260px'};\r\n    width: 100%;\r\n`;\r\n\r\nconst KeywordItemWrapper = styled.div`\r\n    background-color: rgba(0,0,0,0.1);\r\n    border: 1px solid #d7d7d7;\r\n    color: #000;\r\n    padding: 4px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    font-size: 0.9em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Keywords = ({keyword, url, history}) => {\r\n    const size = useWindowSize();\r\n    const keywordsItem = keyword.map((keyword, index) => {\r\n        return(\r\n            <KeywordItemWrapper \r\n                key={index} \r\n                onClick={() => history.push(`/${url}/${keyword.id}`)}\r\n            >\r\n                {keyword.name}\r\n            </KeywordItemWrapper>\r\n        )\r\n    })\r\n\r\n    const keywordItem = keywordsItem.length === 0 ? 'Ключевые слова не добавлены.' : keywordsItem;\r\n\r\n    return (\r\n        <KeywordsWrapper size={size}>\r\n            <Col className=\"font-weight-bold\">Ключевые слова</Col>\r\n            <Col>\r\n                {keywordItem}\r\n            </Col>\r\n        </KeywordsWrapper>\r\n    )\r\n}\r\n\r\nexport default Keywords;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst CollectionWrapper = styled.div`\r\n    padding: 30px 0;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionContent = styled.div`\r\n    border-radius: 8px;\r\n    background-image: linear-gradient(315deg, rgba(42, 42, 114, 0.5) 0%, rgba(0, 159, 253, 0.5) 74%), ${props => `url(${props.bg})`};\r\n    background-repeat: no-repeat;\r\n    max-width: 730px;\r\n    width: 100%;\r\n    height: 320px;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CollectionName = styled.div`\r\n    color: #fff;\r\n    font-size: 1.9em;\r\n    font-weight: 600;\r\n`\r\nconst CollectionDescription = styled.div`\r\n    font-size: 1.1em;\r\n    margin-bottom: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst CollectionButton = styled.button`\r\n    font-size: 1.1em;\r\n    color: #fff;\r\n    background-color: rgb(53, 40, 30);\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 700;\r\n    padding: 6px 20px;\r\n    max-width: 260px;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst Collection = ({details, history, collection}) => {\r\n    const size = useWindowSize();\r\n    const {belongs_to_collection} = details;\r\n    const {name, backdrop_path, id} = belongs_to_collection;\r\n    const {parts} = collection;\r\n\r\n    const getTitle = () => {\r\n        if (collection.hasOwnProperty('parts')) {\r\n            const moviesTitle = parts.map(part => part.title);\r\n            return moviesTitle.join(', ');\r\n        } \r\n        return null\r\n    }\r\n    \r\n    const path = size < 415 ? `https://image.tmdb.org/t/p/w1000_and_h450_multi_faces${backdrop_path}` : `https://image.tmdb.org/t/p/w1440_and_h320_multi_faces${backdrop_path}`;\r\n    const collectionIncludes = size < 415 ? null : `Коллекция включает ${getTitle()}`;\r\n    return (\r\n        <CollectionWrapper>\r\n            <CollectionContent bg={path}>\r\n            <CollectionName>Входит в {name}</CollectionName>\r\n            <CollectionDescription>{collectionIncludes}</CollectionDescription>\r\n            <CollectionButton\r\n                onClick={() => history.push(`/collection/${id}`)}\r\n            >Смотреть коллекцию</CollectionButton>\r\n            </CollectionContent>\r\n        </CollectionWrapper>\r\n    )\r\n}\r\n\r\nexport default Collection;","import React from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport styled from \"styled-components\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from \"moment\";\r\nimport useWindowSize from \"../../../../shared/useWindowSize/useWindowSize\";\r\n\r\nconst RecommendationCardWrapper = styled.div`\r\n    max-width: 230px;\r\n`;\r\n\r\nconst RecommendationCardImgWrapper = styled.div`\r\n    cursor: pointer;\r\n    position: relative;\r\n    max-width: 230px;\r\n    font-size: 16px;\r\n\r\n    &:hover .visible {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst RecommendationCardRelease = styled.div`\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n    position: absolute;\r\n    bottom: 0px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: opacity 200ms;\r\n`;\r\n\r\nconst RecommendationCardImg = styled.img`\r\n    border-radius: 5px;\r\n    max-width: 230px;\r\n    max-height: 130px;\r\n`;\r\n\r\nconst RecommendationCardTitleWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst RecommendationCardTitle = styled.div``;\r\n\r\nconst RecommendationCardRate = styled.div``;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    border-bottom: ${(props) => (props.size < 415 ? \"none\" : \"1px solid rgb(215,215,215)\")};\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: ${(props) => (props.size < 415 ? \"190px\" : \"210px\")};\r\n        * {\r\n            outline: none;\r\n        }\r\n        .rec-item-wrapper {\r\n            height: ${(props) => (props.size < 415 ? \"185px\" : \"205px\")};\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${(props) => (props.size < 415 ? \"5%\" : \"0\")};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    display: ${(props) => (props.size < 415 ? \"none\" : \"block\")};\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${(props) => (props.size < 415 ? \"95%\" : \"100%\")};\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Recommendation = ({\r\n    recommendations,\r\n    history,\r\n    MoviesService,\r\n    castRequested,\r\n    movieDetailsRequested,\r\n    getDetails,\r\n    getCast,\r\n    getKeywords,\r\n    getVideos,\r\n    getSocailLink,\r\n    getRecommendations,\r\n}) => {\r\n    const handleRouting = (id) => {\r\n        if (history.location.pathname.includes(\"tv\")) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getTVDetails);\r\n            getCast(id, MoviesService.getTVCasts);\r\n            getKeywords(id, MoviesService.getTVKeywords);\r\n            getVideos(id, MoviesService.getTVVideos);\r\n            getSocailLink(id, MoviesService.getTVExternalIds);\r\n            getRecommendations(id, MoviesService.getTVRecommendations);\r\n            history.push(`/tv/${id}`);\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getMovieDetails);\r\n            getCast(id, MoviesService.getCast);\r\n            getKeywords(id, MoviesService.getKeywords);\r\n            getVideos(id, MoviesService.getVideos);\r\n            getSocailLink(id, MoviesService.getMovieExternalIds);\r\n            getRecommendations(id, MoviesService.getMovieRecommendations);\r\n            history.push(`/movie/${id}`);\r\n        }\r\n    };\r\n    const size = useWindowSize();\r\n    const recommendationItems = recommendations\r\n        .filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const { id, vote_average, title, release_date, name, first_air_date, backdrop_path } = item;\r\n            const src = backdrop_path\r\n                ? \"//image.tmdb.org/t/p/w250_and_h141_face\" + backdrop_path\r\n                : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n            const releaseDate = moment(release_date || first_air_date).format(\"DD/MM/YYYY\");\r\n            return (\r\n                <RecommendationCardWrapper key={index}>\r\n                    <RecommendationCardImgWrapper>\r\n                        <RecommendationCardImg src={src} alt={title || name} onClick={() => handleRouting(id)} />\r\n                        <RecommendationCardRelease className={\"visible\"}>\r\n                            <i className=\"far fa-calendar-alt\"></i> {releaseDate}\r\n                        </RecommendationCardRelease>\r\n                    </RecommendationCardImgWrapper>\r\n                    <RecommendationCardTitleWrapper>\r\n                        <RecommendationCardTitle>\r\n                            <EllipsisText text={title || name} length={24} />\r\n                        </RecommendationCardTitle>\r\n                        <RecommendationCardRate>{vote_average * 10}%</RecommendationCardRate>\r\n                    </RecommendationCardTitleWrapper>\r\n                </RecommendationCardWrapper>\r\n            );\r\n        });\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper size={size}>\r\n            <SectionTitle>Рекомендации </SectionTitle>\r\n            <Carousel\r\n                renderArrow={myArrow}\r\n                itemsToScroll={size < 415 ? 1 : 2}\r\n                itemsToShow={size < 415 ? 1 : 3}\r\n                focusOnSelect={false}\r\n                ref={(ref) => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {recommendationItems}\r\n            </Carousel>\r\n            <PrevButton size={size} onClick={() => carousel.slidePrev()}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton size={size} onClick={() => carousel.slideNext()}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    );\r\n};\r\n\r\nexport default Recommendation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../../shared/youtubeVideo/youtubeVideo';\r\nimport useWindowSize from '../../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: ${props => props.size + 'px'};\r\n    max-height: 40%;\r\n    width: 100%;\r\n\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: ${props => props.size + 'px'};\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindowMobile = ({video, onCloseModal}) => {\r\n    const size = useWindowSize();\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper size={size}>\r\n                <TrailerTitleWraper size={size}>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindowMobile;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from \"../../../../../shared/rate\";\r\nimport { ModalWindowMobile } from \"./index\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {Cast, OriginalDetails, Keywords} from '../index';\r\n\r\nconst GlobalWrapper = styled.div`\r\n    background-color: #5b6467;\r\n    background-image: linear-gradient(315deg, #5b6467 0%, #8b939a 74%);\r\n    color: #fff;\r\n`;\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    width: 100%;\r\n    background-image: linear-gradient(\r\n            315deg,\r\n            rgba(233, 188, 183, 0.7) 0%,\r\n            rgba(41, 82, 74, 0.8) 74%\r\n        ),\r\n        ${(props) =>\r\n            `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.url})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    font-family: \"Source Sans Pro\";\r\n    background-color: #e9bcb7;\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    padding: 20px;\r\n\r\n    & img {\r\n        max-width: 116px;\r\n        max-height: 174px;\r\n        border-radius: 7px;\r\n    }\r\n`;\r\n\r\nconst TitleWrapper = styled.div``;\r\n\r\nconst Title = styled.div`\r\n    font-size: calc(0.7em + 3vw);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    padding: 16px 20px;\r\n\r\n    & span {\r\n        font-weight: 400;\r\n        opacity: 0.8;\r\n        font-size: 0.8em;\r\n    }\r\n`;\r\n\r\nconst RateWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 20px 16px;\r\n`;\r\n\r\nconst Vote = styled.div`\r\n    position: relative;\r\n    border-right: ${(props) =>\r\n        props.border ? \"1px solid rgba(255, 255, 255, 0.8)\" : \"none\"};\r\n    font-weight: 600;\r\n    padding: 0 5px 0 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    line-height: 1;\r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n    padding-left: 5px;\r\n\r\n    &:hover {\r\n        opacity: 0.6;\r\n    }\r\n\r\n    & i {\r\n        font-size: 0.6em;\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst GenreWrapper = styled.div`\r\n    background-color: #2f4353;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    padding: 10px;\r\n`;\r\n\r\nconst ReleaseWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & i {\r\n        font-size: 0.5em;\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nconst GenreList = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst OverviewWrapper = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 1em;\r\n    text-align: justify;\r\n    line-height: 1.3;\r\n\r\n    & div {\r\n        font-weight: 600;\r\n        font-size: 1.3em;\r\n        padding-bottom: 5px;\r\n    }\r\n`;\r\n\r\nconst CreatorWrapper = styled.div`\r\n    margin-top: 20px;\r\n    font-size: 0.9em;\r\n`;\r\n\r\nconst Creator = styled.div`\r\n    font-size: 1.1em;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst DetailsMobile = ({\r\n    details,\r\n    history,\r\n    video,\r\n    onOpenModal,\r\n    modalWindow,\r\n    onCloseModal,\r\n    movieId,\r\n    casts,\r\n    keywords,\r\n    socialLink,\r\n    recommendations,\r\n    showCollection,\r\n    showRecommendations\r\n}) => {\r\n    const {\r\n        title,\r\n        name,\r\n        backdrop_path,\r\n        poster_path,\r\n        id,\r\n        vote_average,\r\n        release_date,\r\n        genres,\r\n        runtime,\r\n        overview,\r\n        first_air_date,\r\n        episode_run_time,\r\n        created_by,\r\n    } = details;\r\n    const src = poster_path\r\n        ? \"//image.tmdb.org/t/p/w116_and_h174_face\" + poster_path\r\n        : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n    const durations =\r\n        runtime || episode_run_time\r\n            ? moment\r\n                  .duration(runtime || episode_run_time[0], \"minutes\")\r\n                  .format(\"h : m o\")\r\n                  .replace(\":\", \"h\")\r\n                  .replace(\"o\", \"m\")\r\n            : null;\r\n    const genreItem = genres.map((genre) => genre.name);\r\n    const genreToString = genreItem.join(\", \");\r\n    const releaseYear =\r\n        release_date || first_air_date\r\n            ? `(${moment(release_date || first_air_date).format(\"YYYY\")})`\r\n            : null;\r\n    const releaseDate =\r\n        release_date || first_air_date\r\n            ? moment(release_date || first_air_date).format(\"DD/MM/YYYY\")\r\n            : null;\r\n\r\n    const creator = !created_by?.length ? '-' : created_by?.find((item, index) => index === 0).name;\r\n    const creatorId = !created_by?.length ? null : created_by?.find((item, index) => index === 0).id;\r\n \r\n\r\n\r\n    const showCreator = () => {\r\n        if (history.location.pathname.includes(\"tv\")) {\r\n            return (\r\n                <CreatorWrapper>\r\n                    <Creator\r\n                        onClick={() => history.push(`/person/${creatorId}`)}\r\n                    >\r\n                        {creator}\r\n                    </Creator>\r\n                    Создатель\r\n                </CreatorWrapper>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const trailerButton = () => {\r\n        return (\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle onClick={() => onOpenModal(id)}>\r\n                    Трейлер\r\n                </TrailerTitle>\r\n            </TrailerWrapper>\r\n        );\r\n    };\r\n\r\n    const modal = modalWindow ? (\r\n        <ModalWindowMobile video={video} onCloseModal={onCloseModal} />\r\n    ) : null;\r\n    const showTrailer = !video?.results.length ? null : trailerButton();\r\n    const separator = releaseDate ? <>{releaseDate} <i className=\"fas fa-circle\"></i></> : null;\r\n    const showOverview = overview ? overview : '-';\r\n    const showCast = casts.cast.length ? <Cast casts={casts} id={movieId} history={history} /> : null;\r\n\r\n    return (\r\n        <>\r\n            <GlobalWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            {modal}\r\n                            <BackgroundWrapper url={backdrop_path}>\r\n                                <PosterWrapper>\r\n                                    <img src={src} alt={title || name} />\r\n                                </PosterWrapper>\r\n                            </BackgroundWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <TitleWrapper>\r\n                                <Title>\r\n                                    {title || name} <span>{releaseYear}</span>\r\n                                </Title>\r\n                                <RateWrapper>\r\n                                    <Rate vote={vote_average} small isStatic />\r\n                                    <Vote border={video?.results.length}>\r\n                                        Пользовательский <span>счёт</span>\r\n                                    </Vote>\r\n                                    {showTrailer}\r\n                                </RateWrapper>\r\n                            </TitleWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <GenreWrapper>\r\n                                <ReleaseWrapper>\r\n                                    {separator}\r\n                                    {durations}\r\n                                </ReleaseWrapper>\r\n                                <GenreList>{genreToString}</GenreList>\r\n                            </GenreWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <OverviewWrapper>\r\n                                <Overview>\r\n                                    <div>Обзор</div>\r\n                                    {showOverview}\r\n                                </Overview>\r\n                                {showCreator()}\r\n                            </OverviewWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </GlobalWrapper>\r\n            <Container>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        {showCast}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        {showCollection(details?.belongs_to_collection)}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        {showRecommendations(recommendations)}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <OriginalDetails\r\n                            details={details}\r\n                            history={history}\r\n                            socialLink={socialLink}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mb-3'>\r\n                    <Col>\r\n                        <Keywords\r\n                            keyword={keywords}\r\n                            history={history}\r\n                            url={\"keywords\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DetailsMobile;\r\nexport {\r\n    GlobalWrapper,\r\n    BackgroundWrapper,\r\n    PosterWrapper,\r\n    TitleWrapper,\r\n    Title,\r\n    RateWrapper,\r\n    Vote,\r\n    GenreWrapper,\r\n    GenreList,\r\n    OverviewWrapper,\r\n    Overview,\r\n};\r\n","export const MOVIE_DETAILS_REQUESTED = 'MOVIE_DETAILS_REQUESTED';\r\nexport const MOVIE_DETAILS_LOADED = 'MOVIE_DETAILS_LOADED';\r\nexport const MOVIE_DETAILS_ERROR = 'MOVIE_DETAILS_ERROR';\r\n\r\nexport const CAST_REQUESTED = 'CAST_REQUESTED';\r\nexport const CAST_LOADED = 'CAST_LOADED';\r\n\r\nexport const KEYWORDS_REQUESTED = 'KEYWORDS_REQUESTED';\r\nexport const KEYWORDS_LOADED = 'KEYWORDS_LOADED';\r\n\r\nexport const MODAL_WINDOW_TOGGLE = 'MODAL_WINDOW_TOGGLE';\r\n\r\nexport const VIDEO_LOADED = 'VIDEO_LOADED';\r\n\r\nexport const SOCIAL_LINK_LOADED = 'SOCIAL_LINK_LOADED';\r\n\r\nexport const RECOMMENDATIONS_LOADED = 'RECOMMENDATIONS_LOADED';\r\n\r\nexport const MOVIE_DETAILS_COLLECTION_LOADED = 'MOVIE_DETAILS_COLLECTION_LOADED';","import * as actionTypes from './actionTypesMovieDetailsPage';\r\n\r\n\r\nconst movieDetailsRequested = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_REQUESTED\r\n    }\r\n}\r\n\r\nconst movieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsError = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_ERROR\r\n    }\r\n}\r\n\r\nconst castRequested = () => {\r\n    return {\r\n        type: actionTypes.CAST_REQUESTED\r\n    }  \r\n}\r\n\r\nconst castLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst keywordsRequested = () => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_REQUESTED\r\n    }\r\n}\r\n\r\nconst keywordsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst modalWindowToggle = () => {\r\n    return {\r\n        type: actionTypes.MODAL_WINDOW_TOGGLE\r\n    }\r\n}\r\n\r\nconst videoLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.VIDEO_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst socialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst recommendationsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.RECOMMENDATIONS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsCollectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    recommendationsLoaded,\r\n    movieDetailsCollectionLoaded\r\n}","import React, { Component } from \"react\";\r\nimport Spinner from \"../../../shared/spinner/spinner\";\r\nimport { Details, Collection, Recommendation } from \"./components\";\r\nimport DetailsMobile from \"./components/mobileComponents/detailsMob\";\r\nimport WithMoviesService from \"../../../hoc/withMoviesService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    movieDetailsCollectionLoaded,\r\n    recommendationsLoaded,\r\n} from \"../../../../actions/actionsMovieDetailsPage/actionMovieDetailsPage\";\r\n\r\nclass MovieDetails extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            movieId,\r\n            history,\r\n            movieDetailsRequested,\r\n            castRequested,\r\n            MoviesService,\r\n            keywordsRequested,\r\n        } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        if (pathname.includes(\"tv\")) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            keywordsRequested();\r\n            this.getDetails(movieId, MoviesService.getTVDetails);\r\n            this.getCast(movieId, MoviesService.getTVCasts);\r\n            this.getKeywords(movieId, MoviesService.getTVKeywords);\r\n            this.getVideos(movieId, MoviesService.getTVVideos);\r\n            this.getSocailLink(movieId, MoviesService.getTVExternalIds);\r\n            this.getRecommendations(movieId, MoviesService.getTVRecommendations);\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            keywordsRequested();\r\n            this.getDetails(movieId, MoviesService.getMovieDetails);\r\n            this.getCast(movieId, MoviesService.getCast);\r\n            this.getKeywords(movieId, MoviesService.getKeywords);\r\n            this.getVideos(movieId, MoviesService.getVideos);\r\n            this.getSocailLink(movieId, MoviesService.getMovieExternalIds);\r\n            this.getRecommendations(movieId, MoviesService.getMovieRecommendations);\r\n        }\r\n    }\r\n\r\n    getDetails = (id, request) => {\r\n        const { movieDetailsLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => {\r\n                movieDetailsLoaded(response);\r\n                if (response && response.belongs_to_collection) {\r\n                    this.getCollectionDetails(response.belongs_to_collection.id);\r\n                }\r\n            })\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getCast = (id, request) => {\r\n        const { movieDetailsError, castLoaded } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => castLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getKeywords = (id, request) => {\r\n        const { keywordsLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => keywordsLoaded(response.keywords || response.results))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getVideos = (id, request) => {\r\n        const { videoLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => videoLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getSocailLink = (id, request) => {\r\n        const { socialLinkLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => socialLinkLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getRecommendations = (id, request) => {\r\n        const { recommendationsLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => recommendationsLoaded(response.results))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getCollectionDetails = (id) => {\r\n        const { MoviesService, movieDetailsCollectionLoaded, movieDetailsError } = this.props;\r\n\r\n        MoviesService.getCollection(id)\r\n            .then((response) => movieDetailsCollectionLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    showCollection = (isBelongToCollection) => {\r\n        const { history, details, loading, collection } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        } else if (isBelongToCollection) {\r\n            return <Collection details={details} history={history} collection={collection} />;\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    showRecommendations = (isRecommendation) => {\r\n        const { history, loading, recommendations, MoviesService, movieDetailsRequested, castRequested } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        } else if (isRecommendation.length) {\r\n            return (\r\n                <Recommendation\r\n                    history={history}\r\n                    recommendations={recommendations}\r\n                    MoviesService={MoviesService}\r\n                    getDetails={this.getDetails}\r\n                    getCast={this.getCast}\r\n                    getKeywords={this.getKeywords}\r\n                    getVideos={this.getVideos}\r\n                    getSocailLink={this.getSocailLink}\r\n                    getRecommendations={this.getRecommendations}\r\n                    movieDetailsRequested={movieDetailsRequested}\r\n                    castRequested={castRequested}\r\n                />\r\n            );\r\n        } else if (!isRecommendation.length) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            movieId,\r\n            history,\r\n            details,\r\n            loading,\r\n            casts,\r\n            loadingCast,\r\n            keywords,\r\n            loadingKeywords,\r\n            modalWindow,\r\n            video,\r\n            modalWindowToggle,\r\n            socialLink,\r\n            recommendations,\r\n            width,\r\n        } = this.props;\r\n\r\n        const globalLoading = loading || loadingCast || loadingKeywords;\r\n\r\n        if (globalLoading) {\r\n            return <Spinner />;\r\n        } else if (width < 415) {\r\n            return (\r\n                <DetailsMobile\r\n                    details={details}\r\n                    movieId={movieId}\r\n                    video={video}\r\n                    history={history}\r\n                    onOpenModal={modalWindowToggle}\r\n                    modalWindow={modalWindow}\r\n                    onCloseModal={modalWindowToggle}\r\n                    casts={casts}\r\n                    keywords={keywords}\r\n                    socialLink={socialLink}\r\n                    recommendations={recommendations}\r\n                    showCollection={this.showCollection}\r\n                    showRecommendations={this.showRecommendations}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <Details\r\n                    details={details}\r\n                    movieId={movieId}\r\n                    video={video}\r\n                    history={history}\r\n                    onOpenModal={modalWindowToggle}\r\n                    modalWindow={modalWindow}\r\n                    onCloseModal={modalWindowToggle}\r\n                    casts={casts}\r\n                    keywords={keywords}\r\n                    socialLink={socialLink}\r\n                    recommendations={recommendations}\r\n                    showCollection={this.showCollection}\r\n                    showRecommendations={this.showRecommendations}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations,\r\n    } = state.movieDetailsReducer;\r\n    return {\r\n        details: movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    movieDetailsCollectionLoaded,\r\n    recommendationsLoaded,\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(MovieDetails));\r\n","import {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\nexport default withRouter(ScrollToTop)","export default class MoviesServices {\r\n    constructor() {\r\n        this._baseApi = 'https://api.themoviedb.org/3';\r\n        this._apiKey = 'api_key=d97132eedaef267781863bedd0564229';\r\n        this._apiLanguage = 'language=ru-RU';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._baseApi}${url}${this._apiKey}&${this._apiLanguage}`);\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getPopular = async (page) => {\r\n        const response = await this.getResource(`/movie/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getMovieDetails = async (movieId) => { \r\n        const response = await this.getResource(`/movie/${movieId}?`);\r\n        if (response && response.status_code === 34) {\r\n            return this.getTVDetails(movieId)\r\n        }\r\n        return response;   \r\n    }\r\n\r\n    getNowPlaying = async (page) => {\r\n        const response = await this.getResource(`/movie/now_playing?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTopRated = async (page) => {\r\n        const response = await this.getResource(`/movie/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getUpcoming = async (page) => {\r\n        const response = await this.getResource(`/movie/upcoming?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCast = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getKeywords = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getVideos = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieByKeyword = async (keywordId, page) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}/movies?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getKeywordName = async (keywordId) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonBiography = async (personId) => {\r\n        const biography = await this.getResource(`/person/${personId}?`);\r\n        const combinedMoviesTv = await this.getResource(`/person/${personId}/combined_credits?`);   \r\n        return {biography, combinedMoviesTv};\r\n\r\n    }\r\n\r\n    getTVDetails = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}?`);\r\n        return response;\r\n    }\r\n\r\n    getTVCasts = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getTVKeywords = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getTVVideos = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getTVPopular = async (page) => {\r\n        const response = await this.getResource(`/tv/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVAiringToday = async (page) => {\r\n        const response = await this.getResource(`/tv/airing_today?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVTopRated = async (page) => {\r\n        const response = await this.getResource(`/tv/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVOnTheAir = async (page) => {\r\n        const response = await this.getResource(`/tv/on_the_air?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getPopularPerson = async (page) => {\r\n        const response = await this.getResource(`/person/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCollection = async (collectionId) => {\r\n        const response = await this.getResource(`/collection/${collectionId}?`);\r\n        return response;\r\n    }\r\n\r\n    getGenreList = async () => {\r\n        const response = await this.getResource(`/genre/movie/list?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieExternalIds = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getTVExternalIds = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonExternalIds = async (personId) => {\r\n        const response = await this.getResource(`/person/${personId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getInTrend = async (time) => {\r\n        const response = await this.getResource(`/trending/all/${time}?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRecommendations = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRecommendations = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRating = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/release_dates?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRating = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/content_ratings?`);\r\n        return response;\r\n    }\r\n\r\n    getSearchByName = async (type, name, page) => {\r\n        \r\n        const response = await this.getResource(`/search/${type}?query=${name}&page=${page}&include_adult=false&`);\r\n        return response;  \r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst MovieCardWrapper = styled.div`\r\n    max-width: 1218px;\r\n    width: 90%;\r\n    min-height: 141px;\r\n    height: 100%;\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px;\r\n\r\n    &:first-child {\r\n        margin-top: 35px;\r\n    }\r\n`;\r\n\r\nconst MovieCardImg = styled.img`\r\n    border-top-left-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    height: 141px;\r\n    cursor: pointer;\r\n    min-width: 94px;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst MovieCardContent = styled.div`\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst MovieCardTitle = styled.div`\r\n    font-size: 19.2px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardReleaseDate = styled.div`\r\n    font-size: 16px;\r\n    color: #999;\r\n`;\r\n\r\nconst MovieCardDescription = styled.div`\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    height: 72px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst KeywordName = styled.div`\r\n    font-size: 1.6em;\r\n    font-weight: 700;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieQuantity = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    opacity: 0.5;\r\n    color: #fff;\r\n`;\r\n\r\nconst NoFilmTemplate = styled.div`\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst MovieListByKeywords = ({movies, totalResults, keywordName, history}) => {\r\n    const size = useWindowSize();\r\n    const moviesItem = movies.map((item, index) => {\r\n        \r\n        const releaseDate = moment(item.release_date).format('DD/MM/YYYY');\r\n    \r\n        const src = !item.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path);\r\n\r\n\r\n        return (\r\n            <MovieCardWrapper key={index}>\r\n                <MovieCardImg \r\n                    src={src}\r\n                    onClick={() => {\r\n                        history.push(`/movie/${item.id}`)\r\n                    }}/>\r\n                <MovieCardContent>\r\n                    <MovieCardTitle\r\n                        onClick={() => {\r\n                            history.push(`/movie/${item.id}`)\r\n                        }}\r\n                    >{item.title}</MovieCardTitle>\r\n                    <MovieCardReleaseDate>{releaseDate}</MovieCardReleaseDate>\r\n                    <MovieCardDescription>\r\n                        <EllipsisText text={item.overview} length={size < 415 ? 47 : 260}/>\r\n                    </MovieCardDescription>\r\n                </MovieCardContent>\r\n            </MovieCardWrapper>\r\n        )\r\n    });\r\n\r\n    const film = totalResults === 1 ? 'фильм' : totalResults < 5 ? 'фильма' : 'фильмов';\r\n    const showMovieList = movies.length ? moviesItem : <NoFilmTemplate>Фильмы не найдены.</NoFilmTemplate>\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <Header>\r\n                    <KeywordName>{keywordName}</KeywordName>\r\n                    <MovieQuantity>{totalResults} {film}</MovieQuantity>\r\n                </Header>\r\n            </HeaderWrapper>\r\n            {showMovieList}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieListByKeywords;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MoviesServices from '../../services/services';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport LoadMoreSpinner from '../shared/spinner/loadMoreSpinner';\r\nimport MovieListByKeywords from './components/movieListByKeywords';\r\n\r\nconst MovieListWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin: 0 auto 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    max-width: 1030px;\r\n    width: 85%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nexport default class MoviesByKeyword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n            loading: true,\r\n            page: 0,\r\n            loadingMore: false,\r\n            totalResults: 0,\r\n            totalPages: 0,\r\n            keywordName: ''\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.keywordId);\r\n\r\n        this.getKeywordName(this.props.keywordId);\r\n    }\r\n\r\n    onLoadingMovies = (response, results, pages) => {\r\n        this.setState({\r\n            movies: [...this.state.movies, ...response],\r\n            loading: false,\r\n            page: this.state.page + 1,\r\n            loadingMore: false,\r\n            totalResults: results,\r\n            totalPages: pages,\r\n            \r\n        })\r\n    }\r\n\r\n    getMovies = (keywordId) => {\r\n        const {page} = this.state;\r\n\r\n        this.onToogleLoading();\r\n\r\n        this.moviesServices.getMovieByKeyword(this.props.keywordId, page + 1)\r\n            .then((response) => {\r\n                this.onLoadingMovies(response.results, response.total_results, response.total_pages)\r\n            })\r\n    }\r\n\r\n    getKeywordName = (keywordId) => {\r\n        this.moviesServices.getKeywordName(this.props.keywordId)\r\n            .then((response) => {\r\n                this.onLoadingKeywordName(response.name)\r\n            })\r\n    }\r\n\r\n    onLoadingKeywordName = (response) => {\r\n        this.setState({\r\n            keywordName: response\r\n        })\r\n    }\r\n\r\n    onToogleLoading = () => {\r\n        this.setState({\r\n            loadingMore: true\r\n        })\r\n    }\r\n\r\n    showButton = () => {\r\n        const {loadingMore, totalPages} = this.state;\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n        if (totalPages > 1) {\r\n            return (\r\n                <ButtonWrapper>\r\n                    <LoadMoreButton onClick={ () => this.getMovies()}>\r\n                        {loadSpinner}\r\n                    </LoadMoreButton>\r\n                </ButtonWrapper>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, totalResults, keywordName} = this.state;\r\n        const {history} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else  {\r\n            return (\r\n                <>               \r\n                    <MovieListWrapper>\r\n                        <MovieListByKeywords \r\n                            movies={movies} \r\n                            totalResults={totalResults} \r\n                            keywordName={keywordName}\r\n                            history={history}\r\n                        />\r\n                    </MovieListWrapper>\r\n                    {this.showButton()}         \r\n                </>\r\n            ) \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CastTitle = styled.div`\r\n    font-size: 1.15em;\r\n    font-family: Arial;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst CastNumber = styled.span`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst CastItemImg = styled.img`\r\n    width: 66px;\r\n    height: 66px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: 1em;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 0.9em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastContent = styled.div`\r\n    border-bottom: ${props => props.width < 415 ? '1px solid #d7d7d7;' : 'none'};\r\n    padding-bottom: ${props => props.width < 415 ? '20px' : '0'};\r\n`;\r\n\r\nconst DepartmentTitle = styled.div`\r\n    margin: 20px 0 8px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Actors = ({casts, history, width}) => {\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.map((item, index) => {\r\n        const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastItemImg \r\n                    alt={item.name} \r\n                    src={src} \r\n                    onClick={() => history.push(`/person/${item.id}`)}\r\n                />\r\n                <CastNameWrapper>\r\n                    <CastName \r\n                        onClick={() => history.push(`/person/${item.id}`)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastNameWrapper>\r\n            </CastItemWrapper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Актёрский состав <CastNumber>{cast.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent width={width}>\r\n                {castItem}\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Crew = ({casts, history, width}) => {\r\n\r\n    const {crew} = casts;\r\n\r\n    const CrewDepartment = ({department}) => {\r\n        const crewItem = crew.map((item, index) => {\r\n            const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            if (item.department === department) {\r\n                return (\r\n                    <CastItemWrapper key={index}>\r\n                        <CastItemImg \r\n                            alt={item.name} \r\n                            src={src} \r\n                            onClick={() => {history.push(`/person/${item.id}`)}}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName \r\n                                onClick={() => {history.push(`/person/${item.id}`)}}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.job}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        return crewItem;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Съёмочный состав <CastNumber>{crew.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                <DepartmentTitle>Оформление</DepartmentTitle>\r\n                <CrewDepartment department={'Art'}/>\r\n                <DepartmentTitle>Камера</DepartmentTitle>\r\n                <CrewDepartment department={'Camera'}/>\r\n                <DepartmentTitle>Костюмы и грим</DepartmentTitle>\r\n                <CrewDepartment department={'Costume & Make-Up'}/>\r\n                <DepartmentTitle>Ещё</DepartmentTitle>\r\n                <CrewDepartment department={'Crew'}/>\r\n                <DepartmentTitle>Режиссура</DepartmentTitle>\r\n                <CrewDepartment department={'Directing'}/>\r\n                <DepartmentTitle>Монтаж</DepartmentTitle>\r\n                <CrewDepartment department={'Editing'}/>\r\n                <DepartmentTitle>Свет</DepartmentTitle>\r\n                <CrewDepartment department={'Lighting'}/>\r\n                <DepartmentTitle>Продакшн</DepartmentTitle>\r\n                <CrewDepartment department={'Production'}/>\r\n                <DepartmentTitle>Звук</DepartmentTitle>\r\n                <CrewDepartment department={'Sound'}/>\r\n                <DepartmentTitle>Визуальные эффекты</DepartmentTitle>\r\n                <CrewDepartment department={'Visual Effects'}/>\r\n                <DepartmentTitle>Сценарий</DepartmentTitle>\r\n                <CrewDepartment department={'Writing'}/>\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {Actors, Crew};","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport moment from 'moment';\r\nimport {Actors, Crew} from './components/fullCastList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded} from '../../actions/actionsMovieDetailsPage/actionMovieDetailsPage';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 0;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1110px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: ${props => props.width < 415 ? '0 20px' : '0'};\r\n`;\r\n\r\nconst MovieName = styled.div`\r\n    font-size: 1.6em;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieReleaseYear = styled.span`\r\n    font-size: 0.8em;\r\n    font-weight: 400;\r\n    opacity: 0.8;\r\n    color: #fff;\r\n`;\r\n\r\nconst MoviePosterImg = styled.img`\r\n    width: 58px;\r\n    height: 87px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieContent = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst ButtonBack = styled.div`\r\n    cursor: pointer;\r\n    font-size: 1.1em;\r\n    font-weight: 600;\r\n    opacity: 0.6;\r\n    color: #fff;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    & i {\r\n        padding-right: 6px;\r\n    }\r\n`;\r\n\r\nclass FullCast extends Component {\r\n    componentWillMount() {\r\n        const {movieId, history, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n  \r\n        if (pathname.includes('tv')) {\r\n            movieDetailsRequested()\r\n            castRequested()\r\n            this.getCast(movieId, MoviesService.getTVCasts);\r\n            this.getDetails(movieId, MoviesService.getTVDetails);\r\n        } else {\r\n            movieDetailsRequested()\r\n            castRequested()\r\n            this.getCast(movieId, MoviesService.getCast);\r\n            this.getDetails(movieId, MoviesService.getMovieDetails);\r\n        }\r\n        \r\n    }\r\n \r\n    getCast = (movieId, request) => {\r\n        const {castLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getDetails = (movieId, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => movieDetailsLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    onGoBack = () => { \r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n\r\n        const {casts, loadingCast, history, details, width} = this.props;\r\n        const releaseYear = moment(details.first_air_date || details.release_date).format('YYYY');\r\n        const src = !details.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w58_and_h87_face' + details.poster_path);\r\n        \r\n        if (loadingCast) {\r\n            return <Spinner/>\r\n        } else {\r\n            return (\r\n                <>\r\n                    <HeaderWrapper>\r\n                        <Header width={width}>\r\n                            <MoviePosterImg src={src} alt={details.name || details.title} onClick={this.onGoBack}/>\r\n                            <MovieContent>\r\n                                <MovieName onClick={this.onGoBack}>{details.name || details.title}\r\n                                    <MovieReleaseYear> ({releaseYear})</MovieReleaseYear>\r\n                                </MovieName>  \r\n                                <ButtonBack\r\n                                    onClick={this.onGoBack}\r\n                                > <i className=\"fas fa-arrow-left\"></i> Назад на главную</ButtonBack>\r\n                            </MovieContent>\r\n                        </Header>\r\n                    </HeaderWrapper>\r\n                    <Container>\r\n                        <Row className='flex-xl-row flex-lg-row flex-column '>\r\n                            <Col className='py-3'>\r\n                                <Actors casts={casts} history={history} width={width}/>\r\n                            </Col>\r\n                            <Col className='py-3'>\r\n                                <Crew casts={casts} history={history} width={width}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, casts, loadingCast} = state.movieDetailsReducer;\r\n\r\n    return {\r\n        details: movieDetails,\r\n        casts,\r\n        loadingCast\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(FullCast));","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport MoviesServices from '../../../services/services';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MovieListItemWrapper = styled.div`\r\n    border-bottom: ${props => !props.hasBorder ? '1px solid rgb(227, 227, 227)' : 'none'};\r\n    font-size: 16px;\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`   \r\n    font-weight: 400;\r\n    padding: 8px 16px;\r\n    width: 70px;\r\n    text-align: center;\r\n`;\r\n\r\nconst MovieTitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    white-space: pre-wrap;\r\n    padding: 8px 0 8px 16px;\r\n`;\r\n\r\nconst MovieTitle = styled.span`\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    \r\n`;\r\n\r\nconst LikeCharacter = styled.span`\r\n    opacity: 0.5;\r\n`;\r\n\r\nconst Character = styled.span`\r\n    opacity: 0.8;\r\n`;\r\n\r\nconst MoviePreviewButton = styled.div`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    border: 1px solid #000;\r\n    cursor: pointer;\r\n    position: relative;\r\n    display: ${props => props.width < 415 ? 'none' : 'block'};\r\n\r\n    .popover-body {\r\n        width: 535px;\r\n        background-color: rgb(3, 37, 65);\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        cursor: default;\r\n        padding: 13px;\r\n    }\r\n\r\n    .bs-popover-top > .arrow::after, .bs-popover-auto[x-placement^=\"top\"] > .arrow::after{\r\n        border-top-color: rgb(3, 37, 65);\r\n    }\r\n`;\r\n\r\nconst CircleHover = styled.div`\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #000;\r\n    opacity: ${(props) => props.show ? 1 : 0};\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst PopoverImgWrapper = styled.div``;\r\n\r\nconst PopoverPoster = styled.img`\r\n    width: 94px;\r\n    height: 141px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverContentWrapper = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst PopoverTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst PopoverTitle = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverDescription = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 21.6px;\r\n`;\r\n\r\nconst PopoverRate = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    padding: 4px 8px;\r\n    font-size: 14.4px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-left: 10px;\r\n\r\n    & i {\r\n        font-size: 10px;\r\n        margin-right: 3px;\r\n    }\r\n`;\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: ${props => props.width < 415 ? '0 15px' : '0'};\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n\r\n    &:hover {\r\n        color:rgb(30, 213, 169);\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PersonDetailsCasts = ({cast, width}) => {\r\n    const [castItem, setCastItem] = useState([]);\r\n    const [filterSelected, setFilterSelected] = useState(false);\r\n    const noDateCasts = cast.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCasts = cast.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCast = releaseDateCasts.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n\r\n    const allCasts = [...noDateCasts, ...sortedCast];\r\n\r\n    const filteredByMovieType = allCasts.filter(item => item.media_type === 'movie');\r\n    const filteredByTVType = allCasts.filter(item => item.media_type === 'tv');\r\n    const movieQuantity = filteredByMovieType.length;\r\n    const tvQuantity = filteredByTVType.length;\r\n    const movies = (casts) => {\r\n        return casts.map((item, index, arr) => {\r\n            if (item.title || item.name) {\r\n                const releaseDate = item.release_date || item.first_air_date;\r\n                const fullDateToYear = moment(releaseDate).format('YYYY');\r\n                const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n                let current;\r\n                let next;\r\n                if (index > 0) {\r\n                    current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                    next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n                }\r\n                return (\r\n                    <HistoryItem key={index} cast={item} date={date} hasBorder={next === current} width={width}/>  \r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n    }, []);\r\n\r\n    const onSelect = (content) => {\r\n        const data = movies(content)\r\n        setCastItem(data)\r\n        setFilterSelected(true)\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n        setFilterSelected(false)\r\n    }\r\n\r\n    const clearButton = filterSelected ? <ClearButton onClick={clearFilter}>Очистить</ClearButton> : null;\r\n\r\n    return (\r\n        <>\r\n            <MovieListWrapper>\r\n                <DepartmentListTitle width={width}>\r\n                    Актёрское искусство\r\n                    <FilterWrapper>\r\n                        {clearButton}\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Все\">\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByMovieType)}>Фильмы {movieQuantity}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByTVType)}>ТВ Сериалы {tvQuantity}</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </FilterWrapper>\r\n                </DepartmentListTitle>\r\n                <MovieListContent>\r\n                    {castItem}\r\n                </MovieListContent>\r\n            </MovieListWrapper>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst HistoryItem = ({cast, date, hasBorder, width}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = cast.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + cast.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = cast.vote_average.toFixed(1);\r\n    const tvEpisodes = cast.episode_count ? `(${cast.episode_count} эпизодов)` : null;\r\n  \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n            <ReleaseDate>{date}</ReleaseDate>\r\n            <MoviePreviewButton \r\n                ref={ref}\r\n                onClick={handleClick}\r\n                width={width}\r\n            >\r\n                    <CircleHover show={show}></CircleHover>  \r\n            </MoviePreviewButton>\r\n                <Overlay \r\n                    show={show}\r\n                    target={target}\r\n                    container={ref.current}\r\n                    rootClose={true}\r\n                    onHide={handleClick}\r\n                >\r\n                    <Popover>\r\n                        <Popover.Content>\r\n                            <PopoverImgWrapper>\r\n                                <PopoverPoster \r\n                                    src={src} \r\n                                    alt={cast.title || cast.name} \r\n                                    onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                />\r\n                            </PopoverImgWrapper>\r\n                            <PopoverContentWrapper>\r\n                                <PopoverTitleWrapper>\r\n                                    <PopoverTitle\r\n                                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                    >{cast.title || cast.name}</PopoverTitle>\r\n                                    <PopoverRate>\r\n                                        <i className=\"fas fa-star\"></i> {rate}\r\n                                    </PopoverRate>\r\n                                </PopoverTitleWrapper> \r\n                                <PopoverDescription>{textEllipsis(cast.overview, 96)}</PopoverDescription>    \r\n                            </PopoverContentWrapper>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n                <MovieTitleWrapper>\r\n                    <MovieTitle\r\n                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                    >\r\n                        {cast.title || cast.name}\r\n                    </MovieTitle>\r\n                    <LikeCharacter> {tvEpisodes} как </LikeCharacter>\r\n                    <Character>{cast.character}</Character>\r\n                </MovieTitleWrapper>\r\n        </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\nexport default PersonDetailsCasts;\r\nexport {CircleHover, MovieTitleWrapper, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate};","import React, {useState} from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport {CircleHover, MovieTitleWrapper, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate} from './personDetailsCasts';\r\nimport MoviesServices from '../../../services/services';\r\n\r\n\r\n\r\nconst PersonDetailsCrew = ({crew, width}) => {\r\n    const noDateCrew = crew.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCrew = crew.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCrew = releaseDateCrew.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n    \r\n    const allCrews = [...noDateCrew, ...sortedCrew];\r\n    \r\n    const crewItem = allCrews.map((item, index, arr) => {\r\n        if (item.title || item.name) {\r\n            const releaseDate = item.release_date || item.first_air_date;\r\n            const fullDateToYear = moment(releaseDate).format('YYYY');\r\n            const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n            let current;\r\n            let next;\r\n            if (index > 0) {\r\n                current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n            }\r\n            return (\r\n                <HistoryItem key={index} item={item} date={date} hasBorder={next === current} width={width}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return crewItem;\r\n}\r\n\r\n\r\nconst HistoryItem = ({item, date, hasBorder, width}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = item.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = item.vote_average.toFixed(1);\r\n    const tvEpisodes = item.episode_count ? `(${item.episode_count} эпизодов)` : null;\r\n    \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n                <ReleaseDate>{date}</ReleaseDate>\r\n                <MoviePreviewButton \r\n                    ref={ref}\r\n                    onClick={handleClick}\r\n                    width={width}\r\n                >\r\n                    <CircleHover show={show}></CircleHover>  \r\n                </MoviePreviewButton>\r\n                    <Overlay \r\n                        show={show}\r\n                        target={target}\r\n                        container={ref.current}\r\n                        rootClose={true}\r\n                        onHide={handleClick}\r\n                    >\r\n                        <Popover>\r\n                            <Popover.Content>\r\n                                <PopoverImgWrapper>\r\n                                    <PopoverPoster \r\n                                        src={src} \r\n                                        alt={item.title || item.name} \r\n                                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                                    />\r\n                                </PopoverImgWrapper>\r\n                                <PopoverContentWrapper>\r\n                                    <PopoverTitleWrapper>\r\n                                        <PopoverTitle\r\n                                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                                        >{item.title || item.name}</PopoverTitle>\r\n                                        <PopoverRate>\r\n                                            <i className=\"fas fa-star\"></i> {rate}\r\n                                        </PopoverRate>\r\n                                    </PopoverTitleWrapper> \r\n                                    <PopoverDescription>{textEllipsis(item.overview, 96)}</PopoverDescription>    \r\n                                </PopoverContentWrapper>\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    </Overlay>\r\n                    <MovieTitleWrapper>\r\n                        <MovieTitle\r\n                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                        >{item.title || item.name}</MovieTitle>\r\n                        <LikeCharacter> {tvEpisodes} ... </LikeCharacter>\r\n                        <Character>{item.job}</Character>\r\n                    </MovieTitleWrapper>\r\n            </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\n\r\nexport default PersonDetailsCrew;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PersonDetailsCrew from './personDetailsCrew';\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    padding: ${props => props.width < 415 ? '0 15px' : '0'};\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst CrewByDepartments = ({crew, width}) => {\r\n\r\n    const filteredCrew = (department) => {\r\n        return crew.filter(item => item.department === department);\r\n    }\r\n\r\n    const production = !filteredCrew(\"Production\").length ? null : <Department crew={filteredCrew(\"Production\")} width={width}/>;\r\n    const writing = !filteredCrew(\"Writing\").length ? null : <Department crew={filteredCrew(\"Writing\")} width={width}/>;\r\n    const art = !filteredCrew(\"Art\").length ? null : <Department crew={filteredCrew(\"Art\")} width={width}/>;\r\n    const camera = !filteredCrew(\"Camera\").length ? null : <Department crew={filteredCrew(\"Camera\")} width={width}/>;\r\n    const makeUp = !filteredCrew(\"Costume & Make-Up\").length ? null : <Department crew={filteredCrew(\"Costume & Make-Up\")} width={width}/>;\r\n    const crews = !filteredCrew(\"Crew\").length ? null : <Department crew={filteredCrew(\"Crew\")} width={width}/>;\r\n    const directing = !filteredCrew(\"Directing\").length ? null : <Department crew={filteredCrew(\"Directing\")} width={width}/>;\r\n    const editing = !filteredCrew(\"Editing\").length ? null : <Department crew={filteredCrew(\"Editing\")} width={width}/>;\r\n    const lighting = !filteredCrew(\"Lighting\").length ? null : <Department crew={filteredCrew(\"Lighting\")} width={width}/>;\r\n    const sound = !filteredCrew(\"Sound\").length ? null : <Department crew={filteredCrew(\"Sound\")} width={width}/>;\r\n    const visualEffects = !filteredCrew(\"Visual Effects\").length ? null : <Department crew={filteredCrew(\"Visual Effects\")} width={width}/>;\r\n\r\n    return (\r\n        <MovieListWrapper>\r\n            {production}\r\n            {writing}\r\n            {art}\r\n            {camera}\r\n            {makeUp}\r\n            {crews}\r\n            {directing}\r\n            {editing}\r\n            {lighting}\r\n            {sound}\r\n            {visualEffects}\r\n        </MovieListWrapper>\r\n    )\r\n}\r\n\r\nconst Department = ({crew, width}) => {\r\n    return (\r\n        <>\r\n            <DepartmentListTitle width={width}>\r\n                {crew[0].department}\r\n            </DepartmentListTitle>\r\n            <MovieListContent>\r\n                <PersonDetailsCrew crew={crew} width={width}/>\r\n            </MovieListContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrewByDepartments;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { PersonDetailsCasts, CrewByDepartments } from \"./index\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport MoviesServices from \"../../../services/services\";\r\nimport {\r\n    Overlay,\r\n    LinkIconWrapper,\r\n    Link,\r\n} from \"../../moviesPage/components/movieDetailsPage/components/originalDetails\";\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ImgWrapper = styled.img`\r\n    width: 300px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n    max-width: 890px;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`;\r\n\r\nconst BioWrapper = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n    margin: 30px 0;\r\n`;\r\n\r\nconst BioContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    height: ${(props) => (props.mainHeight && props.childRef > 200 ? \"200px\" : \"auto\")};\r\n    overflow: hidden;\r\n    transition: height 200ms;\r\n    text-align: justify;\r\n\r\n    &.open {\r\n        height: ${(props) => props.childRef + \"px\"};\r\n    }\r\n`;\r\n\r\nconst PersonalInfo = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n    margin-top: 15px;\r\n`;\r\n\r\nconst PersonalInfoItemTitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst PersonalInfoItemSubtitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst AlsoKnowWrapper = styled.div`\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ReadMoreButton = styled.button`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${(props) => (props.mainHeight && props.childRef > 200 ? \"flex\" : \"none\")};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228);\r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PersonDetails = ({ person, cast, crew, socialLink, history }) => {\r\n    const { facebook_id, instagram_id, twitter_id } = socialLink;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n    const {\r\n        profile_path,\r\n        biography,\r\n        name,\r\n        gender,\r\n        also_known_as,\r\n        birthday,\r\n        deathday,\r\n        known_for_department,\r\n        place_of_birth,\r\n    } = person;\r\n\r\n    const onOpen = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight);\r\n    };\r\n    const classNames = isOpen ? \"open\" : \"\";\r\n    const src = !profile_path\r\n        ? process.env.PUBLIC_URL + \"/assets/avatar.png\"\r\n        : \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" + profile_path;\r\n    const personBiography = !biography ? (\r\n        `У нас нет биографии для ${name}`\r\n    ) : (\r\n        <div ref={(element) => getElementHeight(element)}>{biography}</div>\r\n    );\r\n    const placeOfBirth = place_of_birth ? place_of_birth : \"-\";\r\n    const personGender = gender === 1 ? \"Женский\" : \"Мужской\";\r\n    const alsoKnow = also_known_as.length ? also_known_as.map((item, index) => {\r\n        return <AlsoKnowWrapper key={index}>{item}</AlsoKnowWrapper>;\r\n    }) : <AlsoKnowWrapper>-</AlsoKnowWrapper>;\r\n    const personBirthday = birthday ? birthday : \"-\";\r\n    const ageAlive = !birthday ? \" \" : deathday ? null : `(${moment().diff(`${birthday}`, \"years\")} лет)`;\r\n    const ageDead = moment([deathday]).diff(moment([birthday]), \"years\");\r\n    const dateOfDeath = !deathday ? null : (\r\n        <PersonalInfoItemTitle>\r\n            Дата смерти\r\n            <PersonalInfoItemSubtitle>\r\n                {deathday} ({ageDead} лет)\r\n            </PersonalInfoItemSubtitle>\r\n        </PersonalInfoItemTitle>\r\n    );\r\n    const acting = cast.length ? <PersonDetailsCasts cast={cast} /> : null;\r\n    const filmCrew = crew.length ? <CrewByDepartments crew={crew} /> : null;\r\n    const famousCast = cast.length ? <FamousCast cast={cast} history={history} /> : null;\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={\"Facebook\"} /> : null;\r\n    const overlayTwitter = twitter_id ? <Overlay logo={twitter} page={\"Twitter\"} /> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={\"Instagram\"} /> : null;\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col className=\"col-4 pb-4\">\r\n                    <ImgWrapper src={src} alt={name} />\r\n                    <LinkIconWrapper>\r\n                        {overlayFacebook}\r\n                        {overlayTwitter}\r\n                        {overlayInstagram}\r\n                    </LinkIconWrapper>\r\n                    <PersonalInfo>Персональная информация</PersonalInfo>\r\n                    <PersonalInfoItemTitle>\r\n                        Известность за\r\n                        <PersonalInfoItemSubtitle>{known_for_department}</PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    <PersonalInfoItemTitle>\r\n                        Пол\r\n                        <PersonalInfoItemSubtitle>{personGender}</PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    <PersonalInfoItemTitle>\r\n                        Дата рождения\r\n                        <PersonalInfoItemSubtitle>\r\n                            {personBirthday} {ageAlive}\r\n                        </PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    {dateOfDeath}\r\n                    <PersonalInfoItemTitle>\r\n                        Место рождения\r\n                        <PersonalInfoItemSubtitle>{placeOfBirth}</PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    <PersonalInfoItemTitle>\r\n                        Также известность как\r\n                        <PersonalInfoItemSubtitle>{alsoKnow}</PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                </Col>\r\n                <Col className=\"col-8\">\r\n                    <DescriptionWrapper>\r\n                        <TitleWrapper>{name}</TitleWrapper>\r\n                        <BioWrapper>\r\n                            Биография\r\n                            <BioContent className={classNames} childRef={elementHeight} mainHeight={person.biography}>\r\n                                {personBiography}\r\n                            </BioContent>\r\n                            <ReadMoreButton childRef={elementHeight} mainHeight={biography} onClick={onOpen}>\r\n                                Читать ещё <i className=\"fas fa-chevron-right\"></i>\r\n                            </ReadMoreButton>\r\n                        </BioWrapper>\r\n                    </DescriptionWrapper>\r\n                    {famousCast}\r\n                    {acting}\r\n                    {filmCrew}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst FamousCast = ({ cast, history }) => {\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n\r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id).then((res) => {\r\n            if (res && res.status_code === 34) {\r\n                history.push(`/collection/${id}`);\r\n            } else {\r\n                history.push(`/${type}/${id}`);\r\n            }\r\n        });\r\n    };\r\n\r\n    let carousel;\r\n\r\n    const castSortedByPopularity = cast\r\n        .filter((item) => item.media_type === \"movie\")\r\n        .sort((a, b) => b.popularity - a.popularity)\r\n        .filter((item, index) => index <= 7);\r\n\r\n    const castItem = castSortedByPopularity.map((item, index) => {\r\n        let src = item.poster_path\r\n            ? \"https://image.tmdb.org/t/p/w150_and_h225_bestv2\" + item.poster_path\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastImg\r\n                    src={src}\r\n                    alt={item.name || item.title}\r\n                    onClick={() => handleRouting(item.id, item.media_type)}\r\n                />\r\n                <CastName onClick={() => handleRouting(item.id, item.media_type)}>\r\n                    <EllipsisText text={item.name || item.title} length={13} />\r\n                </CastName>\r\n            </CastItemWrapper>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <CastTitle>Известность за</CastTitle>\r\n            <Carousel\r\n                renderArrow={myArrow}\r\n                itemsToScroll={1}\r\n                itemsToShow={5}\r\n                focusOnSelect={false}\r\n                ref={(ref) => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    );\r\n};\r\n\r\nexport default PersonDetails;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport {\r\n    Overlay,\r\n    Link,\r\n} from \"../../../moviesPage/components/movieDetailsPage/components/originalDetails\";\r\nimport { PersonDetailsCasts, CrewByDepartments } from '../index';\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    min-width: 40vw;\r\n    width: 40vw;\r\n    height: 40vw;\r\n    margin: 0 auto 15px;\r\n\r\n    & img {\r\n        border-radius: 7px;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n    font-size: 2em;\r\n    font-weight: 700;\r\n    text-align: center;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1.3em;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst SectionSubTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n    margin-bottom: 7px;\r\n\r\n    & div {\r\n        font-weight: 400;\r\n    }\r\n`;\r\n\r\nconst BiographyWrapper = styled.div`\r\n            height: ${props =>\r\n            props.mainHeight && props.childRef > 200 ? \"200px\" : \"auto\"};\r\n        overflow: hidden;\r\n        transition: height 200ms;\r\n\r\n        &.open {\r\n            height: ${(props) => props.childRef + \"px\"};\r\n        }\r\n        \r\n`;\r\n\r\nconst ReadMoreButton = styled.div`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${(props) =>\r\n        props.mainHeight && props.childRef > 200 ? \"flex\" : \"none\"};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228);\r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 5%;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: none;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 95%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst PersonDetailsMobile = ({ person, cast, crew, socialLink, MoviesService, history, width }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n\r\n    const onOpen = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight);\r\n    };\r\n    const classNames = isOpen ? \"open\" : \"\";\r\n\r\n    const {\r\n        known_for_department,\r\n        birthday,\r\n        deathday,\r\n        name,\r\n        gender,\r\n        biography,\r\n        place_of_birth, \r\n        profile_path\r\n    } = person;\r\n\r\n    const src = profile_path ? `//image.tmdb.org/t/p/w235_and_h235_face${profile_path}` : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n    const placeOfBirth = place_of_birth ? place_of_birth : \"-\";\r\n    const personGender = gender === 1 ? \"Женский\" : \"Мужской\";\r\n    const personBirthday = birthday ? birthday : \"-\";\r\n    const ageAlive = !birthday ? \" \" : deathday ? null\r\n        : `(${moment().diff(`${birthday}`, \"years\")} лет)`;\r\n\r\n    const ageDead = moment([deathday]).diff(moment([birthday]),\"years\");\r\n    const dateOfDeath = !deathday ? null : (\r\n        <SectionSubTitle>\r\n            Дата смерти\r\n            <div>\r\n                {deathday} ({ageDead} лет)\r\n            </div>\r\n        </SectionSubTitle>\r\n    );\r\n    const personBiography = !biography ? (\r\n        `У нас нет биографии для ${name}`\r\n    ) : (\r\n        <div ref={(element) => getElementHeight(element)}>\r\n            {biography}\r\n        </div>\r\n    );\r\n\r\n    const { facebook_id, instagram_id, twitter_id } = socialLink;\r\n\r\n    const facebook = (\r\n        <Link\r\n            href={`https://www.facebook.com/${facebook_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link\r\n            href={`https://twitter.com/${twitter_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link\r\n            href={`https://www.instagram.com/${instagram_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? (\r\n        <Overlay logo={facebook} page={\"Facebook\"} />\r\n    ) : null;\r\n    const overlayTwitter = twitter_id ? (\r\n        <Overlay logo={twitter} page={\"Twitter\"} />\r\n    ) : null;\r\n    const overlayInstagram = instagram_id ? (\r\n        <Overlay logo={instagram} page={\"Instagram\"} />\r\n    ) : null;\r\n\r\n    const famousCast = cast.length ? <FamousCast cast={cast} history={history} MoviesService={MoviesService} /> : null;\r\n    const acting = cast.length ? <PersonDetailsCasts cast={cast} width={width} /> : null;\r\n    const filmCrew = crew.length ? <CrewByDepartments crew={crew} width={width}/> : null;\r\n\r\n    return (\r\n        <Container className='mt-4'>\r\n            <Row>\r\n                <Col className=\"px-0\">\r\n                    <PosterWrapper>\r\n                        <img src={src} alt={name}/>\r\n                    </PosterWrapper>\r\n                    <NameWrapper>\r\n                        {name}\r\n                    </NameWrapper>\r\n                    <LinkIconWrapper>\r\n                        {overlayFacebook}\r\n                        {overlayTwitter}\r\n                        {overlayInstagram}\r\n                    </LinkIconWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className='mt-4'>\r\n                <Col>\r\n                    <SectionTitle>\r\n                        Персональная информация\r\n                    </SectionTitle>\r\n                    <SectionSubTitle>\r\n                        Известность за\r\n                        <div>{known_for_department}</div>\r\n                    </SectionSubTitle>\r\n                    <SectionSubTitle>\r\n                        Пол\r\n                        <div>{personGender}</div>\r\n                    </SectionSubTitle>\r\n                    <SectionSubTitle>\r\n                        Дата рождения\r\n                        <div>{personBirthday} {ageAlive}</div>\r\n                    </SectionSubTitle>\r\n                    {dateOfDeath}\r\n                    <SectionSubTitle>\r\n                        Место рождения\r\n                        <div>{placeOfBirth}</div>\r\n                    </SectionSubTitle>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <SectionTitle>\r\n                        Биография\r\n                    </SectionTitle>\r\n                    <SectionSubTitle>\r\n                        <BiographyWrapper\r\n                            className={classNames}\r\n                            childRef={elementHeight}\r\n                            mainHeight={biography}\r\n                        >\r\n                            {personBiography}\r\n                        </BiographyWrapper>\r\n                        <ReadMoreButton\r\n                            childRef={elementHeight}\r\n                            mainHeight={biography}\r\n                            onClick={onOpen}\r\n                        >\r\n                            Читать ещё{\" \"}\r\n                            <i className=\"fas fa-chevron-right\"></i>\r\n                        </ReadMoreButton>\r\n                    </SectionSubTitle>\r\n                </Col>\r\n            </Row>\r\n            <Row className='mt-4'>\r\n                <Col>\r\n                    {famousCast}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className='px-0'>\r\n                    {acting}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className='px-0'>\r\n                    {filmCrew}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst FamousCast = ({ cast, history, MoviesService }) => {\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id).then((res) => {\r\n            if (res && res.status_code === 34) {\r\n                history.push(`/collection/${id}`);\r\n            } else {\r\n                history.push(`/${type}/${id}`);\r\n            }\r\n        });\r\n    };\r\n\r\n    let carousel;\r\n\r\n    const castSortedByPopularity = cast\r\n    .filter((item) => item.media_type === \"movie\")\r\n    .sort((a, b) => b.popularity - a.popularity)\r\n    .filter((item, index) => index <= 7);\r\n\r\n    const castItem = castSortedByPopularity\r\n        .filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.poster_path\r\n                ? \"//image.tmdb.org/t/p/w150_and_h225_bestv2\" +\r\n                  item.poster_path\r\n                : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg\r\n                        src={src}\r\n                        alt={item.name || item.title}\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    >\r\n                        <EllipsisText\r\n                            text={item.name || item.title}\r\n                            length={13}\r\n                        />\r\n                    </CastName>\r\n                </CastItemWrapper>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitle>Известность за</SectionTitle>\r\n            <Carousel\r\n                renderArrow={myArrow}\r\n                itemsToScroll={2}\r\n                itemsToShow={2}\r\n                focusOnSelect={false}\r\n                ref={(ref) => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    );\r\n};\r\n\r\nexport default PersonDetailsMobile;\r\n","export const PERSON_BIOGRAPHY_REQUESTED = 'PERSON_BIOGRAPHY_REQUESTED';\r\nexport const PERSON_BIOGRAPHY_LOADED = 'PERSON_BIOGRAPHY_LOADED';\r\nexport const PERSON_BIOGRAPHY_ERROR = 'PERSON_BIOGRAPHY_ERROR';\r\n\r\nexport const PERSON_SOCIAL_LINK_REQUESTED = 'PERSON_SOCIAL_LINK_REQUESTED';\r\nexport const PERSON_SOCIAL_LINK_LOADED = 'PERSON_SOCIAL_LINK_LOADED';\r\nexport const PERSON_SOCIAL_LINK_ERROR = 'PERSON_SOCIAL_LINK_ERROR';","import React, { Component } from \"react\";\r\nimport Spinner from \"../shared/spinner/spinner\";\r\nimport { PersonDetails } from \"./components\";\r\nimport PersonDetailsMobile from \"./components/componentsMobile/personDetailsMob\";\r\nimport WithMoviesService from \"../hoc/withMoviesService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    personBiographyRequested,\r\n    personBiographyLoaded,\r\n    personBiographyError,\r\n    personSocialLinkRequested,\r\n    personSocialLinkLoaded,\r\n    personSocialLinkError,\r\n} from \"../../actions/actionsPersonDetailsPage/actionPersonDetailsPage\";\r\n\r\nclass PersonBiography extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            personId,\r\n            personBiographyRequested,\r\n            personSocialLinkRequested,\r\n        } = this.props;\r\n\r\n        personBiographyRequested();\r\n        personSocialLinkRequested();\r\n        this.getBiography(personId);\r\n        this.getPersonSocailLink(personId);\r\n    }\r\n\r\n    getBiography = (personId) => {\r\n        const {\r\n            MoviesService,\r\n            personBiographyLoaded,\r\n            personBiographyError,\r\n        } = this.props;\r\n\r\n        MoviesService.getPersonBiography(personId)\r\n            .then((response) => {\r\n                const payload = {\r\n                    person: response.biography,\r\n                    cast: response.combinedMoviesTv.cast,\r\n                    crew: response.combinedMoviesTv.crew,\r\n                };\r\n                personBiographyLoaded(payload);\r\n            })\r\n            .catch((error) => personBiographyError());\r\n    };\r\n\r\n    getPersonSocailLink = (personId) => {\r\n        const {\r\n            MoviesService,\r\n            personSocialLinkLoaded,\r\n            personSocialLinkError,\r\n        } = this.props;\r\n\r\n        MoviesService.getPersonExternalIds(personId)\r\n            .then((response) => personSocialLinkLoaded(response))\r\n            .catch((error) => personSocialLinkError());\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            person,\r\n            loading,\r\n            cast,\r\n            crew,\r\n            socialLink,\r\n            socialLinkLoading,\r\n            width,\r\n            history,\r\n            MoviesService\r\n        } = this.props;\r\n\r\n        if (loading || socialLinkLoading) {\r\n            return <Spinner />;\r\n        } else if (width < 415) {\r\n            return (\r\n                <PersonDetailsMobile \r\n                    person={person}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    socialLink={socialLink}\r\n                    history={history}\r\n                    MoviesService={MoviesService}\r\n                    width={width}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <PersonDetails\r\n                    person={person}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    socialLink={socialLink}\r\n                    history={history}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        person,\r\n        loading,\r\n        cast,\r\n        crew,\r\n        socialLink,\r\n        socialLinkLoading,\r\n    } = state.personDetailsPageReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        cast,\r\n        crew,\r\n        socialLink,\r\n        socialLinkLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    personBiographyRequested,\r\n    personBiographyLoaded,\r\n    personBiographyError,\r\n    personSocialLinkRequested,\r\n    personSocialLinkLoaded,\r\n    personSocialLinkError,\r\n};\r\n\r\nexport default WithMoviesService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(PersonBiography)\r\n);\r\n","import * as actionTypes from './actionTypesPersonDetailsPage';\r\n\r\nconst personBiographyRequested = () => {\r\n    return {\r\n        type: actionTypes.PERSON_BIOGRAPHY_REQUESTED\r\n    }\r\n}\r\n\r\nconst personBiographyLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PERSON_BIOGRAPHY_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst personBiographyError = () => {\r\n    return {\r\n        type: actionTypes.PERSON_BIOGRAPHY_ERROR\r\n    }\r\n}\r\n\r\nconst personSocialLinkRequested = () => {\r\n    return {\r\n        type: actionTypes.PERSON_SOCIAL_LINK_REQUESTED\r\n    }\r\n}\r\n\r\nconst personSocialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PERSON_SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst personSocialLinkError = () => {\r\n    return {\r\n        type: actionTypes.PERSON_SOCIAL_LINK_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    personBiographyRequested,\r\n    personBiographyLoaded,\r\n    personBiographyError,\r\n    personSocialLinkRequested,\r\n    personSocialLinkLoaded,\r\n    personSocialLinkError\r\n}","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularTvRequested, popularTvLoaded, popularTvError, popularTvMoreRequested, popularTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass TVPopularPage extends Component {   \r\n    componentWillMount() { \r\n        if(!this.props.tv.length) {\r\n            this.props.popularTvRequested();\r\n            this.loadTV(this.props.popularTvLoaded)\r\n        }      \r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTv = () => {\r\n        const {page, popularTvMoreRequested, popularTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        popularTvMoreRequested();\r\n        this.loadTV(popularTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTv}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularTv, popularPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: popularTv,\r\n        page: popularPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVPopularPage));\r\n","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {airingTodayTvRequested, airingTodayTvLoaded, popularTvError, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass AiringTodayPage extends Component {\r\n    componentWillMount() {\r\n        if (!this.props.tv.length) {\r\n            this.props.airingTodayTvRequested();\r\n            this.loadTV(this.props.airingTodayTvLoaded);\r\n        }\r\n     }\r\n \r\n     loadTV = (success) => {\r\n         const {page, MoviesService, popularTvError} = this.props;\r\n \r\n         MoviesService.getTVAiringToday(page + 1)\r\n             .then((res) => success(res.results))\r\n             .catch(error => popularTvError())\r\n     }\r\n \r\n     loadMoreTV = () => {\r\n         const {page, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} = this.props;\r\n \r\n         if (page > 500) {\r\n             return\r\n         }\r\n \r\n         airingTodayTvMoreRequested();\r\n         this.loadTV(airingTodayTvMoreLoaded)\r\n     }\r\n \r\n     render() {\r\n         const {tv, loading, loadingMore, history} = this.props;\r\n         \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n     }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {airingTodayTv, loading, loadingMore, airingTodayPage} = state.tvPageReducer;\r\n    return {\r\n        tv: airingTodayTv,\r\n        page: airingTodayPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(AiringTodayPage));","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedTvRequested, topRatedTvTvLoaded, popularTvError, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass TVTopRatedPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.topRatedTvRequested();\r\n           this.loadTV(this.props.topRatedTvTvLoaded)\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n    \r\n    loadMoreTV = () => {\r\n        const {page, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedTvTvMoreRequested();\r\n        this.loadTV(topRatedTvTvMoreLoaded)\r\n    } \r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedTv, topRatedPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: topRatedTv,\r\n        page: topRatedPage,\r\n        loading, \r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVTopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {onTheAirTvRequested, onTheAirTvLoaded, popularTvError, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass OnTheAirPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.onTheAirTvRequested();\r\n           this.loadTV(this.props.onTheAirTvLoaded);\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVOnTheAir(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTV = () => {\r\n        const {page, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        onTheAirTvMoreRequested();\r\n        this.loadTV(onTheAirTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {onTheAirTv, loading, loadingMore, onTheAirPage} = state.tvPageReducer;\r\n    return {\r\n        tv: onTheAirTv,\r\n        page: onTheAirPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(OnTheAirPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { Pagination } from '@material-ui/lab';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst PersonItemWrapper = styled.div`\r\n    max-width: 235px;\r\n    width: 100%;\r\n    min-height: ${props => props.size < 415 ? '220px' : '287px'};\r\n    height: 100%;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PersonImg = styled.img`\r\n    width: 100%;\r\n    height: ${props => props.size < 415 ? '63%' : '80%'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonNameWrapper = styled.div`\r\n    padding: 8px 10px;\r\n`;\r\n\r\nconst PersonName = styled.div`\r\n    font-size: 16px;\r\n    line-height: 19.2px;\r\n    font-weight: 700;\r\n    text-align: left;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonCast = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 17.28px;\r\n    opacity: 0.6;\r\n    text-align: left;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 700;\r\n    padding: 0 0 15px 30px;\r\n`;\r\n\r\nconst PersonList = ({person, loading, history, url, totalPages, getPerson, page}) => {\r\n    const size = useWindowSize();\r\n    const personItem = person.map(item => {\r\n        const {name, known_for, profile_path, id} = item;\r\n        const src = profile_path ? ('https://image.tmdb.org/t/p/w235_and_h235_face' + profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n        \r\n        const castArray = known_for.map(movie => movie.name || movie.title);\r\n        const castToString = castArray.join(', ');\r\n\r\n        return (\r\n            <Col key={id} className='mb-4 col-xl-3 col-6 col-sm-6'>\r\n                <PersonItemWrapper size={size}>\r\n                    <PersonImg \r\n                        size={size}\r\n                        src={src} \r\n                        alt={name}\r\n                        onClick={() => history.push(`${url}/${id}`)}\r\n                    />\r\n                    <PersonNameWrapper>\r\n                        <PersonName\r\n                            onClick={() => history.push(`${url}/${id}`)}\r\n                        >{name}</PersonName>\r\n                        <PersonCast>\r\n                            <EllipsisText text={castToString} length={size < 415 ? 15 : 27}/>\r\n                        </PersonCast>\r\n                    </PersonNameWrapper>  \r\n                </PersonItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container className=\"mt-4 mt-lg-5 container-xl\">\r\n                <Row>\r\n                    <SectionTitle>\r\n                        Популярные люди\r\n                    </SectionTitle>\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                    {personItem}\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100 mb-5\">\r\n                    <Pagination \r\n                        size={size < 415 ? \"small\" : 'large'}\r\n                        count={totalPages} \r\n                        boundaryCount={2}\r\n                        page={page}\r\n                        onChange={(event, page) => {\r\n                            getPerson(page)\r\n                        }}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonList;","export const POPULAR_PERSON_REQUESTED = 'POPULAR_PERSON_REQUESTED';\r\nexport const POPULAR_PERSON_LOADED = 'POPULAR_PERSON_LOADED';\r\nexport const POPULAR_PERSON_ERROR = 'POPULAR_PERSON_ERROR';","import React, { Component }  from 'react';\r\nimport PersonList from './components/personList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularPersonRequested, popularPersonLoaded, popularPersonError} from '../../actions/actionsPopularPersonPage/actionPopularPersonPage';\r\n\r\nclass PersonPage extends Component {  \r\n    componentWillMount() {\r\n        const {popularPersonRequested, person, history, page} = this.props;\r\n        \r\n        history.push({\r\n            pathname: '/person',\r\n            search: `?page=${page}`\r\n        })\r\n\r\n        if (!person.length) {\r\n            popularPersonRequested();\r\n            this.loadPerson(); \r\n        }     \r\n    }\r\n\r\n    onServiceRequest = (page) => {\r\n        const {MoviesService, popularPersonError, popularPersonLoaded, history} = this.props;\r\n\r\n        MoviesService.getPopularPerson(page)\r\n        .then((res) => {\r\n            if (res) {\r\n                history.push({\r\n                    pathname: '/person',\r\n                    search: `?page=${page}`\r\n                });\r\n                const payload = {\r\n                    person: res.results,\r\n                    totalPages: res.total_pages,\r\n                    page: res.page\r\n                }\r\n                popularPersonLoaded(payload)\r\n            } \r\n        })\r\n        .catch(error => popularPersonError())\r\n    }\r\n\r\n    loadPerson = () => {\r\n        const {page} = this.props;\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    loadMorePerson = (page) => {\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    render() {\r\n        const {person, loading, totalPages, page, history} = this.props;\r\n    \r\n        return(\r\n            <PersonList\r\n                person={person}\r\n                loading={loading}\r\n                page={page}\r\n                totalPages={totalPages}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getPerson = {this.loadMorePerson}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {person, loading, page, totalPages} = state.popularPersonReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        page,\r\n        totalPages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PersonPage));","import * as actionTypes from './actionTypesPopularPersonPage';\r\n\r\nconst popularPersonRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularPersonLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError,\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from \"moment\";\r\nimport useWindowSize from \"../../shared/useWindowSize/useWindowSize\";\r\n\r\nconst CastItemWrapper = styled.div`\r\n    max-width: ${(props) => (props.large ? \"1218px\" : props.size < 415 ? props.size + \"px\" : \"290px\")};\r\n    width: 100%;\r\n    display: flex;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 7px;\r\n    margin: 10px 0 4px;\r\n`;\r\n\r\nconst CastImgWrapper = styled.img`\r\n    width: ${(props) => (props.large ? \"94px\" : \"60px\")};\r\n    min-width: ${(props) => (props.large ? \"94px\" : \"60px\")};\r\n    height: ${(props) => (props.large ? \"141px\" : \"60px\")};\r\n    border-top-left-radius: 7px;\r\n    border-bottom-left-radius: 7px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 14px;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: ${(props) => (props.large ? \"19px\" : \"16px\")};\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: #08e8de;\r\n    }\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 0.9em;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 1.4em;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`\r\n    color: rgb(153, 153, 153);\r\n    font-size: 0.7em;\r\n    margin-bottom: ${(props) => (props.size < 415 ? \"5px\" : \"20px\")};\r\n`;\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionCast = ({ cast, crew, parts, history }) => {\r\n    const size = useWindowSize();\r\n\r\n    const onGoToPersonDetails = (id) => {\r\n        history.push(`/person/${id}`);\r\n    };\r\n\r\n    const onGoToMovieDetails = (id) => {\r\n        history.push(`/movie/${id}`);\r\n    };\r\n\r\n    const castItem = cast\r\n        .filter((item, index) => index < 12)\r\n        .map((item, index) => {\r\n            const src = item.profile_path\r\n                ? \"https://image.tmdb.org/t/p/w64_and_h64_face\" + item.profile_path\r\n                : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper size={size}>\r\n                        <CastImgWrapper src={src} alt={item.name} onClick={() => onGoToPersonDetails(item.id)} />\r\n                        <CastNameWrapper>\r\n                            <CastName onClick={() => onGoToPersonDetails(item.id)}>{item.name}</CastName>\r\n                            <CastCharacter>\r\n                                <EllipsisText text={item.character} length={size < 415 ? 30 : 20} />\r\n                            </CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            );\r\n        });\r\n\r\n    const crewItem = crew\r\n        .filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const src = item.profile_path\r\n                ? \"https://image.tmdb.org/t/p/w64_and_h64_face\" + item.profile_path\r\n                : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper size={size}>\r\n                        <CastImgWrapper src={src} alt={item.name} onClick={() => onGoToPersonDetails(item.id)} />\r\n                        <CastNameWrapper>\r\n                            <CastName onClick={() => onGoToPersonDetails(item.id)}>{item.name}</CastName>\r\n                            <CastCharacter>{item.department}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            );\r\n        });\r\n\r\n    const partItem = parts.map((part, index) => {\r\n        const src = part.poster_path\r\n            ? \"https://image.tmdb.org/t/p/w94_and_h141_bestv2\" + part.poster_path\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n        const releaseDate = part.release_date ? moment(part.release_date).format(\"DD/MM/YYYY\") : null;\r\n\r\n        return (\r\n            <Col sm={12} key={index}>\r\n                <CastItemWrapper large>\r\n                    <CastImgWrapper src={src} alt={part.title} large onClick={() => onGoToMovieDetails(part.id)} />\r\n                    <CastNameWrapper>\r\n                        <CastName large onClick={() => onGoToMovieDetails(part.id)}>\r\n                            {part.title}\r\n                            <ReleaseDate size={size}>{releaseDate}</ReleaseDate>\r\n                        </CastName>\r\n                        <CastCharacter>\r\n                            <EllipsisText text={part.overview} length={size < 415 ? 50 : 268} />\r\n                        </CastCharacter>\r\n                    </CastNameWrapper>\r\n                </CastItemWrapper>\r\n            </Col>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Section>\r\n                <Row>\r\n                    <Col className=\"font-weight-bold\">\r\n                        <HeaderWrapper>В главных ролях</HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>{castItem}</Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className=\"font-weight-bold\">\r\n                        <HeaderWrapper>Постановщики</HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>{crewItem}</Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className=\"font-weight-bold\">\r\n                        <HeaderWrapper>{parts.length} фильмов</HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>{partItem}</Row>\r\n            </Section>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CollectionCast;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { ImgWrapper, Title, DetailsList, Vote, Overview } from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport Rate from '../../shared/rate';\r\nimport { BackgroundWrapper } from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport CollectionCast from './collectionCast';\r\n\r\nconst DetailsTitleWrapper = styled.div`\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst DetailsContentWrapper = styled.span`\r\n    font-weight: 400;\r\n`;\r\n\r\n\r\nconst CollectionDetails = ({ collection, history, genre, cast, crew, revenue }) => {\r\n\r\n    const { name, poster_path, overview, parts, backdrop_path } = collection;\r\n    const averageVote = (parts.reduce((sum, item) => {\r\n        return sum + item.vote_average;\r\n    }, 0) / parts.length).toFixed(2);\r\n    const { genres } = genre;\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + poster_path);\r\n\r\n    const movieOverview = !overview ? '-' : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty('parts') && Object.keys(genre).length) {\r\n            parts.forEach(part => {\r\n                part.genre_ids.forEach(id => {\r\n                    genres.forEach(genre => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name)\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        return null;\r\n    }\r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index\r\n    })\r\n    const uniquesToString = uniques.join(', ');\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue ? `$${nf.format(revenue).replace(/\\s/g, ',')}` : '-';\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={backdrop_path}>\r\n                <Container>\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                        <Col className='col-4'>\r\n                            <ImgWrapper src={src} alt={name} />\r\n                        </Col>\r\n                        <Col className='col-8 text-left px-0'>\r\n                            <Title>{name}</Title>\r\n                            <DetailsList>\r\n                                <Row>\r\n                                    <Col className=\"col-auto\">{uniquesToString}</Col>\r\n                                </Row>\r\n                                <Row className=\"font-weight-bold py-3\">\r\n                                    <Col className=\"col-auto d-flex\">\r\n                                        <Rate vote={averageVote} />\r\n                                        <Vote>Пользовательский счёт</Vote>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='flex-column py-2'>\r\n                                    <Col>\r\n                                        <Overview>\r\n                                            Обзор\r\n                                            </Overview>\r\n                                    </Col>\r\n                                    <Col>{movieOverview}</Col>\r\n                                </Row>\r\n                                <Row className='flex-column py-2'>\r\n                                    <Col>\r\n                                        <DetailsTitleWrapper>\r\n                                            Число фильмов: <DetailsContentWrapper>{parts.length}</DetailsContentWrapper>\r\n                                        </DetailsTitleWrapper>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <DetailsTitleWrapper>\r\n                                            Сборы: <DetailsContentWrapper>{movieRevenue}</DetailsContentWrapper>\r\n                                        </DetailsTitleWrapper>\r\n                                    </Col>\r\n                                </Row>\r\n                            </DetailsList>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </BackgroundWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionDetails;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Rate from \"../../shared/rate\";\r\nimport CollectionCast from './collectionCast';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n    GlobalWrapper,\r\n    BackgroundWrapper,\r\n    PosterWrapper,\r\n    TitleWrapper,\r\n    Title,\r\n    RateWrapper,\r\n    Vote,\r\n    GenreWrapper,\r\n    GenreList,\r\n    OverviewWrapper,\r\n    Overview,\r\n} from \"../../moviesPage/components/movieDetailsPage/components/mobileComponents/detailsMob\";\r\n\r\nconst SectionTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n\r\n    &:nth-last-of-type(2) {\r\n        margin-top: 20px;\r\n    }\r\n\r\n    & span {\r\n        font-weight: 400;\r\n    }\r\n`;\r\n\r\nconst CollectionDetailsMobile = ({\r\n    collection,\r\n    history,\r\n    cast,\r\n    crew,\r\n    revenue,\r\n    genre,\r\n}) => {\r\n    const { name, poster_path, overview, parts, backdrop_path } = collection;\r\n    const averageVote = (\r\n        parts.reduce((sum, item) => {\r\n            return sum + item.vote_average;\r\n        }, 0) / parts.length\r\n    ).toFixed(2);\r\n    const { genres } = genre;\r\n    const src = !poster_path\r\n        ? process.env.PUBLIC_URL + \"/assets/poster.png\"\r\n        : \"//image.tmdb.org/t/p/w116_and_h174_face\" + poster_path;\r\n\r\n    const movieOverview = !overview ? \"-\" : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty(\"parts\") && Object.keys(genre).length) {\r\n            parts.forEach((part) => {\r\n                part.genre_ids.forEach((id) => {\r\n                    genres.forEach((genre) => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index;\r\n    });\r\n    const uniquesToString = uniques.join(\", \");\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue\r\n        ? `$${nf.format(revenue).replace(/\\s/g, \",\")}`\r\n        : \"-\";\r\n\r\n    return (\r\n        <>\r\n            <GlobalWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <BackgroundWrapper url={backdrop_path}>\r\n                                <PosterWrapper>\r\n                                    <img src={src} alt={name} />\r\n                                </PosterWrapper>\r\n                            </BackgroundWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <TitleWrapper>\r\n                                <Title>{name}</Title>\r\n                                <RateWrapper>\r\n                                    <Rate vote={averageVote} small isStatic />\r\n                                    <Vote>\r\n                                        Пользовательский <span>счёт</span>\r\n                                    </Vote>\r\n                                </RateWrapper>\r\n                            </TitleWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <GenreWrapper>\r\n                                <GenreList>{uniquesToString}</GenreList>\r\n                            </GenreWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <OverviewWrapper>\r\n                                <Overview>\r\n                                    <div>Обзор</div>\r\n                                    {movieOverview}\r\n                                </Overview>\r\n                                <SectionTitle>\r\n                                    Число фильмов: <span>{parts.length}</span>\r\n                                </SectionTitle>\r\n                                <SectionTitle>\r\n                                    Сборы: <span>{movieRevenue}</span>\r\n                                </SectionTitle>\r\n                            </OverviewWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </GlobalWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CollectionDetailsMobile;\r\n","export const COLLECTION_REQUESTED = 'COLLECTION_REQUESTED';\r\nexport const COLLECTION_LOADED = 'COLLECTION_LOADED';\r\nexport const COLLECTION_ERROR = 'COLLECTION_ERROR';\r\n\r\nexport const GENRES_REQUESTED = 'GENRES_REQUESTED';\r\nexport const GENRES_LOADED = 'GENRES_LOADED';\r\n\r\nexport const COLLECTION_MOVIE_DETAILS_LOADED = 'COLLECTION_MOVIE_DETAILS_LOADED';\r\n\r\nexport const COLLECTION_CAST_LOADED = 'COLLECTION_CAST_LOADED';","import React, { Component } from \"react\";\r\nimport CollectionDetails from \"./components/collectionDetails\";\r\nimport Spinner from \"../shared/spinner/spinner\";\r\nimport CollectionDetailsMobile from './components/collectionDetailsMob';\r\nimport WithMoviesService from \"../hoc/withMoviesService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    collectionRequested,\r\n    collectionLoaded,\r\n    collectionError,\r\n    genresRequested,\r\n    genresLoaded,\r\n    collectionMovieDetailsLoaded,\r\n    collectionCastLoaded\r\n} from \"../../actions/actionsCollectionPage/actionCollectionPage\";\r\n\r\nclass CollectionPage extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            collectionId,\r\n            collectionRequested,\r\n            genresRequested\r\n        } = this.props;\r\n\r\n\r\n        collectionRequested();\r\n        genresRequested();   \r\n        this.getGenresName();\r\n        this.loadCollection(collectionId);\r\n    }\r\n\r\n    loadCollection = (collectionId) => {\r\n        const { MoviesService, collectionLoaded, collectionError } = this.props;\r\n        MoviesService.getCollection(collectionId)\r\n            .then((res) => {\r\n                if (res) {\r\n                    const movieIds = res.parts.map((part) => part.id);\r\n                    collectionLoaded(res);\r\n                    this.getCast(res);\r\n                    this.getMovieDetails(movieIds);\r\n                }\r\n            })\r\n            .catch((error) => collectionError());\r\n    };\r\n\r\n    getGenresName = () => {\r\n        const { MoviesService, genresLoaded, collectionError } = this.props;\r\n        MoviesService.getGenreList()\r\n            .then((res) => genresLoaded(res))\r\n            .catch((error) => collectionError());\r\n    };\r\n\r\n    getMovieDetails = (ids) => {\r\n        const {\r\n            MoviesService,\r\n            collectionMovieDetailsLoaded,\r\n            collectionError,\r\n        } = this.props;\r\n        const total = [];\r\n        ids.forEach((id) => {\r\n            MoviesService.getMovieDetails(id)\r\n                .then((response) => {\r\n                    if (response) {\r\n                        total.push(response.revenue);\r\n                        collectionMovieDetailsLoaded(total);\r\n                    }\r\n                })\r\n                .catch((error) => collectionError());\r\n        });\r\n    };\r\n\r\n    getCast = (collection) => {\r\n        const { MoviesService, collectionCastLoaded, collectionError } = this.props;\r\n        const ids = collection.parts.map((part) => part.id);\r\n\r\n        MoviesService.getCast(ids)\r\n            .then((res) => {\r\n                if (res) {\r\n                    const payload = { cast: res.cast, crew: res.crew };\r\n                    collectionCastLoaded(payload);\r\n                }\r\n            })\r\n            .catch((error) => collectionError());\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            collection,\r\n            history,\r\n            loading,\r\n            genres,\r\n            genresLoading,\r\n            revenue,\r\n            cast,\r\n            crew,\r\n            width\r\n        } = this.props;\r\n\r\n\r\n        const globalLoading =\r\n            loading || genresLoading;\r\n\r\n        if (globalLoading) {\r\n            return <Spinner />;\r\n        } else if (width < 415) {\r\n            return (\r\n                <CollectionDetailsMobile\r\n                    collection={collection}\r\n                    history={history}\r\n                    genre={genres}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    revenue={revenue}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <CollectionDetails\r\n                    collection={collection}\r\n                    history={history}\r\n                    genre={genres}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    revenue={revenue}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        collection,\r\n        loading,\r\n        genres,\r\n        genresLoading,\r\n        revenue,\r\n        cast,\r\n        crew,\r\n    } = state.collectionPageReducer;\r\n    return {\r\n        collection,\r\n        loading,\r\n        genres,\r\n        genresLoading,\r\n        revenue,\r\n        cast,\r\n        crew\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    collectionRequested,\r\n    collectionLoaded,\r\n    collectionError,\r\n    genresRequested,\r\n    genresLoaded,\r\n    collectionMovieDetailsLoaded,\r\n    collectionCastLoaded\r\n};\r\n\r\nexport default WithMoviesService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(CollectionPage)\r\n);\r\n","import * as actionTypes from './actionTypesCollectionPage';\r\n\r\nconst collectionRequested = () => {\r\n    return {\r\n        type: actionTypes.COLLECTION_REQUESTED\r\n    }\r\n}\r\n\r\nconst collectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst collectionError = () => {\r\n    return {\r\n        type: actionTypes.COLLECTION_ERROR\r\n    }\r\n}\r\n\r\nconst genresRequested = () => {\r\n    return {\r\n        type: actionTypes.GENRES_REQUESTED\r\n    }\r\n}\r\n\r\nconst genresLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.GENRES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nconst collectionMovieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nconst collectionCastLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    collectionRequested,\r\n    collectionLoaded,\r\n    collectionError,\r\n    genresRequested,\r\n    genresLoaded,\r\n    collectionMovieDetailsLoaded,\r\n    collectionCastLoaded,\r\n}","export const IN_TREND_REQUESTED = 'IN_TREND_REQUESTED';\r\nexport const IN_TREND_LOADED = 'IN_TREND_LOADED';\r\nexport const IN_TREND_ERROR = 'IN_TREND_ERROR';","import React, {useState, useRef, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TogglerWrapper = styled.div`\r\n    width: fit-content;\r\n    border: 1px solid rgb(3, 37, 65);;\r\n    border-radius: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ToggleItem = styled.div`\r\n    padding: 0 15px;\r\n    color: ${props => props.isActive ? 'rgb(30, 213, 169)' : 'rgb(3, 37, 65)'};\r\n    position: relative;\r\n    z-index: 2;\r\n`;\r\n\r\nconst ToggleActive = styled.div`\r\n    background-color: rgb(3, 37, 65);\r\n    position: absolute;\r\n    height: 100%;\r\n    width: ${props => (props.width + 'px') || '100px'};\r\n    border-radius: 15px;\r\n    transition: all 200ms;\r\n\r\n    &.first-active {\r\n        left: 0;\r\n    }\r\n\r\n    &.second-active {\r\n        left: ${props => `calc(100% - ${props.width}px)`}\r\n    }\r\n`;\r\n\r\nconst Toggler = ({names, loadTrend, types}) => {\r\n    const buttonsArray = [\r\n        {\r\n            isActive: true,\r\n            text: names[0],\r\n            type: types[0]\r\n        },\r\n        {\r\n            isActive: false,\r\n            text: names[1],\r\n            type: types[1]\r\n        }\r\n    ]\r\n\r\n    const [buttons, setButtons] = useState(buttonsArray || []);\r\n    const [width, setWidth] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        if (buttons[0].isActive) {\r\n            setWidth(ref.current.clientWidth)\r\n        }\r\n    }, []);\r\n\r\n    let classNames = buttons[0].isActive ? 'first-active' : 'second-active';\r\n\r\n    const onToggle = (event, index) => {\r\n        setWidth(event.currentTarget.clientWidth);\r\n        \r\n        buttons.forEach(item => item.isActive = false);\r\n        buttons[index].isActive = true;\r\n        loadTrend(buttons[index].type)\r\n\r\n        setButtons(buttons);\r\n\r\n    }\r\n\r\n    const toggleItems = buttons.map((item, index) => {\r\n        const reference = item.isActive ? ref : null;\r\n        return (\r\n            <ToggleItem \r\n                isActive={item.isActive}\r\n                key={index}\r\n                onClick={(event) => onToggle(event, index)}\r\n                ref={reference}\r\n            >{item.text}</ToggleItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <TogglerWrapper>\r\n            {toggleItems}\r\n            <ToggleActive className={classNames} width={width}></ToggleActive>\r\n        </TogglerWrapper>\r\n    )\r\n}\r\n\r\nexport default Toggler;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Rate from '../../shared/rate';\r\nimport Toggler from '../../shared/toggler/toggler';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    max-width: 100%;\r\n    margin: 0 15px;\r\n    position: relative;\r\n    background-image: url('https://www.themoviedb.org/assets/2/v4/misc/trending-bg-39afc2a5f77e31d469b25c187814c0a2efef225494c038098d62317d923f8415.svg');\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 345px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 335px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst SectionTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: ${props => props.size < 415 ? 'center' : 'baseline'};\r\n    flex-direction: ${props => props.size < 415 ? 'column' : 'row'};\r\n    margin: 0 15px 30px 5px;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px; \r\n    margin-bottom: 15px; \r\n`;\r\n\r\nconst TrendCardWrapper = styled.div`\r\n    width: 150px;\r\n    min-width: 150px;\r\n`;\r\n\r\nconst TrendCardImg = styled.img`\r\n    border-radius: 8px;\r\n    width: 150px;\r\n    height: 225px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardTitleWrapper = styled.div`\r\n    position: relative;\r\n    padding-top: 20px;\r\n`;\r\nconst TrendCardTitle = styled.div`\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardRelease = styled.div`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst InTrend = ({inTrend, MoviesService, loadTrend, size}) => {\r\n    const history = useHistory();\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    const trendItems = inTrend.map((item, index) => {\r\n        const {id, release_date, first_air_date, media_type, name, title, poster_path, vote_average} = item;\r\n        let src = poster_path ? ('//image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n        const date = moment(release_date || first_air_date).format('DD.MM.YYYY');\r\n        return (\r\n            <TrendCardWrapper key={index}>\r\n                <TrendCardImg \r\n                    src={src} \r\n                    alt={name || title} \r\n                    onClick={() => handleRouting(id, media_type)}\r\n                />\r\n                <TrendCardTitleWrapper>\r\n                    <TrendCardTitle\r\n                        onClick={() => handleRouting(id, media_type)}\r\n                    >\r\n                        {name || title} \r\n                    </TrendCardTitle>\r\n                    <TrendCardRelease>\r\n                        {date}\r\n                    </TrendCardRelease>\r\n                    <Rate \r\n                        vote={vote_average}\r\n                        small\r\n                    />\r\n                </TrendCardTitleWrapper>\r\n            </TrendCardWrapper>\r\n        )\r\n    })\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitleWrapper size={size}>\r\n                <SectionTitle>В тренде </SectionTitle>\r\n                <Toggler names={['Сегодня', 'На этой неделе']} loadTrend={loadTrend} types={['day', 'week']}/>\r\n            </SectionTitleWrapper>\r\n            <Carousel \r\n                renderArrow={myArrow}\r\n                itemsToScroll={size < 415 ? 2 : 5} \r\n                itemsToShow={size < 415 ? 2 : 7}\r\n                focusOnSelect={false}\r\n                ref={ref => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {trendItems}\r\n            </Carousel>\r\n            <PrevButton \r\n                onClick={() => carousel.slidePrev()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton \r\n                onClick={() => carousel.slideNext()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper> \r\n    )\r\n        \r\n}\r\n\r\nexport default InTrend;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {inTrendRequested, inTrendLoaded, inTrendError} from '../../actions/actionsHomePage/actionHomePage';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport {InTrend} from './components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport useWindowSize from '../shared/useWindowSize/useWindowSize';\r\n\r\nconst HomePageWrapper = styled.div`\r\n    width: 100%;\r\n    margin: ${props => props.size < 415 ? '0 auto 10%': '10% auto'};\r\n    background-color: #f1f2f6;\r\n    border-radius: ${props => props.size < 415 ? '0' : '10px'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: ${props => props.size < 415 ? '2.4em' : '3em'};\r\n    font-weight: 700;\r\n    padding: 10% 15px;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePageSubTitle = styled.div`\r\n    font-size: 0.7em;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePage = ({title, MoviesService, inTrendLoaded, inTrendError, inTrend, loading}) => {\r\n    const size = useWindowSize();\r\n    document.title = title;\r\n\r\n    const loadTrend = (time) => {\r\n        MoviesService.getInTrend(time)\r\n            .then((res) => inTrendLoaded(res.results))\r\n            .catch(error => inTrendError());\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTrend('day')\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <HomePageWrapper size={size}>\r\n                            Добро пожаловать в Movies Database.\r\n                            <HomePageSubTitle>\r\n                                Миллионы фильмов, сериалов и людей. Исследуйте сейчас.\r\n                            </HomePageSubTitle>\r\n                        </HomePageWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <InTrend \r\n                            inTrend={inTrend} \r\n                            MoviesService={MoviesService} \r\n                            loadTrend={loadTrend} \r\n                            size={size}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {inTrend, loading} = state.homePageReducer;\r\n    return {\r\n        inTrend,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(HomePage));","import * as actionTypes from './actionTypeHomePage';\r\n\r\nconst inTrendRequested = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_REQUESTED\r\n    }\r\n}\r\n\r\nconst inTrendLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.IN_TREND_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendError = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError,\r\n}","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { isSearch } from \"../../../actions/actionsSearchPage/actionSearchPage\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: relative;\r\n    z-index: 21;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-style: italic;\r\n    font-weight: 700;\r\n    font-size: 2.5em;\r\n    margin-left: 15px;\r\n`;\r\n\r\nconst MenuBurger = styled.div`\r\n    width: 35px;\r\n    height: 5px;\r\n    position: relative;\r\n    background-color: black;\r\n\r\n    &::after,\r\n    &::before {\r\n        content: \"\";\r\n        width: 35px;\r\n        height: 5px;\r\n        position: absolute;\r\n        background-color: black;\r\n    }\r\n\r\n    &::before {\r\n        top: -10px;\r\n    }\r\n\r\n    &::after {\r\n        top: 10px;\r\n    }\r\n`;\r\n\r\nconst MenuList = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #f1dfd1;\r\n    background-image: linear-gradient(315deg, #f1dfd1 0%, #f6f0ea 74%);\r\n    z-index: 50;\r\n    transform: translate(150%, 0);\r\n    transition: transform 300ms;\r\n    overflow-y: hidden;\r\n\r\n    &.active {\r\n        transform: translate(0, 0);\r\n    }\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 30px;\r\n\r\n    & i {\r\n        font-size: 2.5em;\r\n    }\r\n`;\r\n\r\nconst NavList = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst NavListItem = styled.div`\r\n    padding-top: 10px;\r\n    font-size: 1.5em;\r\n    font-weight: 800;\r\n`;\r\n\r\nconst NavListSubItem = styled.div`\r\n    padding: 15px 0 0 15px;\r\n    font-size: 0.77em;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    transition: text-decoration 200ms;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    & a {\r\n        color: rgba(33, 37, 41, 0.8);\r\n    }\r\n`;\r\n\r\nconst SearchButton = styled.div`\r\n    margin-right: 35px;\r\n\r\n    & i {\r\n        font-size: 1.5em;\r\n    }\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 15px;\r\n`;\r\n\r\nconst SearchInput = styled.div`\r\n    position: absolute;\r\n    bottom: 0;\r\n    z-index: 20;\r\n    transform: translate(0, 0);\r\n    transition: transform 300ms;\r\n    text-align: center;\r\n    font-size: 1.1em;\r\n    border-bottom: 1px solid rgb(0, 0, 0, 0.3);\r\n\r\n    &.open {\r\n        transform: translate(0, 100%);\r\n    }\r\n\r\n    & input {\r\n        width: 100vw;\r\n        border: none;\r\n        padding: 3px 7px;\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    & button {\r\n        position: absolute;\r\n        right: 0;\r\n        border: none;\r\n        padding: 3px 7px;\r\n        color: #fff;\r\n        background: linear-gradient(to top right, #0066eb 26%, #8affcc 100%);\r\n        border-top-left-radius: 5px;\r\n        border-bottom-left-radius: 5px;\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nconst HeaderMobile = ({ searchValue, isSearch }) => {\r\n    const [classNames, setClassNames] = useState(\"\");\r\n    const ref = useRef(null);\r\n    const history = useHistory();\r\n\r\n    const onHandleKeyPress = (event) => {\r\n        if (event.key === \"Enter\" && event.target.value) {\r\n            history.push(\"/search/tv\");\r\n        }\r\n    };\r\n\r\n    const onHandleButton = () => {\r\n        history.push(\"/search/tv\");\r\n    };\r\n\r\n    const toggleMenu = (clas, overflow) => {\r\n        setClassNames(clas);\r\n        document.getElementsByTagName(\"html\")[0].style.overflow = overflow;\r\n        document.body.style.overflow = overflow;\r\n    };\r\n\r\n    const toggleSearch = () => {\r\n        if (ref.current.className.includes(\"open\")) {\r\n            ref.current.className = ref.current.className.replace(\" open\", \"\");\r\n        } else {\r\n            ref.current.className += \" open\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <HeaderWrapper>\r\n            <NavBarWrapper>\r\n                <LogoWrapper>\r\n                    <Link to=\"/movie-database\">Movies DB</Link>\r\n                </LogoWrapper>\r\n                <SectionWrapper>\r\n                    <SearchButton onClick={toggleSearch}>\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </SearchButton>\r\n                    <MenuBurger onClick={() => toggleMenu(\"active\", \"hidden\")} />\r\n                    <MenuList className={classNames}>\r\n                        <CloseButton onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </CloseButton>\r\n                        <NavList>\r\n                            <NavListItem>\r\n                                Фильмы\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/movie/popular/\">Популярные</Link>\r\n                                    <span />\r\n                                </NavListSubItem>\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/movie/playing-now/\">Смотрят сейчас</Link>\r\n                                </NavListSubItem>\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/movie/upcoming/\">Ожидаемые</Link>\r\n                                </NavListSubItem>\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/movie/top-rated/\">Лучшие</Link>\r\n                                </NavListSubItem>\r\n                            </NavListItem>\r\n                            <NavListItem>\r\n                                Сериалы\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/tv/popular/\">Популярные</Link>\r\n                                </NavListSubItem>\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/tv/airing_today/\">В эфире сегодня</Link>\r\n                                </NavListSubItem>\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/tv/on_the_air/\">По телевидению</Link>\r\n                                </NavListSubItem>\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/tv/top-rated/\">Лучшие</Link>\r\n                                </NavListSubItem>\r\n                            </NavListItem>\r\n                            <NavListItem>\r\n                                Люди\r\n                                <NavListSubItem onClick={() => toggleMenu(\"\", \"visible\")}>\r\n                                    <Link to=\"/person/\">Популярные люди</Link>\r\n                                </NavListSubItem>\r\n                            </NavListItem>\r\n                        </NavList>\r\n                    </MenuList>\r\n                </SectionWrapper>\r\n            </NavBarWrapper>\r\n            <SearchInput ref={ref}>\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Найти фильм, сериал, персону...\"\r\n                    value={searchValue}\r\n                    onChange={(event) => isSearch(event.target.value)}\r\n                    onKeyPress={onHandleKeyPress}\r\n                />\r\n                <button\r\n                    disabled={!searchValue}\r\n                    onClick={onHandleButton}\r\n                >Search</button>\r\n            </SearchInput>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { searchValue } = state.searchPageReducer;\r\n    return {\r\n        searchValue,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    isSearch,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderMobile);\r\n","import React, { useEffect } from \"react\";\r\nimport Spinner from \"../../shared/spinner/spinner\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\n\r\nconst ItemWrapper = styled.div`\r\n    display: flex;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(227, 227, 227, 1);\r\n    border-radius: 8px;\r\n    margin-top: 20px;\r\n    max-width: 825px;\r\n    width: 100%;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n\r\nconst ItemImgWrapper = styled.div`\r\n    width: 94px;\r\n    height: 141px;\r\n    cursor: pointer;\r\n\r\n    & img {\r\n        width: inherit;\r\n        height: 100%;\r\n        border-top-left-radius: 8px;\r\n        border-bottom-left-radius: 8px;\r\n    }\r\n`;\r\n\r\nconst ItemDetailsWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px 15px;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst ItemTitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    max-height: 141px;\r\n    height: 100%;\r\n`;\r\n\r\nconst ItemTitle = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ItemReleaseDate = styled.div`\r\n    font-size: 1em;\r\n    color: #999;\r\n`;\r\n\r\nconst ItemDescription = styled.div``;\r\n\r\nconst NoResults = styled.div`\r\n    margin-top: 15px;\r\n    text-align: center;\r\n`;\r\n\r\nconst TVResults = ({\r\n    history,\r\n    results,\r\n    page,\r\n    totalPages,\r\n    loading,\r\n    loadMoreResults,\r\n    searchValue,\r\n    size\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const handleRoute = () => {\r\n            history.push({\r\n                pathname: \"/search/tv\",\r\n                search: `?page=${page}&query=${searchValue}`,\r\n            });\r\n        }\r\n        handleRoute()\r\n    }, [page, history, searchValue]);\r\n\r\n    if (loading) {\r\n        return <Spinner />;\r\n    } else if (!results.length) {\r\n        return <NoResults>Нет сериалов, соответствующих вашему запросу.</NoResults>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Items results={results} history={history} size={size}/>\r\n                <PaginationTemplate totalPages={totalPages} getResults={loadMoreResults} page={page} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst Items = ({ results, history, size }) => {\r\n    const handleRoute = (id) => {\r\n        history.push(`/tv/${id}`);\r\n    };\r\n\r\n    const resultItems = results.map((item, index) => {\r\n        const { id, name, poster_path, overview, first_air_date } = item;\r\n        const src = poster_path\r\n            ? `//image.tmdb.org/t/p/w94_and_h141_bestv2${poster_path}`\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n        const releaseDate = first_air_date ? moment(first_air_date).format(\"DD/MM/YYYY\") : null;\r\n        const shortOverview = overview ? <EllipsisText text={overview} length={size < 415 ? 50 : 170} /> : null;\r\n        return (\r\n            <ItemWrapper key={index}>\r\n                <ItemImgWrapper onClick={() => handleRoute(id)}>\r\n                    <img src={src} alt={name} />\r\n                </ItemImgWrapper>\r\n                <ItemDetailsWrapper>\r\n                    <ItemTitleWrapper>\r\n                        <ItemTitle onClick={() => handleRoute(id)}>{name}</ItemTitle>\r\n                        <ItemReleaseDate>{releaseDate}</ItemReleaseDate>\r\n                    </ItemTitleWrapper>\r\n                    <ItemDescription>\r\n                        {shortOverview}\r\n                    </ItemDescription>\r\n                </ItemDetailsWrapper>\r\n            </ItemWrapper>\r\n        );\r\n    });\r\n\r\n    return resultItems;\r\n};\r\n\r\nconst PaginationTemplate = ({ totalPages, getResults, page }) => {\r\n    if (totalPages > 1) {\r\n        return (\r\n            <Pagination\r\n                size={\"large\"}\r\n                count={totalPages}\r\n                boundaryCount={2}\r\n                page={page}\r\n                onChange={(event, page) => {\r\n                    getResults(page);\r\n                }}\r\n            />\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n\r\nexport default TVResults;\r\nexport {\r\n    ItemWrapper,\r\n    ItemImgWrapper,\r\n    ItemDetailsWrapper,\r\n    ItemTitleWrapper,\r\n    ItemTitle,\r\n    ItemReleaseDate,\r\n    ItemDescription,\r\n    NoResults,\r\n    PaginationTemplate,\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport Spinner from \"../../shared/spinner/spinner\";\r\nimport styled from \"styled-components\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { PaginationTemplate, NoResults } from \"./tvResults\";\r\n\r\nconst ItemWrapper = styled.div`\r\n    display: flex;\r\n    margin-top: 20px;\r\n    max-width: 825px;\r\n    width: 100%;\r\n\r\n    align-items: center;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 20px;\r\n    }\r\n`;\r\n\r\nconst ItemImgWrapper = styled.div`\r\n    width: 90px;\r\n    height: 90px;\r\n\r\n    cursor: pointer;\r\n    & img {\r\n        width: inherit;\r\n        border-radius: 8px;\r\n    }\r\n`;\r\n\r\nconst ItemNameWrapper = styled.div`\r\n    padding: 10px 20px;\r\n`;\r\n\r\nconst ItemName = styled.div`\r\n    cursor: pointer;\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst ItemDetailsWrapper = styled.div`\r\n    display: flex;\r\n    font-size: 1em;\r\n`;\r\n\r\nconst ItemDepartment = styled.div``;\r\n\r\nconst ItemCast = styled.div`\r\n    cursor: pointer;\r\n\r\n    &::before {\r\n        content: \"●\";\r\n        padding: 0 5px;\r\n    }\r\n`;\r\n\r\nconst PersonResults = ({\r\n    history,\r\n    results,\r\n    page,\r\n    totalPages,\r\n    loading,\r\n    loadMoreResults,\r\n    searchValue,\r\n    size\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const handleRoute = () => {\r\n            history.push({\r\n                pathname: \"/search/person\",\r\n                search: `?page=${page}&query=${searchValue}`,\r\n            });\r\n        }\r\n        handleRoute()\r\n    }, [page, history, searchValue]);\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else if (!results.length) {\r\n        return <NoResults>Нет людей, соответствующих вашему запросу.</NoResults>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Items results={results} history={history} size={size}/>\r\n                <PaginationTemplate totalPages={totalPages} getResults={loadMoreResults} page={page} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst Items = ({ results, history, size }) => {\r\n    const handleRoute = (id) => {\r\n        history.push(`/person/${id}`);\r\n    };\r\n\r\n    const resultItems = results.map((item, index) => {\r\n        const { name, id, known_for_department, known_for, profile_path } = item;\r\n\r\n        const src = profile_path\r\n            ? `//image.tmdb.org/t/p/w90_and_h90_face${profile_path}`\r\n            : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n        const cast = known_for ? known_for.map((item) => item.title || item.name).join(\", \") : null;\r\n\r\n        const castTemplate = !cast?.length ? null : (\r\n            <ItemCast>\r\n                <EllipsisText text={cast} length={size < 415 ? 20 : 80} />\r\n            </ItemCast>\r\n        );\r\n\r\n        return (\r\n            <ItemWrapper key={index}>\r\n                <ItemImgWrapper onClick={() => handleRoute(id)}>\r\n                    <img src={src} alt={name} />\r\n                </ItemImgWrapper>\r\n                <ItemNameWrapper>\r\n                    <ItemName onClick={() => handleRoute(id)}>\r\n                        {name}\r\n                    </ItemName>\r\n                    <ItemDetailsWrapper>\r\n                        <ItemDepartment>{known_for_department}</ItemDepartment>\r\n                        {castTemplate}\r\n                    </ItemDetailsWrapper>\r\n                </ItemNameWrapper>\r\n            </ItemWrapper>\r\n        );\r\n    });\r\n\r\n    return resultItems;\r\n};\r\n\r\nexport default PersonResults;","import React, { useEffect } from \"react\";\r\nimport Spinner from \"../../shared/spinner/spinner\";\r\nimport moment from \"moment\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport {\r\n    ItemWrapper,\r\n    ItemImgWrapper,\r\n    ItemDetailsWrapper,\r\n    ItemTitleWrapper,\r\n    ItemTitle,\r\n    ItemReleaseDate,\r\n    ItemDescription,\r\n    PaginationTemplate,\r\n    NoResults\r\n} from \"./tvResults\";\r\n\r\nconst MovieResults = ({\r\n    loading, \r\n    results, \r\n    page, \r\n    totalPages,\r\n    history,\r\n    loadMoreResults,\r\n    searchValue,\r\n    size\r\n}) => {\r\n    \r\n    useEffect(() => {\r\n        const handleRoute = () => {\r\n            history.push({\r\n                pathname: \"/search/movie\",\r\n                search: `?page=${page}&query=${searchValue}`,\r\n            });\r\n        };\r\n        handleRoute();\r\n    }, [history, page, searchValue]);\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else if (!results.length) {\r\n        return <NoResults>Нет фильмов, соответствующих вашему запросу.</NoResults>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Items results={results} history={history} size={size}/>\r\n                <PaginationTemplate totalPages={totalPages} getResults={loadMoreResults} page={page} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst Items = ({results, history, size}) => {\r\n    const handleRoute = (id) => {\r\n        history.push(`/movie/${id}`);\r\n    };\r\n\r\n    const resultItems = results.map((item, index) => {\r\n        const { id, title, poster_path, overview, release_date } = item;\r\n        const src = poster_path\r\n            ? `//image.tmdb.org/t/p/w94_and_h141_bestv2${poster_path}`\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n        const releaseDate = release_date ? moment(release_date).format(\"DD/MM/YYYY\") : null;\r\n        const shortOverview = overview ? <EllipsisText text={overview} length={size < 415 ? 50 : 170} /> : null;\r\n        return (\r\n            <ItemWrapper key={index}>\r\n                <ItemImgWrapper onClick={() => handleRoute(id)}>\r\n                    <img src={src} alt={title} />\r\n                </ItemImgWrapper>\r\n                <ItemDetailsWrapper>\r\n                    <ItemTitleWrapper>\r\n                        <ItemTitle onClick={() => handleRoute(id)}>{title}</ItemTitle>\r\n                        <ItemReleaseDate>{releaseDate}</ItemReleaseDate>\r\n                    </ItemTitleWrapper>\r\n                    <ItemDescription>\r\n                        {shortOverview}\r\n                    </ItemDescription>\r\n                </ItemDetailsWrapper>\r\n            </ItemWrapper>\r\n        );\r\n    });\r\n\r\n    return resultItems;\r\n}\r\n\r\nexport default MovieResults;","import React, { useEffect } from \"react\";\r\nimport Spinner from \"../../shared/spinner/spinner\";\r\nimport { PaginationTemplate, NoResults } from \"./tvResults\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CompanyItemWrapper = styled.div`\r\n    border-bottom: 1px solid #ccc;\r\n    display: flex;\r\n    max-width: 825px;\r\n    width: 100%;\r\n    font-size: 1.2em;\r\n    padding: 5px 0;\r\n\r\n    &:first-child {\r\n        border-top: 1px solid #ccc;\r\n    }\r\n\r\n    &:last-of-type {\r\n        margin-bottom: 25px;\r\n    }\r\n\r\n    &:hover {\r\n        text-decoration: none;\r\n        color: #666;\r\n    }\r\n`;\r\n\r\nconst CompanyItemName = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CompanyItemCountry = styled.div`\r\n    padding: 2px 4px;\r\n    background-color: rgba(0,0,0,0.2);\r\n    color: #fff;\r\n    border-radius: 4px;\r\n    font-size: 0.8em;\r\n    margin-left: 7px;\r\n`;\r\n\r\nconst CompanyResults = ({\r\n    loading, \r\n    results, \r\n    page, \r\n    totalPages,\r\n    history,\r\n    loadMoreResults,\r\n    searchValue\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const handleRoute = () => {\r\n            history.push({\r\n                pathname: \"/search/company\",\r\n                search: `?page=${page}&query=${searchValue}`,\r\n            });\r\n        };\r\n        handleRoute();\r\n    }, [history, page, searchValue]);\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else if (!results.length) {\r\n        return <NoResults>Нет компаний, соответствующих вашему запросу.</NoResults>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Items results={results} history={history} />\r\n                <PaginationTemplate totalPages={totalPages} getResults={loadMoreResults} page={page} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst Items = ({results, history}) => {\r\n\r\n    const resultItems = results.map((item, index) => {\r\n        const { name, origin_country } = item;\r\n        const country = origin_country ? <CompanyItemCountry>{origin_country}</CompanyItemCountry> : null;\r\n\r\n        return (\r\n            <CompanyItemWrapper key={index}>\r\n                <CompanyItemName>{name}</CompanyItemName>\r\n                {country}\r\n            </CompanyItemWrapper>\r\n        );\r\n    });\r\n\r\n    return resultItems;\r\n}\r\n\r\nexport default CompanyResults;","import React, { useEffect } from \"react\";\r\nimport Spinner from \"../../shared/spinner/spinner\";\r\nimport { PaginationTemplate, NoResults } from \"./tvResults\";\r\nimport styled from \"styled-components\";\r\n\r\nconst CompanyItemName = styled.div`\r\n    cursor: pointer;\r\n    max-width: 825px;\r\n    width: 100%;\r\n`;\r\n\r\n\r\nconst KeywordResults = ({\r\n    loading, \r\n    results, \r\n    page, \r\n    totalPages,\r\n    history,\r\n    loadMoreResults,\r\n    searchValue\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const handleRoute = () => {\r\n            history.push({\r\n                pathname: \"/search/keywords\",\r\n                search: `?page=${page}&query=${searchValue}`,\r\n            });\r\n        };\r\n        handleRoute();\r\n    }, [history, page, searchValue]);\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else if (!results.length) {\r\n        return <NoResults>Нет ключевых слов, соответствующих вашему запросу.</NoResults>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Items results={results} history={history} />\r\n                <PaginationTemplate totalPages={totalPages} getResults={loadMoreResults} page={page} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst Items = ({results, history}) => {\r\n    const handleRoute = (id) => {\r\n        history.push(`/keywords/${id}`)\r\n    }\r\n\r\n    const resultItems = results.map((item, index) => {\r\n        const { name, id } = item;\r\n        return (\r\n             <CompanyItemName\r\n                key={index}\r\n                onClick={() => handleRoute(id)}\r\n             >{name}</CompanyItemName>\r\n        );\r\n    });\r\n\r\n    return resultItems;\r\n}\r\n\r\nexport default KeywordResults;","import React, { useEffect } from \"react\";\r\nimport Spinner from \"../../shared/spinner/spinner\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport {\r\n    ItemWrapper,\r\n    ItemImgWrapper,\r\n    ItemDetailsWrapper,\r\n    ItemTitleWrapper,\r\n    ItemTitle,\r\n    ItemDescription,\r\n    PaginationTemplate,\r\n    NoResults\r\n} from \"./tvResults\";\r\n\r\nconst CollectionResults = ({\r\n    loading, \r\n    results, \r\n    page, \r\n    totalPages,\r\n    history,\r\n    loadMoreResults,\r\n    searchValue\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        const handleRoute = () => {\r\n            history.push({\r\n                pathname: \"/search/collection\",\r\n                search: `?page=${page}&query=${searchValue}`,\r\n            });\r\n        };\r\n        handleRoute();\r\n    }, [history, page, searchValue]);\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else if (!results.length) {\r\n        return <NoResults>Нет коллекций, соответствующих вашему запросу.</NoResults>\r\n    } else {\r\n        return (\r\n            <>\r\n                <Items results={results} history={history} />\r\n                <PaginationTemplate totalPages={totalPages} getResults={loadMoreResults} page={page} />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst Items = ({results, history}) => {\r\n    const handleRoute = (id) => {\r\n        history.push(`/collection/${id}`);\r\n    };\r\n\r\n    const resultItems = results.map((item, index) => {\r\n        const { id, name, poster_path, overview } = item;\r\n        const src = poster_path\r\n            ? `//image.tmdb.org/t/p/w94_and_h141_bestv2${poster_path}`\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n        const shortOverview = overview ? <EllipsisText text={overview} length={170} /> : null;\r\n        return (\r\n            <ItemWrapper key={index}>\r\n                <ItemImgWrapper onClick={() => handleRoute(id)}>\r\n                    <img src={src} alt={name} />\r\n                </ItemImgWrapper>\r\n                <ItemDetailsWrapper>\r\n                    <ItemTitleWrapper>\r\n                        <ItemTitle onClick={() => handleRoute(id)}>{name}</ItemTitle>\r\n                        <ItemDescription>\r\n                            {shortOverview}\r\n                        </ItemDescription>\r\n                    </ItemTitleWrapper>\r\n                </ItemDetailsWrapper>\r\n            </ItemWrapper>\r\n        );\r\n    });\r\n\r\n    return resultItems;\r\n}\r\n\r\nexport default CollectionResults;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchBarWrapper = styled.div`\r\n    border: 1px solid rgba(227, 227, 227, 1);\r\n    border-radius: 8px;\r\n`;\r\n\r\nconst SearchBarHeader = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    color: #fff;\r\n    padding: 20px;\r\n    font-weight: 600;\r\n    font-size: 1.2em;\r\n    border-top-left-radius: 8px;\r\n    border-top-right-radius: 8px;\r\n`;\r\n\r\nconst SearchBarBody = styled.div`\r\n    margin: 5px 0;\r\n`;\r\n\r\nconst SearchBarItem = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    transition: background 200ms;\r\n\r\n    &.active {\r\n        background: rgba(0, 0, 0, 0.08);\r\n    }\r\n\r\n    &:hover {\r\n        background: rgba(0, 0, 0, 0.08);\r\n    }\r\n\r\n    &:hover div {\r\n        background: #fff;\r\n    }\r\n\r\n    & a {\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst SearchBarItemSum = styled.div`\r\n    background: rgba(0, 0, 0, 0.08);\r\n    border-radius: 8px;\r\n    padding: 0 10px;\r\n    transition: background 200ms;\r\n`;\r\n\r\nconst SearchResultsLink = ({\r\n    numberWithCommas,\r\n    collectionTotalResults,\r\n    keywordTotalResults,\r\n    tvTotalResults,\r\n    personTotalResults,\r\n    movieTotalResults,\r\n    companyTotalResults,\r\n}) => {\r\n    return (\r\n        <SearchBarWrapper>\r\n            <SearchBarHeader>Результаты поиска</SearchBarHeader>\r\n            <SearchBarBody>\r\n                <SearchBarItem>\r\n                    <Link to=\"/search/tv\">Сериалы</Link>\r\n                    <SearchBarItemSum>{numberWithCommas(tvTotalResults)}</SearchBarItemSum>\r\n                </SearchBarItem>\r\n                <SearchBarItem>\r\n                    <Link to=\"/search/person\">Люди</Link>\r\n                    <SearchBarItemSum>{numberWithCommas(personTotalResults)}</SearchBarItemSum>\r\n                </SearchBarItem>\r\n                <SearchBarItem>\r\n                    <Link to=\"/search/movie\">Фильмы</Link>\r\n                    <SearchBarItemSum>{numberWithCommas(movieTotalResults)}</SearchBarItemSum>\r\n                </SearchBarItem>\r\n                <SearchBarItem>\r\n                    <Link to=\"/search/company\">Компании</Link>\r\n                    <SearchBarItemSum>{numberWithCommas(companyTotalResults)}</SearchBarItemSum>\r\n                </SearchBarItem>\r\n                <SearchBarItem>\r\n                    <Link to=\"/search/keywords\">Ключевые слова</Link>\r\n                    <SearchBarItemSum>{numberWithCommas(keywordTotalResults)}</SearchBarItemSum>\r\n                </SearchBarItem>\r\n                <SearchBarItem>\r\n                    <Link to=\"/search/collection\">Коллекции</Link>\r\n                    <SearchBarItemSum>{numberWithCommas(collectionTotalResults)}</SearchBarItemSum>\r\n                </SearchBarItem>\r\n            </SearchBarBody>\r\n        </SearchBarWrapper>\r\n    );\r\n};\r\n\r\nexport default SearchResultsLink;\r\n","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchBarHeader = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    color: #fff;\r\n    font-weight: 600;\r\n    font-size: 1.2em;\r\n    padding: 10px 20px;\r\n    max-width: 100vw;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst SearchBarBody = styled.div`\r\n    margin: 5px 0;\r\n    overflow: scroll;\r\n    padding-bottom: 10px;\r\n\r\n    & div {\r\n        display: flex;\r\n    }\r\n`;\r\n\r\nconst SearchBarItem = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n    transition: background 200ms;\r\n    white-space: nowrap;\r\n\r\n    &.active {\r\n        color: rgb(1, 180, 228);\r\n        font-weight: 600;\r\n    }\r\n\r\n    &.active span {\r\n        border: 1px solid rgb(1, 180, 228);\r\n    }\r\n\r\n    & a {\r\n        color: #000;\r\n    }\r\n\r\n    & span {\r\n        border-radius: 6px;\r\n        border: 1px solid rgba(0, 0, 0, 0.08);\r\n        padding: 0 10px;\r\n        transition: background 200ms;\r\n        margin-left: 5px;\r\n        color: rgba(0, 0, 0, 0.5);\r\n    }\r\n`;\r\n\r\nconst SearchResultsLinkMobile = ({\r\n    numberWithCommas,\r\n    collectionTotalResults,\r\n    keywordTotalResults,\r\n    tvTotalResults,\r\n    personTotalResults,\r\n    movieTotalResults,\r\n    companyTotalResults,\r\n}) => {\r\n    const ref = useRef(null);\r\n\r\n    const onToggleActive = (event) => {\r\n        Array.from(ref.current.children).forEach((item, index) => {\r\n            if (event.target && item.className.includes(\"active\")) {\r\n                console.log(event.target)\r\n            } else if (event.currentTarget && !(item.className.includes(\"active\"))) {\r\n                // item.className = item.className.replace(\" active\", \"\");\r\n                // console.log(item)\r\n                console.log(event.currentTarget)\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <SearchBarHeader>\r\n                <div>Результаты поиска</div>\r\n            </SearchBarHeader>\r\n            <SearchBarBody>\r\n                <div ref={ref}>\r\n                    <SearchBarItem \r\n                        className=\"active\" \r\n                        onClick={onToggleActive}\r\n                    >\r\n                        <Link to=\"/search/tv\">Сериалы</Link>\r\n                        <span>{numberWithCommas(tvTotalResults)}</span>\r\n                    </SearchBarItem>\r\n                    <SearchBarItem\r\n                        onClick={onToggleActive}\r\n                    >\r\n                        <Link to=\"/search/person\">Люди</Link>\r\n                        <span>{numberWithCommas(personTotalResults)}</span>\r\n                    </SearchBarItem>\r\n                    <SearchBarItem>\r\n                        <Link to=\"/search/movie\">Фильмы</Link>\r\n                        <span>{numberWithCommas(movieTotalResults)}</span>\r\n                    </SearchBarItem>\r\n                    <SearchBarItem>\r\n                        <Link to=\"/search/company\">Компании</Link>\r\n                        <span>{numberWithCommas(companyTotalResults)}</span>\r\n                    </SearchBarItem>\r\n                    <SearchBarItem>\r\n                        <Link to=\"/search/keywords\">Ключевые слова</Link>\r\n                        <span>{numberWithCommas(keywordTotalResults)}</span>\r\n                    </SearchBarItem>\r\n                    <SearchBarItem>\r\n                        <Link to=\"/search/collection\">Коллекции</Link>\r\n                        <span>{numberWithCommas(collectionTotalResults)}</span>\r\n                    </SearchBarItem>\r\n                </div>\r\n            </SearchBarBody>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchResultsLinkMobile;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { TVResults, PersonResults, MovieResults, CompanyResults, KeywordResults, CollectionResults } from \"./index\";\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst SearchRoutes = ({\r\n    tvLoading,\r\n    tvResults,\r\n    tvPage,\r\n    tvTotalPages,\r\n    personResults,\r\n    personPage,\r\n    personTotalPages,\r\n    personLoading,\r\n    movieLoading,\r\n    movieResults,\r\n    moviePage,\r\n    movieTotalPages,\r\n    companyResults,\r\n    companyPage,\r\n    companyTotalPages,\r\n    companyLoading,\r\n    keywordLoading,\r\n    keywordResults,\r\n    keywordPage,\r\n    keywordTotalPages,\r\n    collectionLoading,\r\n    collectionPage,\r\n    collectionResults,\r\n    collectionTotalPages,\r\n    searchValue,\r\n    loadMoreTVResults,\r\n    loadMorePersonResults,\r\n    loadMoreMovieResults,\r\n    loadMoreCompanyResults,\r\n    loadMoreKeywordResults,\r\n    loadMoreCollectionResults\r\n}) => {\r\n    const value = searchValue || localStorage.getItem(\"searchValue\");\r\n    const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n    const size = useWindowSize();\r\n\r\n\r\n    return (\r\n        <Switch>\r\n            <Route\r\n                exact\r\n                path=\"/search/tv\"\r\n                render={({ history }) => {\r\n                    return (\r\n                        <TVResults\r\n                            history={history}\r\n                            results={tvResults}\r\n                            page={tvPage}\r\n                            totalPages={tvTotalPages}\r\n                            loading={tvLoading}\r\n                            loadMoreResults={loadMoreTVResults}\r\n                            searchValue={valueWithoutSpaces}\r\n                            size={size}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n            <Route\r\n                exact\r\n                path=\"/search/person\"\r\n                render={({ history }) => {\r\n                    return (\r\n                        <PersonResults\r\n                            history={history}\r\n                            results={personResults}\r\n                            page={personPage}\r\n                            totalPages={personTotalPages}\r\n                            loading={personLoading}\r\n                            loadMoreResults={loadMorePersonResults}\r\n                            searchValue={valueWithoutSpaces}\r\n                            size={size}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n            <Route\r\n                exact\r\n                path=\"/search/movie\"\r\n                render={({ history }) => {\r\n                    return (\r\n                        <MovieResults\r\n                            history={history}\r\n                            results={movieResults}\r\n                            page={moviePage}\r\n                            totalPages={movieTotalPages}\r\n                            loading={movieLoading}\r\n                            loadMoreResults={loadMoreMovieResults}\r\n                            searchValue={valueWithoutSpaces}\r\n                            size={size}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n            <Route\r\n                exact\r\n                path=\"/search/company\"\r\n                render={({ history }) => {\r\n                    return (\r\n                        <CompanyResults\r\n                            history={history}\r\n                            results={companyResults}\r\n                            page={companyPage}\r\n                            totalPages={companyTotalPages}\r\n                            loading={companyLoading}\r\n                            loadMoreResults={loadMoreCompanyResults}\r\n                            searchValue={valueWithoutSpaces}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n            <Route\r\n                exact\r\n                path=\"/search/keywords\"\r\n                render={({ history }) => {\r\n                    return (\r\n                        <KeywordResults\r\n                            history={history}\r\n                            results={keywordResults}\r\n                            page={keywordPage}\r\n                            totalPages={keywordTotalPages}\r\n                            loading={keywordLoading}\r\n                            loadMoreResults={loadMoreKeywordResults}\r\n                            searchValue={valueWithoutSpaces}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n            <Route\r\n                exact\r\n                path=\"/search/collection\"\r\n                render={({ history }) => {\r\n                    return (\r\n                        <CollectionResults\r\n                            history={history}\r\n                            results={collectionResults}\r\n                            page={collectionPage}\r\n                            totalPages={collectionTotalPages}\r\n                            loading={collectionLoading}\r\n                            loadMoreResults={loadMoreCollectionResults}\r\n                            searchValue={valueWithoutSpaces}\r\n                        />\r\n                    );\r\n                }}\r\n            />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default SearchRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchRoutes from \"./components/searchRoutes\";\r\nimport { SearchResultsLink, SearchResultsLinkMobile } from \"./components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport WithMoviesService from \"../hoc/withMoviesService\";\r\nimport {\r\n    tvSearchRequested,\r\n    tvSearchLoaded,\r\n    tvSearchError,\r\n    personSearchRequested,\r\n    personSearchLoaded,\r\n    personSearchError,\r\n    movieSearchRequested,\r\n    movieSearchLoaded,\r\n    movieSearchError,\r\n    companySearchRequested,\r\n    companySearchLoaded,\r\n    companySearchError,\r\n    keywordSearchRequested,\r\n    keywordSearchLoaded,\r\n    keywordSearchError,\r\n    collectionSearchRequested,\r\n    collectionSearchLoaded,\r\n    collectionSearchError,\r\n    isSearch,\r\n} from \"../../actions/actionsSearchPage/actionSearchPage\";\r\n\r\nclass SearchResultsPage extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            tvPage,\r\n            personPage,\r\n            moviePage,\r\n            companyPage,\r\n            tvSearchRequested,\r\n            tvSearchLoaded,\r\n            tvSearchError,\r\n            personSearchRequested,\r\n            personSearchLoaded,\r\n            personSearchError,\r\n            movieSearchRequested,\r\n            movieSearchLoaded,\r\n            movieSearchError,\r\n            companySearchRequested,\r\n            companySearchLoaded,\r\n            companySearchError,\r\n            keywordPage,\r\n            keywordSearchRequested,\r\n            keywordSearchLoaded,\r\n            keywordSearchError,\r\n            collectionPage,\r\n            collectionSearchRequested,\r\n            collectionSearchLoaded,\r\n            collectionSearchError,\r\n            searchValue,\r\n            isSearch,\r\n        } = this.props;\r\n        const history = createBrowserHistory();\r\n\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        isSearch(value);\r\n\r\n        history.push({\r\n            pathname: \"/search/tv\",\r\n            search: `?page=${tvPage}&query=${valueWithoutSpaces}`,\r\n        });\r\n\r\n        tvSearchRequested();\r\n        personSearchRequested();\r\n        movieSearchRequested();\r\n        companySearchRequested();\r\n        keywordSearchRequested();\r\n        collectionSearchRequested();\r\n\r\n        this.getSearch(\"tv\", valueWithoutSpaces, tvPage, tvSearchLoaded, tvSearchError);\r\n        this.getSearch(\"person\", valueWithoutSpaces, personPage, personSearchLoaded, personSearchError);\r\n        this.getSearch(\"movie\", valueWithoutSpaces, moviePage, movieSearchLoaded, movieSearchError);\r\n        this.getSearch(\"company\", valueWithoutSpaces, companyPage, companySearchLoaded, companySearchError);\r\n        this.getSearch(\"keyword\", valueWithoutSpaces, keywordPage, keywordSearchLoaded, keywordSearchError);\r\n        this.getSearch(\"collection\", valueWithoutSpaces, collectionPage, collectionSearchLoaded, collectionSearchError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { isSearch } = this.props;\r\n        isSearch(\"\");\r\n    }\r\n\r\n    getSearch = (type, searchValue, page, handleSuccess, handleError) => {\r\n        const { MoviesService } = this.props;\r\n        MoviesService.getSearchByName(type, searchValue, page)\r\n            .then((res) => {\r\n                const payload = {\r\n                    results: res.results,\r\n                    totalPages: res.total_pages,\r\n                    page: res.page,\r\n                    totalResults: res.total_results,\r\n                };\r\n                handleSuccess(payload);\r\n            })\r\n            .catch((error) => handleError());\r\n    };\r\n\r\n    loadMoreTVResults = (page) => {\r\n        const { searchValue, tvSearchLoaded, tvSearchError } = this.props;\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        this.getSearch(\"tv\", valueWithoutSpaces, page, tvSearchLoaded, tvSearchError);\r\n    };\r\n\r\n    loadMorePersonResults = (page) => {\r\n        const { searchValue, personSearchLoaded, personSearchError } = this.props;\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        this.getSearch(\"person\", valueWithoutSpaces, page, personSearchLoaded, personSearchError);\r\n    };\r\n\r\n    loadMoreMovieResults = (page) => {\r\n        const { searchValue, movieSearchLoaded, movieSearchError } = this.props;\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        this.getSearch(\"movie\", valueWithoutSpaces, page, movieSearchLoaded, movieSearchError);\r\n    };\r\n\r\n    loadMoreCompanyResults = (page) => {\r\n        const { searchValue, companySearchLoaded, companySearchError } = this.props;\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        this.getSearch(\"company\", valueWithoutSpaces, page, companySearchLoaded, companySearchError);\r\n    };\r\n\r\n    loadMoreKeywordResults = (page) => {\r\n        const { searchValue, keywordSearchLoaded, keywordSearchError } = this.props;\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        this.getSearch(\"keyword\", valueWithoutSpaces, page, keywordSearchLoaded, keywordSearchError);\r\n    };\r\n\r\n    loadMoreCollectionResults = (page) => {\r\n        const { searchValue, collectionSearchLoaded, collectionSearchError } = this.props;\r\n        const value = searchValue || localStorage.getItem(\"searchValue\");\r\n        const valueWithoutSpaces = value.replace(/ /g, \"%20\");\r\n\r\n        this.getSearch(\"collection\", valueWithoutSpaces, page, collectionSearchLoaded, collectionSearchError);\r\n    };\r\n\r\n    numberWithCommas = (x) => {\r\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            tvTotalResults,\r\n            personTotalResults,\r\n            movieTotalResults,\r\n            tvLoading,\r\n            tvResults,\r\n            tvPage,\r\n            tvTotalPages,\r\n            personResults,\r\n            personPage,\r\n            personTotalPages,\r\n            personLoading,\r\n            movieLoading,\r\n            movieResults,\r\n            moviePage,\r\n            movieTotalPages,\r\n            companyResults,\r\n            companyPage,\r\n            companyTotalPages,\r\n            companyTotalResults,\r\n            companyLoading,\r\n            keywordTotalResults,\r\n            keywordLoading,\r\n            keywordResults,\r\n            keywordPage,\r\n            keywordTotalPages,\r\n            collectionLoading,\r\n            collectionPage,\r\n            collectionResults,\r\n            collectionTotalPages,\r\n            collectionTotalResults,\r\n            searchValue,\r\n            width,\r\n        } = this.props;\r\n\r\n        const linkTemplate =\r\n            width < 415 ? (\r\n                <SearchResultsLinkMobile\r\n                    numberWithCommas={this.numberWithCommas}\r\n                    collectionTotalResults={collectionTotalResults}\r\n                    keywordTotalResults={keywordTotalResults}\r\n                    tvTotalResults={tvTotalResults}\r\n                    personTotalResults={personTotalResults}\r\n                    movieTotalResults={movieTotalResults}\r\n                    companyTotalResults={companyTotalResults}\r\n                />\r\n            ) : (\r\n                <SearchResultsLink\r\n                    numberWithCommas={this.numberWithCommas}\r\n                    collectionTotalResults={collectionTotalResults}\r\n                    keywordTotalResults={keywordTotalResults}\r\n                    tvTotalResults={tvTotalResults}\r\n                    personTotalResults={personTotalResults}\r\n                    movieTotalResults={movieTotalResults}\r\n                    companyTotalResults={companyTotalResults}\r\n                />\r\n            );\r\n\r\n        return (\r\n            <Container className=\"my-4\">\r\n                <Row className=\"flex-column flex-xl-row\">\r\n                    <Col className=\"col-xl-3 col-12 px-0 px-lg-1\">\r\n                        {linkTemplate}\r\n                    </Col>\r\n                    <Col className=\"d-flex flex-column align-items-center\">\r\n                        <SearchRoutes\r\n                            tvLoading={tvLoading}\r\n                            tvResults={tvResults}\r\n                            tvPage={tvPage}\r\n                            tvTotalPages={tvTotalPages}\r\n                            personResults={personResults}\r\n                            personPage={personPage}\r\n                            personTotalPages={personTotalPages}\r\n                            personLoading={personLoading}\r\n                            movieLoading={movieLoading}\r\n                            movieResults={movieResults}\r\n                            moviePage={moviePage}\r\n                            movieTotalPages={movieTotalPages}\r\n                            companyResults={companyResults}\r\n                            companyPage={companyPage}\r\n                            companyTotalPages={companyTotalPages}\r\n                            companyLoading={companyLoading}\r\n                            keywordLoading={keywordLoading}\r\n                            keywordResults={keywordResults}\r\n                            keywordPage={keywordPage}\r\n                            keywordTotalPages={keywordTotalPages}\r\n                            collectionLoading={collectionLoading}\r\n                            collectionPage={collectionPage}\r\n                            collectionResults={collectionResults}\r\n                            collectionTotalPages={collectionTotalPages}\r\n                            searchValue={searchValue}\r\n                            loadMoreTVResults={this.loadMoreTVResults}\r\n                            loadMorePersonResults={this.loadMorePersonResults}\r\n                            loadMoreMovieResults={this.loadMoreMovieResults}\r\n                            loadMoreCompanyResults={this.loadMoreCompanyResults}\r\n                            loadMoreKeywordResults={this.loadMoreKeywordResults}\r\n                            loadMoreCollectionResults={this.loadMoreCollectionResults}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        tvResults,\r\n        tvPage,\r\n        tvTotalPages,\r\n        tvLoading,\r\n        tvTotalResults,\r\n        personResults,\r\n        personPage,\r\n        personTotalPages,\r\n        personLoading,\r\n        personTotalResults,\r\n        movieLoading,\r\n        movieResults,\r\n        moviePage,\r\n        movieTotalPages,\r\n        movieTotalResults,\r\n        companyResults,\r\n        companyPage,\r\n        companyTotalPages,\r\n        companyTotalResults,\r\n        companyLoading,\r\n        keywordLoading,\r\n        keywordResults,\r\n        keywordPage,\r\n        keywordTotalPages,\r\n        keywordTotalResults,\r\n        collectionLoading,\r\n        collectionResults,\r\n        collectionPage,\r\n        collectionTotalPages,\r\n        collectionTotalResults,\r\n        searchValue,\r\n    } = state.searchPageReducer;\r\n    return {\r\n        tvResults,\r\n        tvPage,\r\n        tvTotalPages,\r\n        tvLoading,\r\n        tvTotalResults,\r\n        personResults,\r\n        personPage,\r\n        personTotalPages,\r\n        personLoading,\r\n        personTotalResults,\r\n        movieLoading,\r\n        movieResults,\r\n        moviePage,\r\n        movieTotalPages,\r\n        movieTotalResults,\r\n        companyResults,\r\n        companyPage,\r\n        companyTotalPages,\r\n        companyTotalResults,\r\n        companyLoading,\r\n        keywordLoading,\r\n        keywordResults,\r\n        keywordPage,\r\n        keywordTotalPages,\r\n        keywordTotalResults,\r\n        collectionLoading,\r\n        collectionResults,\r\n        collectionPage,\r\n        collectionTotalPages,\r\n        collectionTotalResults,\r\n        searchValue,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    tvSearchRequested,\r\n    tvSearchLoaded,\r\n    tvSearchError,\r\n    personSearchRequested,\r\n    personSearchLoaded,\r\n    personSearchError,\r\n    movieSearchRequested,\r\n    movieSearchLoaded,\r\n    movieSearchError,\r\n    companySearchRequested,\r\n    companySearchLoaded,\r\n    companySearchError,\r\n    keywordSearchRequested,\r\n    keywordSearchLoaded,\r\n    keywordSearchError,\r\n    collectionSearchRequested,\r\n    collectionSearchLoaded,\r\n    collectionSearchError,\r\n    isSearch,\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(SearchResultsPage));\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../shared/header/header\";\r\nimport { PopularPage, PlayingNowPage, TopRatedPage, UpcomingPage } from \"../moviesPage\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport MovieDetails from \"../moviesPage/components/movieDetailsPage/movieDetails\";\r\nimport ScrollToTop from \"../shared/scrollToTop/scrollToTop\";\r\nimport MoviesByKeyword from \"../moviesByKeywordsPage/moviesByKeyword\";\r\nimport FullCast from \"../fullCastPage/fullCastPage\";\r\nimport PersonBiography from \"../personDetailsPage/personBiography\";\r\nimport { TVPopularPage, OnTheAirPage, TVTopRatedPage, AiringTodayPage } from \"../TVPages\";\r\nimport PersonPage from \"../popularPersonPage/popularPersonPage\";\r\nimport CollectionPage from \"../collectionPage/collectionPage\";\r\nimport HomePage from \"../homePage/homePage\";\r\nimport HeaderMobile from \"../shared/header/headerMob\";\r\nimport SearchResultsPage from \"../searchResultsPage/searchResultsPage\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    render() {\r\n        const { width } = this.state;\r\n        const header = width < 415 ? <HeaderMobile /> : <Header />;\r\n        return (\r\n            <Router>\r\n                {header}\r\n                <ScrollToTop>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/movie-database\" />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie-database\"\r\n                            render={() => {\r\n                                return <HomePage title=\"Movie Database\" />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/person\"\r\n                            render={({ history }) => {\r\n                                return <PersonPage history={history} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/popular\"\r\n                            render={({ history }) => {\r\n                                return <PopularPage history={history} title=\"Популярные фильмы\" />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/playing-now\"\r\n                            render={({ history }) => {\r\n                                return <PlayingNowPage history={history} title=\"Сейчас смотрят фильмы\" />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/upcoming\"\r\n                            render={({ history }) => {\r\n                                return <UpcomingPage history={history} title=\"Ожидамые фильмы\" />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/top-rated\"\r\n                            render={({ history }) => {\r\n                                return <TopRatedPage history={history} title=\"Лучшие фильмы\" />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/collection/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <CollectionPage collectionId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/popular/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/playing-now/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/upcoming/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/top-rated/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/popular/\"\r\n                            render={({ history }) => {\r\n                                return <TVPopularPage history={history} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/airing_today\"\r\n                            render={({ history }) => {\r\n                                return <AiringTodayPage history={history} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/on_the_air\"\r\n                            render={({ history }) => {\r\n                                return <OnTheAirPage history={history} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/top-rated\"\r\n                            render={({ history }) => {\r\n                                return <TVTopRatedPage history={history} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/popular/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/airing_today/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/on_the_air/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/top-rated/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/:id/casts\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <FullCast movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/:id/casts\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <FullCast movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            path=\"/keywords/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MoviesByKeyword keywordId={id} history={history} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/movie/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/tv/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <MovieDetails movieId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <Route\r\n                            exact\r\n                            path=\"/person/:id\"\r\n                            render={({ match, history }) => {\r\n                                const { id } = match.params;\r\n                                return <PersonBiography personId={id} history={history} width={width} />;\r\n                            }}\r\n                        />\r\n                        <SearchResultsPage width={width}/>\r\n                    </Switch>\r\n                </ScrollToTop>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n","import {actionTypes} from '../../actions/actionsMoviesTVPage';\r\n\r\nconst initialState = {\r\n    popularMovies: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    error: false,\r\n    popularPage: 0, \r\n    playingNowMovies: [],\r\n    playingNowPage: 0,\r\n    upcomingMovies: [],\r\n    upcomingPage: 0,\r\n    topRatedMovies: [],\r\n    topRatedPage: 0,\r\n    totalPages: 0\r\n}\r\n\r\nconst moviePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                popularMovies: action.payload,\r\n                loading: false,\r\n                popularPage: state.popularPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_ERROR: \r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularMovies: [...state.popularMovies, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: action.payload,\r\n                loading: false,\r\n                playingNowPage: state.playingNowPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: [...state.playingNowMovies, ...action.payload],\r\n                loadingMore: false,\r\n                playingNowPage: state.playingNowPage + 1\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                upcomingMovies: action.payload,\r\n                loading: false,\r\n                upcomingPage: state.upcomingPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                upcomingMovies: [...state.upcomingMovies, ...action.payload],\r\n                loadingMore: false,\r\n                upcomingPage: state.upcomingPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                topRatedMovies: action.payload,\r\n                loading: false,\r\n                topRatedPage: state.topRatedPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedMovies: [...state.topRatedMovies, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviePageReducer;","import {actionTypes} from '../../actions/actionsMoviesTVPage';\r\n\r\nconst initialState = {\r\n    popularTv: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    popularPage: 0,\r\n    error: false,\r\n    airingTodayTv: [],\r\n    airingTodayPage: 0,\r\n    onTheAirTv: [],\r\n    onTheAirPage: 0,\r\n    topRatedTv: [],\r\n    topRatedPage: 0\r\n}\r\n\r\nconst tvPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                popularTv: action.payload,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.POPULAR_TV_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularTv: [...state.popularTv, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                airingTodayTv: action.payload,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                airingTodayTv: [...state.airingTodayTv, ...action.payload],\r\n                loadingMore: false,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                onTheAirTv: action.payload,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                onTheAirTv: [...state.onTheAirTv, ...action.payload],\r\n                loadingMore: false,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topRatedTv: action.payload,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedTv: [...state.topRatedTv, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }   \r\n}\r\n\r\nexport default tvPageReducer;","import {actionTypes} from '../../actions/actionsPopularPersonPage';\r\n\r\nconst initialState = {\r\n    person: [],\r\n    loading: true,\r\n    page: 1,\r\n    error: false,\r\n    totalPages: 0\r\n}\r\n\r\nconst popularPersonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    \r\n        case actionTypes.POPULAR_PERSON_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_PERSON_LOADED: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                totalPages: action.payload.totalPages,\r\n                page: action.payload.page\r\n            }\r\n        case actionTypes.POPULAR_PERSON_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default popularPersonReducer;","import {actionTypes} from '../../actions/actionsMovieDetailsPage';\r\n\r\nconst initialState = {\r\n    movieDetails: [],\r\n    loading: true,\r\n    error: false,\r\n    casts: null,\r\n    loadingCast: true,\r\n    keywords: null,\r\n    loadingKeywords: true,\r\n    modalWindow: false,\r\n    video: null,\r\n    socialLink: {},\r\n    collection: {},\r\n    recommendations: [],\r\n}\r\n\r\nconst movieDetailsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.MOVIE_DETAILS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movieDetails: action.payload\r\n            }\r\n        case actionTypes.CAST_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingCast: true\r\n            }\r\n        case actionTypes.CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                casts: action.payload,\r\n                loadingCast: false\r\n            }\r\n        case actionTypes.KEYWORDS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: true\r\n            }\r\n        case actionTypes.KEYWORDS_LOADED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: false,\r\n                keywords: action.payload\r\n            }\r\n        case actionTypes.MODAL_WINDOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                modalWindow: !state.modalWindow\r\n            }\r\n        case actionTypes.VIDEO_LOADED:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n        case actionTypes.SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.RECOMMENDATIONS_LOADED:\r\n            return {\r\n                ...state,\r\n                recommendations: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default movieDetailsReducer;","import {actionTypes} from '../../actions/actionsHomePage';\r\n\r\nconst initialState = {\r\n    inTrend: [],\r\n    loading: true,\r\n    error: false,\r\n}\r\n\r\nconst homePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.IN_TREND_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.IN_TREND_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                inTrend: action.payload\r\n            }\r\n        case actionTypes.IN_TREND_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default homePageReducer;","import {actionTypes} from '../../actions/actionsCollectionPage';\r\n\r\nconst initialState = {\r\n    collection: null,\r\n    loading: true,\r\n    error: false,\r\n    genres: null,\r\n    genresLoading: true,\r\n    cast: [],\r\n    crew: [],\r\n    revenue: 0,\r\n}\r\n\r\nconst collectionPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.COLLECTION_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        case actionTypes.GENRES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                genresLoading: true\r\n            }\r\n        case actionTypes.GENRES_LOADED:\r\n            return {\r\n                ...state,\r\n                genresLoading: false,\r\n                genres: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                revenue: action.payload.reduce((sum, current) => sum + current, 0)\r\n            }\r\n        case actionTypes.COLLECTION_CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                cast: action.payload.cast,\r\n                crew: action.payload.crew\r\n            }\r\n        default:\r\n            return state\r\n    }  \r\n}\r\n\r\nexport default collectionPageReducer;","import {actionTypes} from '../../actions/actionsPersonDetailsPage';\r\n\r\nconst initialState = {\r\n    person: null,\r\n    loading: true,\r\n    cast: null,\r\n    crew: null,\r\n    socialLink: null,\r\n    socialLinkLoading: true,\r\n    error: false\r\n}\r\n\r\nconst personDetailsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PERSON_BIOGRAPHY_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PERSON_BIOGRAPHY_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                cast: action.payload.cast,\r\n                crew: action.payload.crew\r\n            }\r\n        case actionTypes.PERSON_BIOGRAPHY_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true\r\n            }\r\n        case actionTypes.PERSON_SOCIAL_LINK_REQUESTED:\r\n            return {\r\n                ...state,\r\n                socialLinkLoading: true\r\n            }\r\n        case actionTypes.PERSON_SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLinkLoading: false,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.PERSON_SOCIAL_LINK_ERROR:\r\n            return {\r\n                ...state,\r\n                socialLinkLoading: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default personDetailsPageReducer;","import {actionTypes} from '../../actions/actionsSearchPage';\r\n\r\nconst initialState = {\r\n    tvLoading: true,\r\n    tvError: false,\r\n    tvResults: [],\r\n    tvPage: 1,  \r\n    tvTotalPages: 0,\r\n    tvTotalResults: 0,\r\n    personResults: [],\r\n    personPage: 1,\r\n    personTotalPages: 0,\r\n    personTotalResults: 0,\r\n    personLoading: true,\r\n    personError: false,\r\n    movieLoading: true,\r\n    movieError: false,\r\n    movieResults: [],\r\n    moviePage: 1,  \r\n    movieTotalPages: 0,\r\n    movieTotalResults: 0,\r\n    companyLoading: true,\r\n    companyError: false,\r\n    companyResults: [],\r\n    companyPage: 1,\r\n    companyTotalPages: 0,\r\n    companyTotalResults: 0,\r\n    keywordLoading: true,\r\n    keywordError: false,\r\n    keywordResults: [],\r\n    keywordPage: 1,\r\n    keywordTotalPages: 0,\r\n    keywordTotalResults: 0,\r\n    collectionLoading: true,\r\n    collectionError: false,\r\n    collectionResults: [],\r\n    collectionPage: 1,\r\n    collectionTotalPages: 0,\r\n    collectionTotalResults: 0,\r\n    searchValue: ''\r\n}\r\n\r\nconst searchPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.TV_SEARCH_REQUESTED:\r\n            return {\r\n                ...state,\r\n                tvLoading: true\r\n            }\r\n        case actionTypes.TV_SEARCH_LOADED: \r\n            return {\r\n                ...state,\r\n                tvLoading: false,\r\n                tvResults: action.payload.results,\r\n                tvTotalPages: action.payload.totalPages,\r\n                tvPage: action.payload.page,\r\n                tvTotalResults: action.payload.totalResults\r\n            }\r\n        case actionTypes.TV_SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                tvError: true\r\n            }\r\n        case actionTypes.PERSON_SEARCH_REQUESTED:\r\n            return {\r\n                ...state,\r\n                personLoading: true\r\n            }\r\n        case actionTypes.PERSON_SEARCH_LOADED:\r\n            return {\r\n                ...state,\r\n                personLoading: false,\r\n                personResults: action.payload.results,\r\n                personTotalPages: action.payload.totalPages,\r\n                personPage: action.payload.page,\r\n                personTotalResults: action.payload.totalResults\r\n            }\r\n        case actionTypes.PERSON_SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                personError: true\r\n            }\r\n        case actionTypes.MOVIE_SEARCH_REQUESTED:\r\n            return {\r\n                ...state,\r\n                movieLoading: true\r\n            }\r\n        case actionTypes.MOVIE_SEARCH_LOADED:\r\n            return {\r\n                ...state,\r\n                movieLoading: false,\r\n                movieResults: action.payload.results,\r\n                movieTotalPages: action.payload.totalPages,\r\n                moviePage: action.payload.page,\r\n                movieTotalResults: action.payload.totalResults\r\n            }\r\n        case actionTypes.MOVIE_SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                movieError: true\r\n            }\r\n        case actionTypes.COMPANY_SEARCH_REQUESTED:\r\n            return {\r\n                ...state,\r\n                companyLoading: true\r\n            }\r\n        case actionTypes.COMPANY_SEARCH_LOADED:\r\n            return {\r\n                ...state,\r\n                companyLoading: false,\r\n                companyResults: action.payload.results,\r\n                companyPage: action.payload.page,\r\n                companyTotalPages: action.payload.totalPages,\r\n                companyTotalResults: action.payload.totalResults\r\n            }\r\n        case actionTypes.COMPANY_SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                companyError: true\r\n            }\r\n        case actionTypes.KEYWORD_SEARCH_REQUESTED:\r\n            return {\r\n                ...state,\r\n                keywordLoading: true\r\n            }\r\n        case actionTypes.KEYWORD_SEARCH_LOADED:\r\n            return {\r\n                ...state,\r\n                keywordLoading: false,\r\n                keywordResults: action.payload.results,\r\n                keywordPage: action.payload.page,\r\n                keywordTotalPages: action.payload.totalPages,\r\n                keywordTotalResults: action.payload.totalResults\r\n            }\r\n        case actionTypes.KEYWORD_SEARCH_ERROR:\r\n            return {\r\n                ...state,\r\n                keywordError: false\r\n            }\r\n        case actionTypes.COLLECTION_SEARCH_REQUESTED:\r\n            return {\r\n                ...state,\r\n                collectionLoading: true\r\n            }\r\n        case actionTypes.COLLECTION_SEARCH_LOADED:\r\n            return {\r\n                ...state,\r\n                collectionLoading: false,\r\n                collectionResults: action.payload.results,\r\n                collectionPage: action.payload.page,\r\n                collectionTotalPages: action.payload.totalPages,\r\n                collectionTotalResults: action.payload.totalResults\r\n            }\r\n        case actionTypes.COLLECTION_SEARCH_ERROR: \r\n            return {\r\n                ...state,\r\n                collectionError: true\r\n            }\r\n        case actionTypes.IS_SEARCH:\r\n            localStorage.setItem('searchValue', action.payload);\r\n            return {\r\n                ...state,\r\n                searchValue: action.payload\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default searchPageReducer;","import { combineReducers } from 'redux'\r\nimport moviePageReducer from './reducers/moviePageReducers';\r\nimport tvPageReducer from './reducers/tvPageReducer';\r\nimport popularPersonReducer from './reducers/popularPersonReducer';\r\nimport movieDetailsReducer from './reducers/movieDetailsReducer';\r\nimport homePageReducer from './reducers/homePageReducer';\r\nimport collectionPageReducer from './reducers/collectionPageReducer';\r\nimport personDetailsPageReducer from './reducers/personDetailsPageReducer';\r\nimport searchPageReducer from './reducers/searchPageReducer';\r\n\r\nexport default combineReducers({\r\n    moviePageReducer,\r\n    tvPageReducer,\r\n    popularPersonReducer,\r\n    movieDetailsReducer,\r\n    homePageReducer,\r\n    collectionPageReducer,\r\n    personDetailsPageReducer,\r\n    searchPageReducer\r\n})","import {createStore} from 'redux';\r\nimport combineReducers from './reducers/combineReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(combineReducers, composeWithDevTools());\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nconst ErrorWrapper = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    max-width: 500px;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n    font-size: 2em;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst ErrorButton = styled.button`\r\n    font-size: 1.5em;\r\n    border: none;\r\n    background: none;  \r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    & img {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n`;\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = createBrowserHistory();\r\n        const { hasError } = this.state;\r\n\r\n        if (hasError) {\r\n            return (\r\n                <ErrorWrapper>\r\n                    <ErrorMessage>Что-то пошло не так...</ErrorMessage>\r\n                    <ErrorButton onClick={() => history.go(0)}>\r\n                        <img src={process.env.PUBLIC_URL + \"/assets/loading.png\"} alt='re-fresh'/>\r\n                    </ErrorButton>\r\n                </ErrorWrapper>\r\n            );\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MoviesServices from './services/services';\nimport {Provider} from 'react-redux';\nimport MoviesServicesContext from './components/moviesContext/moviesContext';\nimport store from './store';\nimport ErrorBoundry from './components/errorComponent/errorComponent';\n\nconst moviesServices = new MoviesServices();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<MoviesServicesContext.Provider value={moviesServices}>\n\t\t\t\t\t<App/>\n\t\t\t\t</MoviesServicesContext.Provider>\n\t\t\t</ErrorBoundry>\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}