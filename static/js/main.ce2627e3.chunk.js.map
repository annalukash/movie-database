{"version":3,"sources":["components/shared/header/header.js","components/shared/spinner/spinner.js","components/shared/rate.js","components/shared/spinner/loadMoreSpinner.js","components/shared/useWindowSize/useWindowSize.js","components/moviesPage/components/movieList.js","components/moviesContext/moviesContext.js","components/hoc/withMoviesService.js","actions/actionTypes.js","actions/actions.js","components/moviesPage/popularPage.js","components/moviesPage/playingNowPage.js","components/moviesPage/topRatedPage.js","components/moviesPage/upcomingPage.js","components/moviesPage/components/movieDetailsPage/components/casts.js","components/shared/youtubeVideo/youtubeVideo.js","components/moviesPage/components/movieDetailsPage/components/modalWindow.js","components/moviesPage/components/movieDetailsPage/components/details.js","components/moviesPage/components/movieDetailsPage/components/originalDetails.js","components/moviesPage/components/movieDetailsPage/components/keywords.js","components/moviesPage/components/movieDetailsPage/components/collection.js","components/moviesPage/components/movieDetailsPage/components/recommendations.js","components/moviesPage/components/movieDetailsPage/movieDetails.js","components/shared/scrollToTop/scrollToTop.js","services/services.js","components/moviesByKeywordsPage/components/movieListByKeywords.js","components/moviesByKeywordsPage/moviesByKeyword.js","components/fullCastPage/components/fullCastList.js","components/fullCastPage/castsPage.js","components/personDetailsPage/components/personDetailsCasts.js","components/personDetailsPage/components/personDetailsCrew.js","components/personDetailsPage/components/crewByDepartments.js","components/personDetailsPage/components/personDetails.js","components/personDetailsPage/personBiography.js","components/TVPages/tvPopularPage.js","components/TVPages/airingTodayPage.js","components/TVPages/tvTopRatedPage.js","components/TVPages/onTheAirPage.js","components/popularPersonPage/components/personList.js","components/popularPersonPage/popularPersonPage.js","components/collectionPage/components/collectionCast.js","components/collectionPage/components/collectionDetails.js","components/collectionPage/collectionPage.js","components/shared/toggler/toggler.js","components/homePage/components/inTrend.js","components/homePage/homePage.js","components/shared/header/headerMob.js","components/moviesPage/components/movieDetailsPage/components/mobileComponents/detailsMob.js","components/moviesPage/components/movieDetailsPage/components/mobileComponents/modalWindowMob.js","components/moviesPage/components/movieDetailsPage/movieDetailsMob.js","components/app/app.js","reducers/reducers/moviePageReducers.js","reducers/reducers/tvPageReducer.js","reducers/reducers/popularPersonReducer.js","reducers/reducers/movieDetailsReducer.js","reducers/reducers/homePageReducer.js","reducers/combineReducers.js","store.js","components/errorComponent/errorComponent.js","index.js"],"names":["NavBarWrapper","styled","div","LogoWrapper","LinkWrapper","NavCollapseWrapper","Header","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Spinner","RateWrapper","props","small","static","Rate","vote","isStatic","value","background","backgroundPadding","text","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","LoadMoreSpinner","useWindowSize","useState","width","setWindowSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","ContainerWrapper","size","PosterWrapper","MovieDetailsWrapper","TitleWrapper","ReleaseWrapper","Poster","img","LoadMoreButton","button","MovieList","movies","loading","loadingMore","url","getMovies","history","movieItems","map","item","index","poster_path","release_date","vote_average","name","first_air_date","src","process","Col","key","onClick","push","alt","length","moment","format","Container","Row","loadSpinner","showButton","MoviesServicesContext","React","createContext","WithMoviesService","Wrapped","Consumer","MoviesService","POPULAR_MOVIES_REQUESTED","POPULAR_MOVIES_LOADED","POPULAR_MOVIES_ERROR","POPULAR_MOVIES_MORE_REQUESTED","POPULAR_MOVIES_MORE_LOADED","POPULAR_MOVIES_MORE_ERROR","PLAYING_NOW_MOVIES_REQUESTED","PLAYING_NOW_MOVIES_LOADED","PLAYING_NOW_MOVIES_MORE_REQUESTED","PLAYING_NOW_MOVIES_MORE_LOADED","UPCOMING_MOVIES_REQUESTED","UPCOMING_MOVIES_LOADED","UPCOMING_MOVIES_MORE_REQUESTED","UPCOMING_MOVIES_MORE_LOADED","TOP_RATED_MOVIES_REQUESTED","TOP_RATED_MOVIES_LOADED","TOP_RATED_MOVIES_MORE_REQUESTED","TOP_RATED_MOVIES_MORE_LOADED","POPULAR_TV_REQUESTED","POPULAR_TV_LOADED","POPULAR_TV_ERROR","POPULAR_TV_MORE_REQUESTED","POPULAR_TV_MORE_LOADED","AIRING_TODAY_TV_REQUESTED","AIRING_TODAY_TV_LOADED","AIRING_TODAY_TV_MORE_REQUESTED","AIRING_TODAY_TV_MORE_LOADED","ON_THE_AIR_TV_REQUESTED","ON_THE_AIR_TV_LOADED","ON_THE_AIR_TV_MORE_REQUESTED","ON_THE_AIR_TV_MORE_LOADED","TOP_RATED_TV_REQUESTED","TOP_RATED_TV_LOADED","TOP_RATED_TV_MORE_REQUESTED","TOP_RATED_TV_MORE_LOADED","POPULAR_PERSON_REQUESTED","POPULAR_PERSON_LOADED","POPULAR_PERSON_ERROR","MOVIE_DETAILS_REQUESTED","MOVIE_DETAILS_LOADED","MOVIE_DETAILS_ERROR","CAST_REQUESTED","CAST_LOADED","KEYWORDS_REQUESTED","KEYWORDS_LOADED","MODAL_WINDOW_TOGGLE","VIDEO_LOADED","SOCIAL_LINK_LOADED","COLLECTION_LOADED","RECOMMENDATIONS_LOADED","RATING_REQUESTED","RATING_LOADED","IN_TREND_REQUESTED","IN_TREND_LOADED","IN_TREND_ERROR","popularMoviesError","type","actionTypes","popularTvError","movieDetailsRequested","movieDetailsLoaded","payload","movieDetailsError","castRequested","castLoaded","keywordsRequested","keywordsLoaded","modalWindowToggle","videoLoaded","socialLinkLoaded","collectionLoaded","recommendationsLoaded","ratingRequested","ratingLoaded","PopularPage","loadMovies","success","page","getPopular","then","res","results","catch","error","loadMoreMovies","popularMoviesMoreLoaded","popularMoviesMoreRequested","document","this","popularMoviesRequested","popularMoviesLoaded","location","pathname","Component","mapDispatchToProps","connect","state","moviePageReducer","popularMovies","popularPage","PlayingNowPage","getNowPlaying","playingNowMoviesMoreLoaded","playingNowMoviesMoreRequested","playingNowMoviesRequested","playingNowMoviesLoaded","playingNowMovies","playingNowPage","TopRatedPage","getTopRated","topRatedMoviesMoreRequested","topRatedMoviesMoreLoaded","topRatedMoviesRequested","topRatedMoviesLoaded","topRatedMovies","topRatedPage","UpcomingPage","getUpcoming","upcomingMoviesMoreLoaded","upcomingMoviesMoreRequested","upcomingMoviesRequested","upcomingMoviesLoaded","upcomingMovies","upcomingPage","CarouselWrapper","CastTitle","CastItemWrapper","CastImg","CastName","CastCharacter","PrevButton","NextButton","FullCastWrapper","Cast","carousel","casts","onGoPersonBio","castItem","cast","sort","a","b","order","filter","profile_path","character","renderArrow","isEdge","style","display","itemsToScroll","itemsToShow","focusOnSelect","ref","renderPagination","pages","activePage","slidePrev","slideNext","includes","Trailer","resultItem","video","height","frameBorder","allowFullScreen","controls","Backdrop","TrailerBodyWrapper","TrailerTitleWraper","TrailerCloseButton","ModalWindow","onCloseModal","ImgWrapper","Title","Year","span","DetailsList","IconWrapper","Vote","ActivityList","ul","TrailerWrapper","TrailerTitle","Overview","TagLine","CreatorNameWrapper","Rating","TvCreator","creator","Details","details","movieId","onOpenModal","modalWindow","rating","genres","runtime","tagline","overview","episode_run_time","created_by","rate","find","iso_3166_1","genreToString","genre","join","duration","replace","modal","showTrailer","releaseYear","releaseDate","release_dates","certification","LinkIconWrapper","Link","movie","SocialLinkWrrapper","facebook","twitter","instagram","TvNetwork","networks","networkItem","network","logo","logo_path","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","OriginalDetails","socialLink","original_title","status","budget","revenue","original_language","original_name","homepage","facebook_id","instagram_id","twitter_id","nf","Intl","NumberFormat","movieBudget","movieRevenue","tvNet","href","target","rel","homePage","overlayFacebook","overlayTwitter","overlayInstagram","overlayHomePage","statusMovie","KeywordsWrapper","KeywordItemWrapper","Keywords","keyword","keywordsItem","keywordItem","CollectionWrapper","CollectionContent","bg","CollectionName","CollectionDescription","CollectionButton","Collection","collection","belongs_to_collection","backdrop_path","parts","path","collectionIncludes","hasOwnProperty","part","RecommendationCardWrapper","RecommendationCardImgWrapper","RecommendationCardRelease","RecommendationCardImg","RecommendationCardTitleWrapper","RecommendationCardTitle","RecommendationCardRate","SectionTitle","Recommendation","recommendations","getDetails","getCast","getKeywords","getVideos","getSocailLink","getRecommendations","recommendationItems","getTVDetails","getTVCasts","getTVKeywords","getTVVideos","getTVExternalIds","getTVRecommendations","getMovieDetails","getMovieExternalIds","getMovieRecommendations","handleRouting","BackgroundWrapper","backdrop","MovieDetails","request","response","getCollectionDetails","keywords","getCollection","getRating","showCollection","isBelongToCollection","showRecommendations","isRecommendation","getTVRating","getMovieRating","loadingCast","loadingKeywords","loadingRating","movieDetailsReducer","movieDetails","ScrollToTop","prevProps","scrollTo","children","withRouter","MoviesServices","getResource","fetch","_baseApi","_apiKey","_apiLanguage","json","status_code","getMovieByKeyword","keywordId","getKeywordName","getPersonBiography","personId","biography","combinedMoviesTv","tvId","getTVPopular","getTVAiringToday","getTVTopRated","getTVOnTheAir","getPopularPerson","collectionId","getGenreList","getPersonExternalIds","getInTrend","time","MovieCardWrapper","MovieCardImg","MovieCardContent","MovieCardTitle","MovieCardReleaseDate","MovieCardDescription","HeaderWrapper","KeywordName","MovieQuantity","MovieListByKeywords","totalResults","keywordName","moviesItem","film","MovieListWrapper","ButtonWrapper","MoviesByKeyword","onLoadingMovies","setState","totalPages","onToogleLoading","moviesServices","total_results","total_pages","onLoadingKeywordName","CastNumber","CastItemImg","CastNameWrapper","CastContent","DepartmentTitle","Actors","Crew","crew","CrewDepartment","department","job","MovieName","MovieReleaseYear","MoviePosterImg","MovieContent","ButtonBack","FullCast","onGoBack","goBack","spinnerActors","spinnerCrew","MovieListItemWrapper","hasBorder","ReleaseDate","MovieTitle","LikeCharacter","Character","MoviePreviewButton","CircleHover","show","PopoverImgWrapper","PopoverPoster","PopoverContentWrapper","PopoverTitleWrapper","PopoverTitle","PopoverDescription","PopoverRate","DepartmentListTitle","MovieListContent","FilterWrapper","ClearButton","HistoryItem","date","useHistory","useRef","setShow","setTarget","handleClick","event","toFixed","tvEpisodes","episode_count","container","current","rootClose","onHide","media_type","textEllipsis","yearFormatter","PersonDetailsCasts","setCastItem","filterSelected","setFilterSelected","noDateCasts","sortedCast","previous","Date","allCasts","filteredByMovieType","filteredByTVType","movieQuantity","tvQuantity","arr","next","fullDateToYear","data","onSelect","content","clearButton","DropdownButton","Dropdown","Item","PersonDetailsCrew","noDateCrew","sortedCrew","Department","CrewByDepartments","filteredCrew","production","writing","art","camera","makeUp","crews","directing","editing","lighting","sound","visualEffects","DescriptionWrapper","BioWrapper","BioContent","mainHeight","childRef","PersonalInfo","PersonalInfoItemTitle","PersonalInfoItemSubtitle","AlsoKnowWrapper","ReadMoreButton","FamousCast","PersonDetails","person","isOpen","setOpen","elementHeight","setElementHeight","classNames","element","clientHeight","getElementHeight","gender","alsoKnow","also_known_as","birthday","ageAlive","deathday","diff","ageDead","dateOfDeath","acting","filmCrew","famousCast","known_for_department","place_of_birth","PersonBiography","onLoading","getBiography","getPersonSocailLink","onLoadingLink","spinnerPerson","TVPopularPage","loadTV","loadMoreTv","popularTvMoreRequested","popularTvMoreLoaded","tv","popularTvRequested","popularTvLoaded","tvPageReducer","popularTv","AiringTodayPage","loadMoreTV","airingTodayTvMoreRequested","airingTodayTvMoreLoaded","airingTodayTvRequested","airingTodayTvLoaded","airingTodayTv","airingTodayPage","TVTopRatedPage","topRatedTvTvMoreRequested","topRatedTvTvMoreLoaded","topRatedTvRequested","topRatedTvTvLoaded","topRatedTv","OnTheAirPage","onTheAirTvMoreRequested","onTheAirTvMoreLoaded","onTheAirTvRequested","onTheAirTvLoaded","onTheAirTv","onTheAirPage","PersonItemWrapper","PersonImg","PersonNameWrapper","PersonName","PersonCast","PersonList","getPerson","personItem","known_for","castToString","Pagination","count","boundaryCount","onChange","PersonPage","onServiceRequest","popularPersonError","popularPersonLoaded","search","loadPerson","loadMorePerson","popularPersonRequested","popularPersonReducer","large","CastImgWrapper","Section","CollectionCast","onGoToPersonDetails","onGoToMovieDetails","sm","crewItem","partItem","DetailsTitleWrapper","DetailsContentWrapper","CollectionDetails","averageVote","reduce","sum","movieOverview","genresList","Object","keys","forEach","genre_ids","uniquesToString","array","indexOf","CollectionPage","loadCollection","movieIds","getGenresName","onLoadingGenres","genresObj","ids","total","onLoadingDetails","totalRevenue","onLoadingCast","template","TogglerWrapper","ToggleItem","isActive","ToggleActive","Toggler","names","loadTrend","types","buttonsArray","buttons","setButtons","setWidth","clientWidth","toggleItems","reference","currentTarget","onToggle","SectionTitleWrapper","TrendCardWrapper","TrendCardImg","TrendCardTitleWrapper","TrendCardTitle","TrendCardRelease","InTrend","inTrend","trendItems","HomePageWrapper","HomePageSubTitle","inTrendRequested","inTrendLoaded","inTrendError","homePageReducer","MenuBurger","MenuList","CloseButton","NavList","NavListItem","NavListSubItem","HeaderMobile","setClassNames","toggleMenu","clas","overflow","getElementsByTagName","body","GlobalWrapper","GenreWrapper","GenreList","OverviewWrapper","Tagline","DetailsMobile","ModalWindowMobile","App","updateWindowDimensions","header","exact","from","render","match","params","initialState","action","combineReducers","store","createStore","composeWithDevTools","ErrorBoundry","hasError","ReactDOM","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.ce2627e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    padding: 5px 15px; \r\n\r\n    &:hover{\r\n        background-color: rgb(209, 220, 240);\r\n    }\r\n`;\r\n\r\nconst NavCollapseWrapper = styled.div`\r\n    &.dropdown-menu {\r\n        min-width: 11rem;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return(\r\n        <NavBarWrapper> \r\n            <Navbar expand=\"lg\">\r\n                <Navbar.Brand>\r\n                    <LogoWrapper>\r\n                        <Link to='/movie-database'> Movies DB</Link>   \r\n                    </LogoWrapper>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Фильмы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Сериалы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Люди\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/person/'>Популярные люди</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n            </Navbar> \r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div className=\"loadingio-spinner-pulse-4q9a11w5c1h\">\r\n                <div className=\"ldio-8zfoqlwj9ri\">\r\n                    <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\n\r\n\r\nconst RateWrapper = styled.div`\r\n    width: ${props => props.small ? '44px' : '65px'};\r\n    height: ${props => props.small ? '44px' : '65px'};\r\n    position: ${props => (props.small && props.static) ? 'static' : props.small ? 'absolute' : 'static'};\r\n    top: -22px;\r\n    left: 10px;\r\n\r\n    .CircularProgressbar-text {\r\n        dominant-baseline: middle;\r\n        text-anchor: middle;\r\n        font-size: 28px;\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Rate = ({vote, small, isStatic}) => {\r\n\r\n    return (\r\n        <RateWrapper small={small} static={isStatic}>\r\n            <CircularProgressbar\r\n                value={vote * 10}\r\n                background = {true}\r\n                backgroundPadding = {5}\r\n                text={`${vote === 0 ? 'NR' : (vote * 10 + '%')}`}\r\n                styles={buildStyles({\r\n                    rotation: 0,\r\n                    strokeLinecap: 'butt',\r\n                    pathTransitionDuration: 0.5,\r\n                    pathColor: vote > 7 ? '#21d07a' : vote < 3 ? '#db2360' : `#d2d531`,\r\n                    textColor: '#fff',\r\n                    trailColor: '#423d0f',\r\n                    backgroundColor: '#000', \r\n                })}\r\n            />\r\n        </RateWrapper>\r\n    )\r\n}\r\n\r\nexport default Rate;","import React from 'react';\r\nimport './loadMoreSpinner.css';\r\n\r\nconst LoadMoreSpinner = () => {\r\n    return(\r\n        <div className=\"loadingio-spinner-eclipse-31fnf915wjs\">\r\n            <div className=\"ldio-0fm56yckxb98\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoadMoreSpinner;\r\n","import {useEffect, useState} from 'react';\r\n\r\nconst useWindowSize = () => {\r\n    const [width, setWindowSize] = useState(null);\r\n  \r\n    useEffect(() => {\r\n        const handleResize = () => setWindowSize(window.innerWidth);\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        \r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n  \r\n    return width;\r\n}\r\n\r\nexport default useWindowSize;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport Rate from '../../shared/rate';\r\nimport moment from 'moment';\r\nimport LoadMoreSpinner from '../../shared/spinner/loadMoreSpinner';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\n\r\nconst ContainerWrapper = styled.div`\r\n    .col {\r\n        max-height: ${props => props.size < 415 ? '275px' : '393px'};\r\n    }\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    border: 1px solid rgb(227, 227, 227);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 5px 8px 0px rgba(0, 0, 0, 0.1);\r\n    max-width: ${props => props.size < 415 ? '150px' : '206px'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieDetailsWrapper = styled.div`\r\n    background-color:rgb(255, 255, 255);\r\n    border-radius: 15px;\r\n    position: relative;\r\n    padding: ${props => props.size < 415 ? '22px 10px 5px' : '22px 10px 15px'};\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n    width: 100%;\r\n\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-family: 'Source Sans Pro';\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ReleaseWrapper = styled(TitleWrapper)`\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    width: 100%;\r\n    border-top-right-radius: 15px;\r\n    border-top-left-radius: 15px;\r\n    height: ${props => props.size < 415 ? '70%' : '80%' };\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 100%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    margin-bottom: 20px;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst MovieList = ({movies, loading, loadingMore, url, getMovies, history}) => {\r\n    const size = useWindowSize();\r\n    const movieItems = movies.map((item, index) => {\r\n        const {title, poster_path, release_date, vote_average, id, name, first_air_date} = item;\r\n        const src = poster_path ? ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return(\r\n            <Col key={index} className=\"col-xl-3 col-6 col-sm-6 d-flex justify-content-center mb-4 px-lg-2 px-0\">\r\n                <PosterWrapper\r\n                    size={size}\r\n                    onClick={() => {\r\n                        history.push(`${url}${id}`)\r\n                    }}\r\n                >\r\n                    <Poster src={src} alt={title || name} size={size}/> \r\n                    <MovieDetailsWrapper size={size}>\r\n                        <TitleWrapper>\r\n                            <EllipsisText text={title || name} length={size < 415 ? 15 : 20}/>    \r\n                        </TitleWrapper>\r\n                        <ReleaseWrapper>\r\n                            {moment(release_date || first_air_date).format('DD.MM.YYYY')}\r\n                        </ReleaseWrapper>\r\n                        <Rate \r\n                            vote={vote_average}\r\n                            small\r\n                        />  \r\n                    </MovieDetailsWrapper>                   \r\n                </PosterWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    const showButton = () => {\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n    \r\n        return (\r\n            <LoadMoreButton\r\n                onClick={() => getMovies()}\r\n            >\r\n                {loadSpinner}\r\n            </LoadMoreButton>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return(\r\n            <ContainerWrapper size={size}>\r\n                <Container className=\"mt-lg-5 mt-3 px-0\">\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        {movieItems}\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        <Col>\r\n                            {showButton()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ContainerWrapper>\r\n        )    \r\n    }  \r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst MoviesServicesContext = React.createContext();\r\n\r\nexport default MoviesServicesContext;","import React from 'react';\r\nimport MoviesServicesContext from '../moviesContext/moviesContext';\r\n\r\nconst WithMoviesService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <MoviesServicesContext.Consumer>\r\n                {\r\n                    (MoviesService) => {\r\n                        return <Wrapped {...props} MoviesService={MoviesService}/>\r\n                    }\r\n                }\r\n            </MoviesServicesContext.Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WithMoviesService;","export const POPULAR_MOVIES_REQUESTED = 'POPULAR_MOVIES_REQUESTED';\r\nexport const POPULAR_MOVIES_LOADED = 'POPULAR_MOVIES_LOADED';\r\nexport const POPULAR_MOVIES_ERROR = 'POPULAR_MOVIES_ERROR';\r\nexport const POPULAR_MOVIES_MORE_REQUESTED = 'POPULAR_MOVIES_MORE_REQUESTED';\r\nexport const POPULAR_MOVIES_MORE_LOADED = 'POPULAR_MOVIES_MORE_LOADED';\r\nexport const POPULAR_MOVIES_MORE_ERROR = 'POPULAR_MOVIES_MORE_ERROR';\r\nexport const PLAYING_NOW_MOVIES_REQUESTED = 'PLAYING_NOW_MOVIES_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_LOADED = 'PLAYING_NOW_MOVIES_LOADED';\r\nexport const PLAYING_NOW_MOVIES_MORE_REQUESTED = 'PLAYING_NOW_MOVIES_MORE_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_MORE_LOADED = 'PLAYING_NOW_MOVIES_MORE_LOADED';\r\nexport const UPCOMING_MOVIES_REQUESTED = 'UPCOMING_MOVIES_REQUESTED';\r\nexport const UPCOMING_MOVIES_LOADED = 'UPCOMING_MOVIES_LOADED';\r\nexport const UPCOMING_MOVIES_MORE_REQUESTED = 'UPCOMING_MOVIES_MORE_REQUESTED';\r\nexport const UPCOMING_MOVIES_MORE_LOADED = 'UPCOMING_MOVIES_MORE_LOADED';\r\nexport const TOP_RATED_MOVIES_REQUESTED = 'TOP_RATED_MOVIES_REQUESTED';\r\nexport const TOP_RATED_MOVIES_LOADED = 'TOP_RATED_MOVIES_LOADED';\r\nexport const TOP_RATED_MOVIES_MORE_REQUESTED = 'TOP_RATED_MOVIES_MORE_REQUESTED';\r\nexport const TOP_RATED_MOVIES_MORE_LOADED = 'TOP_RATED_MOVIES_MORE_LOADED';\r\n\r\nexport const POPULAR_TV_REQUESTED = 'POPULAR_TV_REQUESTED';\r\nexport const POPULAR_TV_LOADED = 'POPULAR_TV_LOADED';\r\nexport const POPULAR_TV_ERROR = 'POPULAR_TV_ERROR';\r\nexport const POPULAR_TV_MORE_REQUESTED = 'POPULAR_TV_MORE_REQUESTED';\r\nexport const POPULAR_TV_MORE_LOADED = 'POPULAR_TV_MORE_LOADED';\r\nexport const AIRING_TODAY_TV_REQUESTED = 'AIRING_TODAY_TV_REQUESTED';\r\nexport const AIRING_TODAY_TV_LOADED = 'AIRING_TODAY_TV_LOADED';\r\nexport const AIRING_TODAY_TV_MORE_REQUESTED = 'AIRING_TODAY_TV_MORE_REQUESTED';\r\nexport const AIRING_TODAY_TV_MORE_LOADED = 'AIRING_TODAY_TV_MORE_LOADED';\r\nexport const ON_THE_AIR_TV_REQUESTED = 'ON_THE_AIR_TV_REQUESTED';\r\nexport const ON_THE_AIR_TV_LOADED = 'ON_THE_AIR_TV_LOADED';\r\nexport const ON_THE_AIR_TV_MORE_REQUESTED = 'ON_THE_AIR_TV_MORE_REQUESTED';\r\nexport const ON_THE_AIR_TV_MORE_LOADED = 'ON_THE_AIR_TV_MORE_LOADED';\r\nexport const TOP_RATED_TV_REQUESTED = 'TOP_RATED_TV_REQUESTED';\r\nexport const TOP_RATED_TV_LOADED = 'TOP_RATED_TV_LOADED';\r\nexport const TOP_RATED_TV_MORE_REQUESTED = 'TOP_RATED_TV_MORE_REQUESTED';\r\nexport const TOP_RATED_TV_MORE_LOADED = 'TOP_RATED_TV_MORE_LOADED';\r\n\r\nexport const POPULAR_PERSON_REQUESTED = 'POPULAR_PERSON_REQUESTED';\r\nexport const POPULAR_PERSON_LOADED = 'POPULAR_PERSON_LOADED';\r\nexport const POPULAR_PERSON_ERROR = 'POPULAR_PERSON_ERROR';\r\n\r\nexport const MOVIE_DETAILS_REQUESTED = 'MOVIE_DETAILS_REQUESTED';\r\nexport const MOVIE_DETAILS_LOADED = 'MOVIE_DETAILS_LOADED';\r\nexport const MOVIE_DETAILS_ERROR = 'MOVIE_DETAILS_ERROR';\r\n\r\nexport const CAST_REQUESTED = 'CAST_REQUESTED';\r\nexport const CAST_LOADED = 'CAST_LOADED';\r\n\r\nexport const KEYWORDS_REQUESTED = 'KEYWORDS_REQUESTED';\r\nexport const KEYWORDS_LOADED = 'KEYWORDS_LOADED';\r\n\r\nexport const MODAL_WINDOW_TOGGLE = 'MODAL_WINDOW_TOGGLE';\r\n\r\nexport const VIDEO_LOADED = 'VIDEO_LOADED';\r\n\r\nexport const SOCIAL_LINK_LOADED = 'SOCIAL_LINK_LOADED';\r\n\r\nexport const COLLECTION_LOADED = 'COLLECTION_LOADED';\r\n\r\nexport const RECOMMENDATIONS_LOADED = 'RECOMMENDATIONS_LOADED';\r\n\r\nexport const RATING_REQUESTED = 'RATING_REQUESTED';\r\nexport const RATING_LOADED = 'RATING_LOADED';\r\n\r\nexport const IN_TREND_REQUESTED = 'IN_TREND_REQUESTED';\r\nexport const IN_TREND_LOADED = 'IN_TREND_LOADED';\r\nexport const IN_TREND_ERROR = 'IN_TREND_ERROR';\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nconst popularMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_ERROR\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_ERROR\r\n    }\r\n}\r\n\r\nconst popularTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularPersonLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_ERROR\r\n    }\r\n}\r\n\r\nconst movieDetailsRequested = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_REQUESTED\r\n    }\r\n}\r\n\r\nconst movieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsError = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_ERROR\r\n    }\r\n}\r\n\r\nconst castRequested = () => {\r\n    return {\r\n        type: actionTypes.CAST_REQUESTED\r\n    }  \r\n}\r\n\r\nconst castLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst keywordsRequested = () => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_REQUESTED\r\n    }\r\n}\r\n\r\nconst keywordsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst modalWindowToggle = () => {\r\n    return {\r\n        type: actionTypes.MODAL_WINDOW_TOGGLE\r\n    }\r\n}\r\n\r\nconst videoLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.VIDEO_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst socialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst collectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst recommendationsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.RECOMMENDATIONS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst ratingRequested = () => {\r\n    return {\r\n        type: actionTypes.RATING_REQUESTED\r\n    }\r\n}\r\n\r\nconst ratingLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.RATING_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendRequested = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_REQUESTED\r\n    }\r\n}\r\n\r\nconst inTrendLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.IN_TREND_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendError = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    popularMoviesRequested,\r\n    popularMoviesLoaded,\r\n    popularMoviesError,\r\n    popularMoviesMoreLoaded,\r\n    popularMoviesMoreRequested,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded,\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvError,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError,\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError,\r\n    recommendationsLoaded,\r\n    ratingRequested,\r\n    ratingLoaded\r\n}","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularMoviesRequested, popularMoviesLoaded, popularMoviesError, popularMoviesMoreLoaded, popularMoviesMoreRequested} from '../../actions/actions';\r\n\r\nclass PopularPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.popularMoviesRequested();\r\n            this.loadMovies(this.props.popularMoviesLoaded);  \r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {popularMoviesMoreLoaded, popularMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        popularMoviesMoreRequested();\r\n        this.loadMovies(popularMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, history, loadingMore} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularMovies, loading, loadingMore, popularPage}  = state.moviePageReducer;\r\n    return {\r\n        movies: popularMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: popularPage,\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesLoaded,\r\n    popularMoviesRequested,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PopularPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {playingNowMoviesRequested, playingNowMoviesLoaded, popularMoviesError, playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested} from '../../actions/actions';\r\n\r\nclass PlayingNowPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if(!this.props.movies.length) {\r\n            this.props.playingNowMoviesRequested();\r\n            this.loadMovies(this.props.playingNowMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getNowPlaying(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        playingNowMoviesMoreRequested();\r\n        this.loadMovies(playingNowMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {playingNowMovies, loading, loadingMore, playingNowPage}  = state.moviePageReducer;\r\n    return {\r\n       movies: playingNowMovies,\r\n       loading,\r\n       loadingMore,\r\n       page: playingNowPage \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PlayingNowPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedMoviesRequested, topRatedMoviesLoaded, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded, popularMoviesError} from '../../actions/actions';\r\n\r\n\r\nclass TopRatedPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n        \r\n        if (!this.props.movies.length) {\r\n            this.props.topRatedMoviesRequested();\r\n            this.loadMovies(this.props.topRatedMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {page, MoviesService, popularMoviesError} = this.props;\r\n\r\n        MoviesService.getTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError())\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedMoviesMoreRequested();\r\n        this.loadMovies(topRatedMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedMovies, topRatedPage, loading, loadingMore} = state.moviePageReducer;\r\n    return {\r\n        movies: topRatedMovies,\r\n        page: topRatedPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {upcomingMoviesRequested, upcomingMoviesLoaded, upcomingMoviesMoreRequested, upcomingMoviesMoreLoaded, popularMoviesError} from '../../actions/actions';\r\n\r\nclass UpcomingPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.upcomingMoviesRequested();\r\n            this.loadMovies(this.props.upcomingMoviesLoaded);\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getUpcoming(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, upcomingMoviesMoreLoaded, upcomingMoviesMoreRequested} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        upcomingMoviesMoreRequested();\r\n        this.loadMovies(upcomingMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n       \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {upcomingMovies, loading, loadingMore, upcomingPage} = state.moviePageReducer;\r\n    return {\r\n        movies: upcomingMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: upcomingPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(UpcomingPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 285px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 275px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 64.4%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 13px;\r\n    padding: 5px 10px 0;   \r\n`;\r\n\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst FullCastWrapper = styled.div`\r\n    color: #1e2f3c;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n`;\r\n\r\n\r\n\r\nconst Cast = ({casts, id, history}) => {\r\n    const size = useWindowSize();\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n          <span style={{display: 'none'}}></span>\r\n        )\r\n      }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const onGoFullCast = () => {\r\n\r\n        if (history.location.pathname.includes('tv')) {\r\n            history.push(`/tv/${id}/casts`)\r\n        } else {\r\n            history.push(`/movie/${id}/casts`)\r\n        } \r\n        \r\n    }\r\n\r\n    const onGoPersonBio = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.profile_path ? ('https://image.tmdb.org/t/p/w138_and_h175_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name} \r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastItemWrapper>\r\n                \r\n            )\r\n        });\r\n\r\n    let carousel;\r\n    return (\r\n        <>\r\n            <CarouselWrapper>\r\n                <CastTitle>В главных ролях</CastTitle>\r\n                <Carousel renderArrow={myArrow}\r\n                        itemsToScroll={size < 415 ? 2 : 1} \r\n                        itemsToShow={size < 415 ? 2 : 5}\r\n                        focusOnSelect={false}\r\n                        ref={ref => (carousel = ref)}\r\n                        renderPagination={myPagination}\r\n                >\r\n                    {castItem}\r\n                </Carousel>\r\n                <PrevButton \r\n                    size={size}\r\n                    onClick={() => carousel.slidePrev()}\r\n                >\r\n                    <i className=\"fas fa-angle-double-left\"></i>\r\n                </PrevButton>\r\n                <NextButton \r\n                    size={size}\r\n                    onClick={() => carousel.slideNext()}\r\n                >\r\n                    <i className=\"fas fa-angle-double-right\"></i>\r\n                </NextButton>\r\n                <FullCastWrapper\r\n                    size={size}\r\n                    onClick={() => onGoFullCast()}\r\n                >Полный актёрский и съёмочный состав</FullCastWrapper>\r\n           </CarouselWrapper>\r\n           \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\nimport useWindowSize from '../useWindowSize/useWindowSize';\r\n\r\nconst Trailer = ({video}) => {\r\n\r\n    const {results} = video;\r\n    const resultItem = results[0];\r\n    const size= useWindowSize();\r\n    return (\r\n        <iframe\r\n            title='g'\r\n            width={ size < 415 ? size : \"1075\"}\r\n            height={ size < 415 ? (size/1.6) : \"667\"}\r\n            src={\"https://www.youtube.com/embed/\" + resultItem.key}\r\n            frameBorder='0' \r\n            allowFullScreen\r\n            controls='2'\r\n        ></iframe>\r\n    )\r\n}\r\n\r\nexport default Trailer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../shared/youtubeVideo/youtubeVideo';\r\n\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: 1075px;\r\n    max-height: 667px;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: 1075px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindow = ({video, onCloseModal}) => {\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper>\r\n                <TrailerTitleWraper>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from '../../../../shared/rate';\r\nimport ModalWindow from './modalWindow';\r\n\r\nconst ImgWrapper = styled.img`\r\n    max-width: 300px;\r\n    max-height: 450px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 7px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    font-family: 'Source Sans Pro';\r\n`;\r\n\r\nconst Year = styled.span`\r\n    opacity: 0.8;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst DetailsList = styled.div`\r\n    font-size: 16px; \r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    font-size: 5px;\r\n`;\r\n\r\nconst Vote = styled.span`\r\n    max-width: 150px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ActivityList = styled.ul`\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    li{\r\n        width: 46px;\r\n        height: 46px;\r\n        background-color: rgb(3, 37, 65);\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-left: 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child{\r\n        margin-left: 0;\r\n    }\r\n    \r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n\r\n    &:hover{\r\n        opacity: 0.6\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst TagLine = styled.div`\r\n    font-size: 17.6px;\r\n    opacity: 0.7;\r\n    font-family: Arial;\r\n`;\r\n\r\nconst CreatorNameWrapper = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Rating = styled.div`\r\n    border: 1px solid #fff;\r\n    opacity: 0.8;\r\n    padding: 0 7px;\r\n    font-size: 1em;\r\n`;\r\n\r\nconst Details = ({details, movieId, onOpenModal, modalWindow, onCloseModal, video, history, rating}) => {\r\n    const {poster_path, title, release_date, genres, runtime, vote_average, tagline, overview, name, first_air_date, episode_run_time, created_by} = details;\r\n    const rate = rating.find(item => item.iso_3166_1 === 'US');\r\n    const genreItem = genres.map(genre => genre.name);\r\n    const genreToString = genreItem.join(', ');\r\n\r\n    let duration = (runtime || episode_run_time) ? moment.duration(runtime || episode_run_time[0], \"minutes\").format(\"h : m o\").replace(':', 'h').replace('o', 'm') : null;\r\n\r\n    const trailerButton = () => {\r\n        return(\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle\r\n                    onClick = {() => onOpenModal(movieId)}\r\n                >Воспроизвести трейлер</TrailerTitle>\r\n            </TrailerWrapper>\r\n        )   \r\n    }\r\n\r\n    const modal = modalWindow ? <ModalWindow video={video} onCloseModal={onCloseModal}/> : null;\r\n    const showTrailer = video?.results.length === 0 ? null : trailerButton();\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path);\r\n    const creator = history.location.pathname.includes('tv') ? <TvCreator creator={created_by} history={history}/> : null;\r\n    const releaseYear = release_date || first_air_date ? `(${moment(release_date || first_air_date).format('YYYY')})` : null;\r\n    const releaseDate = release_date || first_air_date ? moment(release_date || first_air_date).format('DD/MM/YYYY') : null;\r\n\r\n    const showRating = () => {\r\n        if (history.location.pathname.includes('tv')) {\r\n            const rateTV = rate.rating ? <Rating>{rate.rating}</Rating> : null;   \r\n            return rateTV;\r\n        } else {\r\n            const rateMovie = rate?.release_dates[0].certification ? <Rating>{rate?.release_dates[0].certification}</Rating> : null;\r\n            return rateMovie;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {modal}\r\n            <Col className='col-4'>\r\n                <ImgWrapper src={src} alt={title || name}/>\r\n            </Col>\r\n            <Col className='col-8 text-left px-0'>\r\n            <Title>{title || name} <Year>{releaseYear}</Year>\r\n                </Title>\r\n                <DetailsList>\r\n                    <Row>\r\n                        <Col className=\"col-auto px-0 pl-3\">{showRating()}</Col>\r\n                        <Col className=\"col-auto px-0 pl-3\">{releaseDate}</Col>\r\n                        <Col className=\"col-auto d-flex align-items-center\"><IconWrapper><i className=\"fas fa-circle\"></i></IconWrapper></Col>\r\n                        <Col className=\"col-auto px-0\">{genreToString}</Col>\r\n                        <Col className=\"col-auto d-flex align-items-center\"><IconWrapper><i className=\"fas fa-circle\"></i></IconWrapper></Col>\r\n                        <Col className=\"col-auto px-0\">{duration}</Col>\r\n                    </Row>  \r\n                    <Row className=\"font-weight-bold py-3\">\r\n                        <Col className=\"col-auto d-flex\">\r\n                            <Rate vote={vote_average}/>   \r\n                            <Vote>Пользовательский счёт</Vote>\r\n                        </Col>\r\n                        <Col className=\"px-0 my-0 d-flex align-items-center\">\r\n                            <ActivityList>\r\n                                <li><i className=\"fas fa-list-ul\"></i></li>\r\n                                <li><i className=\"fas fa-heart\"></i></li>\r\n                                <li><i className=\"fas fa-bookmark\"></i></li>\r\n                                <li><i className=\"fas fa-star\"></i></li>\r\n                            </ActivityList>\r\n                        </Col>\r\n                        <Col className=\"d-flex align-items-center\">\r\n                            {showTrailer}                   \r\n                        </Col>\r\n                    </Row>  \r\n                    <Row>\r\n                        <Col className='font-italic'>\r\n                            <TagLine>{tagline}</TagLine>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='flex-column py-2'>\r\n                        <Col>\r\n                            <Overview>\r\n                                Обзор\r\n                            </Overview>\r\n                        </Col>\r\n                        <Col>{overview}</Col>\r\n                    </Row>\r\n                    {creator}\r\n                </DetailsList>  \r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nconst TvCreator = ({creator, history}) => {\r\n    if (creator?.length) {\r\n        return (\r\n            <Row className='flex-column py-2'>\r\n                <Col>\r\n                    <CreatorNameWrapper\r\n                        onClick={() => history.push(`/person/${creator[0].id}`)}\r\n                    >\r\n                        {creator[0].name}\r\n                    </CreatorNameWrapper>\r\n                    <div>Создатель</div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Details;\r\nexport {ImgWrapper, Title, DetailsList, Vote, Overview};","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: inline-block;\r\n    font-size: 25px;  \r\n    cursor: pointer;\r\n    margin-right: 15px;\r\n    & .popover-body {\r\n        background-color: red\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: #000;\r\n    & :hover :active :link :visited {\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    margin: ${props => props.movie ? '0 15px 20px 0' : '30px 15px 0 0'};\r\n    display: flex;\r\n`;\r\n\r\nconst SocialLinkWrrapper = styled.div`\r\n    display: ${props => !props.facebook && !props.twitter && !props.instagram ? 'none' : 'block'};\r\n    border-right: 1px solid #d7d7d7;\r\n    margin-right: 15px;\r\n`;\r\n\r\n\r\nconst OriginalDetails = ({details, history, socialLink}) => {\r\n    const {original_title, status, budget, revenue, original_language, original_name, networks, homepage} = details;\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieBudget= budget ? nf.format(budget).replace(/\\s/g, ',') : '0';\r\n    const movieRevenue = revenue ? nf.format(revenue).replace(/\\s/g, ',') : '0';\r\n\r\n    const tvNet = history.location.pathname.includes('tv') ? <TvNetwork networks={networks}/> : null;\r\n\r\n    const statusMovie = () => {\r\n        switch (status) {\r\n            case 'Released': \r\n                return 'Выпущено';\r\n            case 'Returning Series':\r\n                return 'Продолжается';\r\n            default:\r\n                return (status);\r\n        }\r\n    }\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const homePage = (\r\n        <Link href={homepage} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-link\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n    const overlayHomePage = homepage ? <Overlay logo={homePage} page={'Домашнюю страницу'}/> : null;\r\n\r\n    return(\r\n        <Col>\r\n            <Row>\r\n                <Col className='d-flex align-items-center'>\r\n                    <LinkWrapper movie>\r\n                        <SocialLinkWrrapper facebook={facebook_id} twitter={twitter_id} instagram={instagram_id}>\r\n                            {overlayFacebook}\r\n                            {overlayTwitter}\r\n                            {overlayInstagram}\r\n                        </SocialLinkWrrapper>\r\n                        {overlayHomePage}\r\n                    </LinkWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Исходное название</Col>\r\n                <Col>{original_title || original_name}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Статус</Col>\r\n                <Col>{statusMovie()}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Исходный язык</Col>\r\n                <Col>{original_language === 'en' ?  'английский' : original_language}</Col>\r\n            </Row>\r\n            {tvNet}\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Бюджет</Col>\r\n                <Col>${movieBudget}.00</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Сборы</Col>\r\n                <Col>${movieRevenue}.00</Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst TvNetwork = ({networks}) => {\r\n    const networkItem = networks?.find((network, index) => index === 0);\r\n    const logo = !networkItem?.logo_path ? networkItem?.name : <img src={`https://image.tmdb.org/t/p/h30${networkItem?.logo_path}`} alt={networkItem?.name}/>;\r\n\r\n    return (\r\n        <Row className=\"flex-column\">\r\n            <Col className=\"font-weight-bold\">Телесеть</Col>\r\n            <Col>  \r\n                {logo}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst Overlay = ({logo, page}) => {\r\n    const popover = (\r\n            <Popover id=\"popover-basic\">              \r\n                <Popover.Content>\r\n                    Посетить {page}\r\n                </Popover.Content>\r\n            </Popover>\r\n    );\r\n    \r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={popover}>\r\n            <LinkIconWrapper>{logo}</LinkIconWrapper>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default OriginalDetails;\r\nexport {Overlay, LinkIconWrapper, Link};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst KeywordsWrapper = styled.div`\r\n    margin: 10px 0;\r\n    max-width: ${props => props.size < 415 ? props.size + 'px' : '260px'};\r\n    width: 100%;\r\n`;\r\n\r\nconst KeywordItemWrapper = styled.div`\r\n    background-color: rgba(0,0,0,0.1);\r\n    border: 1px solid #d7d7d7;\r\n    color: #000;\r\n    padding: 4px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    font-size: 0.9em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Keywords = ({keyword, url, history}) => {\r\n    const size = useWindowSize();\r\n    const keywordsItem = keyword.map((keyword, index) => {\r\n        return(\r\n            <KeywordItemWrapper \r\n                key={index} \r\n                onClick={() => history.push(`/${url}/${keyword.id}`)}\r\n            >\r\n                {keyword.name}\r\n            </KeywordItemWrapper>\r\n        )\r\n    })\r\n\r\n    const keywordItem = keywordsItem.length === 0 ? 'Ключевые слова не добавлены.' : keywordsItem;\r\n\r\n    return (\r\n        <KeywordsWrapper size={size}>\r\n            <Col className=\"font-weight-bold\">Ключевые слова</Col>\r\n            <Col>\r\n                {keywordItem}\r\n            </Col>\r\n        </KeywordsWrapper>\r\n    )\r\n}\r\n\r\nexport default Keywords;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst CollectionWrapper = styled.div`\r\n    padding: 30px 0;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionContent = styled.div`\r\n    border-radius: 8px;\r\n    background-image: linear-gradient(315deg, rgba(42, 42, 114, 0.5) 0%, rgba(0, 159, 253, 0.5) 74%), ${props => `url(${props.bg})`};\r\n    background-repeat: no-repeat;\r\n    max-width: 730px;\r\n    width: 100%;\r\n    height: 320px;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CollectionName = styled.div`\r\n    color: #fff;\r\n    font-size: 1.9em;\r\n    font-weight: 600;\r\n`\r\nconst CollectionDescription = styled.div`\r\n    font-size: 1.1em;\r\n    margin-bottom: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst CollectionButton = styled.button`\r\n    font-size: 1.1em;\r\n    color: #fff;\r\n    background-color: rgb(53, 40, 30);\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 700;\r\n    padding: 6px 20px;\r\n    max-width: 260px;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst Collection = ({details, history, collection}) => {\r\n    const size = useWindowSize();\r\n    const {belongs_to_collection} = details;\r\n    const {name, backdrop_path, id} = belongs_to_collection;\r\n    const {parts} = collection;\r\n\r\n    const getTitle = () => {\r\n        if (collection.hasOwnProperty('parts')) {\r\n            const moviesTitle = parts.map(part => part.title);\r\n            return moviesTitle.join(', ');\r\n        } \r\n        return null\r\n    }\r\n    \r\n    const path = size < 415 ? `https://image.tmdb.org/t/p/w1000_and_h450_multi_faces${backdrop_path}` : `https://image.tmdb.org/t/p/w1440_and_h320_multi_faces${backdrop_path}`;\r\n    const collectionIncludes = size < 415 ? null : `Коллекция включает ${getTitle()}`;\r\n    return (\r\n        <CollectionWrapper>\r\n            <CollectionContent bg={path}>\r\n            <CollectionName>Входит в {name}</CollectionName>\r\n            <CollectionDescription>{collectionIncludes}</CollectionDescription>\r\n            <CollectionButton\r\n                onClick={() => history.push(`/collection/${id}`)}\r\n            >Смотреть коллекцию</CollectionButton>\r\n            </CollectionContent>\r\n        </CollectionWrapper>\r\n    )\r\n}\r\n\r\nexport default Collection;","import React from 'react';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst RecommendationCardWrapper = styled.div`\r\n    max-width: 230px;\r\n`;\r\n\r\nconst RecommendationCardImgWrapper = styled.div`\r\n    cursor: pointer;\r\n    position: relative;\r\n    max-width: 230px;\r\n    font-size: 16px;\r\n\r\n    &:hover .visible {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst RecommendationCardRelease = styled.div`\r\n    background-color: rgba(255,255,255,0.9);\r\n    position: absolute;\r\n    bottom: 0px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: opacity 200ms;\r\n`;\r\n\r\nconst RecommendationCardImg = styled.img`\r\n    border-radius: 5px;\r\n    max-width: 230px;\r\n    max-height: 130px;\r\n`;\r\n\r\nconst RecommendationCardTitleWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;  \r\n`;\r\n\r\nconst RecommendationCardTitle = styled.div``;\r\n\r\nconst RecommendationCardRate = styled.div``;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    border-bottom:  ${props => props.size < 415 ? 'none' : '1px solid rgb(215,215,215)'};\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 210px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 205px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    display: ${props => props.size < 415 ? 'none' : 'block'};\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px;   \r\n    margin-bottom: 20px;\r\n`;\r\n\r\n\r\nconst Recommendation = ({recommendations, history, MoviesService, castRequested, movieDetailsRequested, getDetails, getCast, getKeywords, getVideos, getSocailLink, getRecommendations}) => {\r\n    const handleRouting = (id) => {\r\n        if (history.location.pathname.includes('tv')) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getTVDetails); \r\n            getCast(id, MoviesService.getTVCasts);\r\n            getKeywords(id, MoviesService.getTVKeywords);\r\n            getVideos(id, MoviesService.getTVVideos);\r\n            getSocailLink(id, MoviesService.getTVExternalIds);\r\n            getRecommendations(id, MoviesService.getTVRecommendations);\r\n            history.push(`/tv/${id}`)\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getMovieDetails);\r\n            getCast(id, MoviesService.getCast);\r\n            getKeywords(id, MoviesService.getKeywords);\r\n            getVideos(id, MoviesService.getVideos);\r\n            getSocailLink(id, MoviesService.getMovieExternalIds);\r\n            getRecommendations(id, MoviesService.getMovieRecommendations);\r\n            history.push(`/movie/${id}`)\r\n        }\r\n    }\r\n    const size = useWindowSize();\r\n    const recommendationItems = recommendations.filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const {id, vote_average, title, release_date, name, first_air_date, backdrop_path} = item;\r\n            const src = backdrop_path ? ('//image.tmdb.org/t/p/w250_and_h141_face' + backdrop_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n            const releaseDate = moment(release_date || first_air_date).format('DD/MM/YYYY');\r\n            return (\r\n                <RecommendationCardWrapper key={index}>\r\n                    <RecommendationCardImgWrapper>\r\n                        <RecommendationCardImg \r\n                            src={src} \r\n                            alt={title || name}\r\n                            onClick={() => handleRouting(id)}\r\n                        />\r\n                        <RecommendationCardRelease className={'visible'}>\r\n                            <i className=\"far fa-calendar-alt\"></i> {releaseDate}\r\n                        </RecommendationCardRelease>\r\n                    </RecommendationCardImgWrapper>\r\n                    <RecommendationCardTitleWrapper>\r\n                        <RecommendationCardTitle>\r\n                            <EllipsisText text={title || name} length={24}/>\r\n                        </RecommendationCardTitle>\r\n                        <RecommendationCardRate>{vote_average * 10}%</RecommendationCardRate>\r\n                    </RecommendationCardTitleWrapper>\r\n                </RecommendationCardWrapper>\r\n            )\r\n        })\r\n    \r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper size={size}>\r\n            <SectionTitle>Рекомендации </SectionTitle>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={size < 415 ? 1 : 2} \r\n                    itemsToShow={(size < 415 && size > 360) ? 1.4 : size < 360 ? 1 : 3}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {recommendationItems}\r\n            </Carousel>\r\n            <PrevButton \r\n                size={size}\r\n                onClick={() => carousel.slidePrev()}\r\n            >\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton \r\n                size={size}\r\n                onClick={() => carousel.slideNext()}\r\n            >\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    )\r\n}\r\n\r\nexport default Recommendation;","import React, {Component} from 'react';\r\nimport Spinner from '../../../shared/spinner/spinner';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Cast, Details, OriginalDetails, Keywords, Collection, Recommendation} from './components';\r\nimport WithMoviesService from '../../../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded, keywordsRequested, keywordsLoaded, modalWindowToggle, videoLoaded, socialLinkLoaded, collectionLoaded, recommendationsLoaded, ratingLoaded, ratingRequested} from '../../../../actions/actions';\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    background-image: linear-gradient(315deg, rgba(233, 188, 183, 0.7) 0%, rgba(41, 82, 74, 0.8) 74%), ${props => `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.backdrop})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    color: #fff;\r\n    font-family: 'Source Sans Pro';\r\n    background-color: #e9bcb7;\r\n`\r\n\r\nclass MovieDetails extends Component {\r\n    componentDidMount() {\r\n        const {movieId, history, details, movieDetailsRequested, castRequested, MoviesService, ratingRequested, keywordsRequested} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                keywordsRequested();\r\n                ratingRequested();\r\n                this.getDetails(movieId, MoviesService.getTVDetails); \r\n                this.getRating(movieId, MoviesService.getTVRating);\r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getKeywords(movieId, MoviesService.getTVKeywords);\r\n                this.getVideos(movieId, MoviesService.getTVVideos);\r\n                this.getSocailLink(movieId, MoviesService.getTVExternalIds);\r\n                this.getRecommendations(movieId, MoviesService.getTVRecommendations);   \r\n            } else {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                keywordsRequested();\r\n                ratingRequested();\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n                this.getRating(movieId, MoviesService.getMovieRating)\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getKeywords(movieId, MoviesService.getKeywords);\r\n                this.getVideos(movieId, MoviesService.getVideos);\r\n                this.getSocailLink(movieId, MoviesService.getMovieExternalIds);\r\n                this.getRecommendations(movieId, MoviesService.getMovieRecommendations);  \r\n            } \r\n        }\r\n    }\r\n\r\n    getDetails = (id, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => {\r\n                movieDetailsLoaded(response);\r\n                if (response && response.belongs_to_collection) {\r\n                    this.getCollectionDetails(response.belongs_to_collection.id)\r\n                }  \r\n            })\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getCast = (id, request) => {\r\n        const {movieDetailsError, castLoaded} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getKeywords = (id, request) => {\r\n        const {keywordsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => keywordsLoaded(response.keywords || response.results))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getVideos = (id, request) => {\r\n        const {videoLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => videoLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getSocailLink = (id, request) => {\r\n        const {socialLinkLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => socialLinkLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getRecommendations = (id, request) => {\r\n        const {recommendationsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then(response => recommendationsLoaded(response.results))\r\n            .catch(error => movieDetailsError())\r\n    }\r\n\r\n    getCollectionDetails = (id) => {\r\n        const {MoviesService, collectionLoaded, movieDetailsError} = this.props;\r\n\r\n        MoviesService.getCollection(id)\r\n            .then((response) => collectionLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getRating = (id, request) => {\r\n        const {ratingLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => ratingLoaded(response.results))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    showCollection = (isBelongToCollection) => {\r\n        const {history, details, loading, collection} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isBelongToCollection) {\r\n            return <Collection details={details} history={history} collection={collection}/>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    showRecommendations = (isRecommendation) => {\r\n        const {history, loading, recommendations, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isRecommendation.length) {\r\n            return(\r\n                <Recommendation \r\n                    history={history} \r\n                    recommendations={recommendations}\r\n                    MoviesService={MoviesService} \r\n                    getDetails={this.getDetails} \r\n                    getCast={this.getCast}\r\n                    getKeywords={this.getKeywords}\r\n                    getVideos={this.getVideos}\r\n                    getSocailLink={this.getSocailLink}\r\n                    getRecommendations={this.getRecommendations}\r\n                    movieDetailsRequested={movieDetailsRequested}\r\n                    castRequested={castRequested}\r\n                />\r\n            )\r\n        } else if (!isRecommendation.length) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieId, history, details, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, modalWindowToggle, socialLink, recommendations, rating, loadingRating} = this.props;\r\n        const globalLoading = loading || loadingCast || loadingKeywords || loadingRating;\r\n        if (globalLoading) {\r\n           return <Spinner/>\r\n        } else {\r\n           return(\r\n            <>\r\n                <BackgroundWrapper backdrop={details?.backdrop_path}>\r\n                        <Container className=\"w-100\">\r\n                            <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                            <Details details={details} movieId={movieId} rating={rating} video={video} history={history} onOpenModal={modalWindowToggle} modalWindow={modalWindow} onCloseModal={modalWindowToggle}/>\r\n                            </Row>\r\n                        </Container> \r\n                </BackgroundWrapper> \r\n                <Container className=\"mt-4 mb-5\">\r\n                    <Row>\r\n                        <Col className=\"col-8\">\r\n                            <Cast casts={casts} id={movieId} history={history}/>\r\n                            {this.showCollection(details?.belongs_to_collection)}\r\n                            {this.showRecommendations(recommendations)}\r\n                        </Col>\r\n                        <Col className=\"col-4\">\r\n                            <Row>\r\n                                <OriginalDetails details={details} history={history} socialLink={socialLink}/>\r\n                            </Row>\r\n                            <Row className=\"flex-column\">\r\n                                <Keywords keyword={keywords} history={history} url={'keywords'}/>\r\n                            </Row>\r\n                        </Col>                       \r\n                    </Row>\r\n                </Container>\r\n            </>\r\n           )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, socialLink, collection, recommendations, rating, loadingRating} = state.movieDetailsReducer;\r\n    return {\r\n        details: movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations,\r\n        rating,\r\n        loadingRating\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    recommendationsLoaded,\r\n    ratingRequested,\r\n    ratingLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(MovieDetails));\r\nexport {BackgroundWrapper};","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\nexport default withRouter(ScrollToTop)","export default class MoviesServices {\r\n    constructor() {\r\n        this._baseApi = 'https://api.themoviedb.org/3';\r\n        this._apiKey = 'api_key=d97132eedaef267781863bedd0564229';\r\n        this._apiLanguage = 'language=ru-RU';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._baseApi}${url}${this._apiKey}&${this._apiLanguage}`);\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getPopular = async (page) => {\r\n        const response = await this.getResource(`/movie/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getMovieDetails = async (movieId) => { \r\n        const response = await this.getResource(`/movie/${movieId}?`);\r\n        if (response && response.status_code === 34) {\r\n            return this.getTVDetails(movieId)\r\n        }\r\n        return response;   \r\n    }\r\n\r\n    getNowPlaying = async (page) => {\r\n        const response = await this.getResource(`/movie/now_playing?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTopRated = async (page) => {\r\n        const response = await this.getResource(`/movie/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getUpcoming = async (page) => {\r\n        const response = await this.getResource(`/movie/upcoming?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCast = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getKeywords = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getVideos = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieByKeyword = async (keywordId, page) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}/movies?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getKeywordName = async (keywordId) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonBiography = async (personId) => {\r\n        const biography = await this.getResource(`/person/${personId}?`);\r\n        const combinedMoviesTv = await this.getResource(`/person/${personId}/combined_credits?`);   \r\n        return {biography, combinedMoviesTv};\r\n\r\n    }\r\n\r\n    getTVDetails = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}?`);\r\n        return response;\r\n    }\r\n\r\n    getTVCasts = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getTVKeywords = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getTVVideos = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getTVPopular = async (page) => {\r\n        const response = await this.getResource(`/tv/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVAiringToday = async (page) => {\r\n        const response = await this.getResource(`/tv/airing_today?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVTopRated = async (page) => {\r\n        const response = await this.getResource(`/tv/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVOnTheAir = async (page) => {\r\n        const response = await this.getResource(`/tv/on_the_air?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getPopularPerson = async (page) => {\r\n        const response = await this.getResource(`/person/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCollection = async (collectionId) => {\r\n        const response = await this.getResource(`/collection/${collectionId}?`);\r\n        return response;\r\n    }\r\n\r\n    getGenreList = async () => {\r\n        const response = await this.getResource(`/genre/movie/list?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieExternalIds = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getTVExternalIds = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonExternalIds = async (personId) => {\r\n        const response = await this.getResource(`/person/${personId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getInTrend = async (time) => {\r\n        const response = await this.getResource(`/trending/all/${time}?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRecommendations = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRecommendations = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRating = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/release_dates?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRating = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/content_ratings?`);\r\n        return response;\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst MovieCardWrapper = styled.div`\r\n    max-width: 1218px;\r\n    width: 90%;\r\n    min-height: 141px;\r\n    height: 100%;\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px;\r\n\r\n    &:first-child {\r\n        margin-top: 35px;\r\n    }\r\n`;\r\n\r\nconst MovieCardImg = styled.img`\r\n    border-top-left-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    width: 94px;\r\n    height: 141px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardContent = styled.div`\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst MovieCardTitle = styled.div`\r\n    font-size: 19.2px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardReleaseDate = styled.div`\r\n    font-size: 16px;\r\n    color: #999;\r\n`;\r\n\r\nconst MovieCardDescription = styled.div`\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    height: 72px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst KeywordName = styled.div`\r\n    font-size: 1.6em;\r\n    font-weight: 700;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieQuantity = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    opacity: 0.5;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieListByKeywords = ({movies, totalResults, keywordName, history}) => {\r\n    const size = useWindowSize();\r\n    const moviesItem = movies.map((item, index) => {\r\n        \r\n        const releaseDate = moment(item.release_date).format('DD/MM/YYYY');\r\n    \r\n        const src = !item.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path);\r\n\r\n\r\n        return (\r\n            <MovieCardWrapper key={index}>\r\n                <MovieCardImg \r\n                    src={src}\r\n                    onClick={() => {\r\n                        history.push(`/movie/${item.id}`)\r\n                    }}/>\r\n                <MovieCardContent>\r\n                    <MovieCardTitle\r\n                        onClick={() => {\r\n                            history.push(`/movie/${item.id}`)\r\n                        }}\r\n                    >{item.title}</MovieCardTitle>\r\n                    <MovieCardReleaseDate>{releaseDate}</MovieCardReleaseDate>\r\n                    <MovieCardDescription>\r\n                        <EllipsisText text={item.overview} length={size < 415 ? 47 : 260}/>\r\n                    </MovieCardDescription>\r\n                </MovieCardContent>\r\n            </MovieCardWrapper>\r\n        )\r\n    })\r\n\r\n    const film = totalResults === 1 ? 'фильм' : totalResults < 5 ? 'фильма' : 'фильмов'\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <Header>\r\n                    <KeywordName>{keywordName}</KeywordName>\r\n                    <MovieQuantity>{totalResults} {film}</MovieQuantity>\r\n                </Header>\r\n            </HeaderWrapper>\r\n            {moviesItem}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieListByKeywords;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MoviesServices from '../../services/services';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport LoadMoreSpinner from '../shared/spinner/loadMoreSpinner';\r\nimport MovieListByKeywords from './components/movieListByKeywords';\r\n\r\nconst MovieListWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin: 0 auto 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    max-width: 1030px;\r\n    width: 85%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nexport default class MoviesByKeyword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n            loading: true,\r\n            page: 0,\r\n            loadingMore: false,\r\n            totalResults: 0,\r\n            totalPages: 0,\r\n            keywordName: ''\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.keywordId);\r\n\r\n        this.getKeywordName(this.props.keywordId);\r\n    }\r\n\r\n    onLoadingMovies = (response, results, pages) => {\r\n        this.setState({\r\n            movies: [...this.state.movies, ...response],\r\n            loading: false,\r\n            page: this.state.page + 1,\r\n            loadingMore: false,\r\n            totalResults: results,\r\n            totalPages: pages,\r\n            \r\n        })\r\n    }\r\n\r\n    getMovies = (keywordId) => {\r\n        const {page} = this.state;\r\n\r\n        this.onToogleLoading();\r\n\r\n        this.moviesServices.getMovieByKeyword(this.props.keywordId, page + 1)\r\n            .then((response) => {\r\n                this.onLoadingMovies(response.results, response.total_results, response.total_pages)\r\n            })\r\n    }\r\n\r\n    getKeywordName = (keywordId) => {\r\n        this.moviesServices.getKeywordName(this.props.keywordId)\r\n            .then((response) => {\r\n                this.onLoadingKeywordName(response.name)\r\n            })\r\n    }\r\n\r\n    onLoadingKeywordName = (response) => {\r\n        this.setState({\r\n            keywordName: response\r\n        })\r\n    }\r\n\r\n    onToogleLoading = () => {\r\n        this.setState({\r\n            loadingMore: true\r\n        })\r\n    }\r\n\r\n    showButton = () => {\r\n        const {loadingMore, totalPages} = this.state;\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n        if (totalPages !== 1) {\r\n            return (\r\n                <ButtonWrapper>\r\n                    <LoadMoreButton onClick={ () => this.getMovies()}>\r\n                        {loadSpinner}\r\n                    </LoadMoreButton>\r\n                </ButtonWrapper>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, totalResults, keywordName} = this.state;\r\n        const {history} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else {\r\n            return (\r\n                <>               \r\n                    <MovieListWrapper>\r\n                        <MovieListByKeywords \r\n                            movies={movies} \r\n                            totalResults={totalResults} \r\n                            keywordName={keywordName}\r\n                            history={history}\r\n                        />\r\n                    </MovieListWrapper>\r\n                    {this.showButton()}         \r\n                </>\r\n            ) \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CastTitle = styled.div`\r\n    font-size: 22.4px;\r\n    font-family: Arial;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst CastNumber = styled.span`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst CastItemImg = styled.img`\r\n    width: 66px;\r\n    height: 66px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastContent = styled.div``;\r\n\r\nconst DepartmentTitle = styled.div`\r\n    margin: 20px 0 8px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Actors = ({casts, history}) => {\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.map((item, index) => {\r\n        const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastItemImg \r\n                    alt={item.name} \r\n                    src={src} \r\n                    onClick={() => history.push(`/person/${item.id}`)}\r\n                />\r\n                <CastNameWrapper>\r\n                    <CastName \r\n                        onClick={() => history.push(`/person/${item.id}`)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastNameWrapper>\r\n            </CastItemWrapper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Актёрский состав <CastNumber>{cast.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                {castItem}\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Crew = ({casts, history}) => {\r\n\r\n    const {crew} = casts;\r\n\r\n    const CrewDepartment = ({department}) => {\r\n        const crewItem = crew.map((item, index) => {\r\n            const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            if (item.department === department) {\r\n                return (\r\n                    <CastItemWrapper key={index}>\r\n                        <CastItemImg \r\n                            alt={item.name} \r\n                            src={src} \r\n                            onClick={() => {history.push(`/person/${item.id}`)}}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName \r\n                                onClick={() => {history.push(`/person/${item.id}`)}}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.job}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        return crewItem;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Съёмочный состав <CastNumber>{crew.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                <DepartmentTitle>Оформление</DepartmentTitle>\r\n                <CrewDepartment department={'Art'}/>\r\n                <DepartmentTitle>Камера</DepartmentTitle>\r\n                <CrewDepartment department={'Camera'}/>\r\n                <DepartmentTitle>Костюмы и грим</DepartmentTitle>\r\n                <CrewDepartment department={'Costume & Make-Up'}/>\r\n                <DepartmentTitle>Ещё</DepartmentTitle>\r\n                <CrewDepartment department={'Crew'}/>\r\n                <DepartmentTitle>Режиссура</DepartmentTitle>\r\n                <CrewDepartment department={'Directing'}/>\r\n                <DepartmentTitle>Монтаж</DepartmentTitle>\r\n                <CrewDepartment department={'Editing'}/>\r\n                <DepartmentTitle>Свет</DepartmentTitle>\r\n                <CrewDepartment department={'Lighting'}/>\r\n                <DepartmentTitle>Продакшн</DepartmentTitle>\r\n                <CrewDepartment department={'Production'}/>\r\n                <DepartmentTitle>Звук</DepartmentTitle>\r\n                <CrewDepartment department={'Sound'}/>\r\n                <DepartmentTitle>Визуальные эффекты</DepartmentTitle>\r\n                <CrewDepartment department={'Visual Effects'}/>\r\n                <DepartmentTitle>Сценарий</DepartmentTitle>\r\n                <CrewDepartment department={'Writing'}/>\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {Actors, Crew};","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport moment from 'moment';\r\nimport {Actors, Crew} from './components/fullCastList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded} from '../../actions/actions';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 0;\r\n    margin: 0 0 30px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1110px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst MovieName = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieReleaseYear = styled.span`\r\n    font-size: 35.2px;\r\n    font-weight: 400;\r\n    opacity: 0.8;\r\n    color: #fff;\r\n`;\r\n\r\nconst MoviePosterImg = styled.img`\r\n    width: 58px;\r\n    height: 87px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieContent = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst ButtonBack = styled.div`\r\n    cursor: pointer;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    opacity: 0.6;\r\n    color: #fff;\r\n`;\r\n\r\nclass FullCast extends Component {\r\n    componentWillMount() {\r\n        const {movieId, history, details, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getDetails(movieId, MoviesService.getTVDetails);\r\n            } else {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n            }\r\n        }\r\n    }\r\n \r\n    getCast = (movieId, request) => {\r\n        const {castLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getDetails = (movieId, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => movieDetailsLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    onGoBack = () => { \r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const {casts, loadingCast, history, details} = this.props;\r\n        const spinnerActors = loadingCast ? <Spinner/> : <Actors casts={casts} history={history}/>;\r\n        const spinnerCrew = loadingCast ? <Spinner/> : <Crew casts={casts} history={history}/>;\r\n\r\n        const releaseYear = moment(details.first_air_date || details.release_date).format('YYYY');\r\n        const src = !details.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w58_and_h87_face' + details.poster_path);\r\n        \r\n        return (\r\n            <>\r\n                <HeaderWrapper>\r\n                    <Header>\r\n                        <MoviePosterImg src={src} alt={details.name || details.title} onClick={this.onGoBack}/>\r\n                        <MovieContent>\r\n                            <MovieName onClick={this.onGoBack}>{details.name || details.title}\r\n                                <MovieReleaseYear> ({releaseYear})</MovieReleaseYear>\r\n                            </MovieName>  \r\n                            <ButtonBack\r\n                                onClick={this.onGoBack}\r\n                            > <i className=\"fas fa-arrow-left\"></i> Назад на главную</ButtonBack>\r\n                        </MovieContent>\r\n                    </Header>\r\n                </HeaderWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {spinnerActors}\r\n                        </Col>\r\n                        <Col>\r\n                            {spinnerCrew}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, casts, loadingCast} = state.movieDetailsReducer;\r\n\r\n    return {\r\n        details: movieDetails,\r\n        casts,\r\n        loadingCast\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(FullCast));","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport MoviesServices from '../../../services/services';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MovieListItemWrapper = styled.div`\r\n    border-bottom: ${props => !props.hasBorder ? '1px solid rgb(227, 227, 227)' : 'none'};\r\n    font-size: 16px;\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`   \r\n    font-weight: 400;\r\n    padding: 8px 16px;\r\n    width: 70px;\r\n    text-align: center;\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n    font-weight: 600;\r\n    padding: 8px 0 8px 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LikeCharacter = styled.div`\r\n    opacity: 0.5;\r\n    padding: 0 8px;\r\n`;\r\n\r\nconst Character = styled.div`\r\n    opacity: 0.8;\r\n    padding: 8px 16px 8px 0;\r\n`;\r\n\r\nconst MoviePreviewButton = styled.div`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    border: 1px solid #000;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    .popover-body {\r\n        width: 535px;\r\n        background-color: rgb(3, 37, 65);\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        cursor: default;\r\n        padding: 13px;\r\n    }\r\n\r\n    .bs-popover-top > .arrow::after, .bs-popover-auto[x-placement^=\"top\"] > .arrow::after{\r\n        border-top-color: rgb(3, 37, 65);\r\n    }\r\n`;\r\n\r\nconst CircleHover = styled.div`\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #000;\r\n    opacity: ${(props) => props.show ? 1 : 0};\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst PopoverImgWrapper = styled.div``;\r\n\r\nconst PopoverPoster = styled.img`\r\n    width: 94px;\r\n    height: 141px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverContentWrapper = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst PopoverTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst PopoverTitle = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverDescription = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 21.6px;\r\n`;\r\n\r\nconst PopoverRate = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    padding: 4px 8px;\r\n    font-size: 14.4px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-left: 10px;\r\n\r\n    & i {\r\n        font-size: 10px;\r\n        margin-right: 3px;\r\n    }\r\n`;\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n\r\n    &:hover {\r\n        color:rgb(30, 213, 169);\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PersonDetailsCasts = ({cast}) => {\r\n    const [castItem, setCastItem] = useState([]);\r\n    const [filterSelected, setFilterSelected] = useState(false);\r\n    const noDateCasts = cast.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCasts = cast.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCast = releaseDateCasts.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n\r\n    const allCasts = [...noDateCasts, ...sortedCast];\r\n\r\n    const filteredByMovieType = allCasts.filter(item => item.media_type === 'movie');\r\n    const filteredByTVType = allCasts.filter(item => item.media_type === 'tv');\r\n    const movieQuantity = filteredByMovieType.length;\r\n    const tvQuantity = filteredByTVType.length;\r\n    const movies = (casts) => {\r\n        return casts.map((item, index, arr) => {\r\n            if (item.title || item.name) {\r\n                const releaseDate = item.release_date || item.first_air_date;\r\n                const fullDateToYear = moment(releaseDate).format('YYYY');\r\n                const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n                let current;\r\n                let next;\r\n                if (index > 0) {\r\n                    current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                    next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n                }\r\n                return (\r\n                    <HistoryItem key={index} cast={item} date={date} hasBorder={next === current}/>  \r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n    }, []);\r\n\r\n    const onSelect = (content) => {\r\n        const data = movies(content)\r\n        setCastItem(data)\r\n        setFilterSelected(true)\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n        setFilterSelected(false)\r\n    }\r\n\r\n    const clearButton = filterSelected ? <ClearButton onClick={clearFilter}>Очистить</ClearButton> : null;\r\n\r\n    return (\r\n        <>\r\n            <MovieListWrapper>\r\n                <DepartmentListTitle>\r\n                    Актёрское искусство\r\n                    <FilterWrapper>\r\n                        {clearButton}\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Все\">\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByMovieType)}>Фильмы {movieQuantity}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByTVType)}>ТВ Сериалы {tvQuantity}</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </FilterWrapper>\r\n                </DepartmentListTitle>\r\n                <MovieListContent>\r\n                    {castItem}\r\n                </MovieListContent>\r\n            </MovieListWrapper>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst HistoryItem = ({cast, date, hasBorder}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = cast.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + cast.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = cast.vote_average.toFixed(1);\r\n    const tvEpisodes = cast.episode_count ? `(${cast.episode_count} эпизодов)` : null;\r\n  \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n            <ReleaseDate>{date}</ReleaseDate>\r\n            <MoviePreviewButton ref={ref}\r\n                onClick={handleClick}>\r\n                    <CircleHover show={show}></CircleHover>  \r\n            </MoviePreviewButton>\r\n                <Overlay \r\n                    show={show}\r\n                    target={target}\r\n                    container={ref.current}\r\n                    rootClose={true}\r\n                    onHide={handleClick}\r\n                >\r\n                    <Popover>\r\n                        <Popover.Content>\r\n                            <PopoverImgWrapper>\r\n                                <PopoverPoster \r\n                                    src={src} \r\n                                    alt={cast.title || cast.name} \r\n                                    onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                />\r\n                            </PopoverImgWrapper>\r\n                            <PopoverContentWrapper>\r\n                                <PopoverTitleWrapper>\r\n                                    <PopoverTitle\r\n                                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                    >{cast.title || cast.name}</PopoverTitle>\r\n                                    <PopoverRate>\r\n                                        <i className=\"fas fa-star\"></i> {rate}\r\n                                    </PopoverRate>\r\n                                </PopoverTitleWrapper> \r\n                                <PopoverDescription>{textEllipsis(cast.overview, 96)}</PopoverDescription>    \r\n                            </PopoverContentWrapper>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n            <MovieTitle\r\n                onClick={() => handleRouting(cast.id, cast.media_type)}\r\n            >{cast.title || cast.name}</MovieTitle>\r\n            <LikeCharacter> {tvEpisodes} как</LikeCharacter>\r\n            <Character>{cast.character}</Character>\r\n        </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\nexport default PersonDetailsCasts;\r\nexport {CircleHover, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate};","import React, {useState} from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport {CircleHover, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate} from './personDetailsCasts';\r\nimport MoviesServices from '../../../services/services';\r\n\r\n\r\n\r\nconst PersonDetailsCrew = ({crew}) => {\r\n    const noDateCrew = crew.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCrew = crew.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCrew = releaseDateCrew.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n    \r\n    const allCrews = [...noDateCrew, ...sortedCrew];\r\n    \r\n    const crewItem = allCrews.map((item, index, arr) => {\r\n        if (item.title || item.name) {\r\n            const releaseDate = item.release_date || item.first_air_date;\r\n            const fullDateToYear = moment(releaseDate).format('YYYY');\r\n            const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n            let current;\r\n            let next;\r\n            if (index > 0) {\r\n                current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n            }\r\n            return (\r\n                <HistoryItem key={index} item={item} date={date} hasBorder={next === current}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return crewItem;\r\n}\r\n\r\n\r\nconst HistoryItem = ({item, date, hasBorder}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = item.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = item.vote_average.toFixed(1);\r\n    const tvEpisodes = item.episode_count ? `(${item.episode_count} эпизодов)` : null;\r\n    \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                debugger\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n                <ReleaseDate>{date}</ReleaseDate>\r\n                <MoviePreviewButton ref={ref}\r\n                 onClick={handleClick}>\r\n                        <CircleHover show={show}></CircleHover>  \r\n                </MoviePreviewButton>\r\n                    <Overlay \r\n                        show={show}\r\n                        target={target}\r\n                        container={ref.current}\r\n                        rootClose={true}\r\n                        onHide={handleClick}\r\n                    >\r\n                        <Popover>\r\n                            <Popover.Content>\r\n                                <PopoverImgWrapper>\r\n                                    <PopoverPoster \r\n                                        src={src} \r\n                                        alt={item.title || item.name} \r\n                                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                                    />\r\n                                </PopoverImgWrapper>\r\n                                <PopoverContentWrapper>\r\n                                    <PopoverTitleWrapper>\r\n                                        <PopoverTitle\r\n                                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                                        >{item.title || item.name}</PopoverTitle>\r\n                                        <PopoverRate>\r\n                                            <i className=\"fas fa-star\"></i> {rate}\r\n                                        </PopoverRate>\r\n                                    </PopoverTitleWrapper> \r\n                                    <PopoverDescription>{textEllipsis(item.overview, 96)}</PopoverDescription>    \r\n                                </PopoverContentWrapper>\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    </Overlay>\r\n                <MovieTitle\r\n                    onClick={() => handleRouting(item.id, item.media_type)}\r\n                >{item.title || item.name}</MovieTitle>\r\n                <LikeCharacter> {tvEpisodes} ...</LikeCharacter>\r\n                <Character>{item.job}</Character>\r\n            </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\n\r\nexport default PersonDetailsCrew;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PersonDetailsCrew from './personDetailsCrew';\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst CrewByDepartments = ({crew}) => {\r\n\r\n    const filteredCrew = (department) => {\r\n        return crew.filter(item => item.department === department);\r\n    }\r\n\r\n    const production = !filteredCrew(\"Production\").length ? null : <Department crew={filteredCrew(\"Production\")}/>;\r\n    const writing = !filteredCrew(\"Writing\").length ? null : <Department crew={filteredCrew(\"Writing\")}/>;\r\n    const art = !filteredCrew(\"Art\").length ? null : <Department crew={filteredCrew(\"Art\")}/>;\r\n    const camera = !filteredCrew(\"Camera\").length ? null : <Department crew={filteredCrew(\"Camera\")}/>;\r\n    const makeUp = !filteredCrew(\"Costume & Make-Up\").length ? null : <Department crew={filteredCrew(\"Costume & Make-Up\")}/>;\r\n    const crews = !filteredCrew(\"Crew\").length ? null : <Department crew={filteredCrew(\"Crew\")}/>;\r\n    const directing = !filteredCrew(\"Directing\").length ? null : <Department crew={filteredCrew(\"Directing\")}/>;\r\n    const editing = !filteredCrew(\"Editing\").length ? null : <Department crew={filteredCrew(\"Editing\")}/>;\r\n    const lighting = !filteredCrew(\"Lighting\").length ? null : <Department crew={filteredCrew(\"Lighting\")}/>;\r\n    const sound = !filteredCrew(\"Sound\").length ? null : <Department crew={filteredCrew(\"Sound\")}/>;\r\n    const visualEffects = !filteredCrew(\"Visual Effects\").length ? null : <Department crew={filteredCrew(\"Visual Effects\")}/>;\r\n\r\n    return (\r\n        <MovieListWrapper>\r\n            {production}\r\n            {writing}\r\n            {art}\r\n            {camera}\r\n            {makeUp}\r\n            {crews}\r\n            {directing}\r\n            {editing}\r\n            {lighting}\r\n            {sound}\r\n            {visualEffects}\r\n        </MovieListWrapper>\r\n    )\r\n}\r\n\r\nconst Department = ({crew}) => {\r\n    return (\r\n        <>\r\n            <DepartmentListTitle>{crew[0].department}</DepartmentListTitle>\r\n            <MovieListContent>\r\n                <PersonDetailsCrew crew={crew}/>\r\n            </MovieListContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrewByDepartments;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport {PersonDetailsCasts, CrewByDepartments} from './index';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport MoviesServices from '../../../services/services';\r\nimport {Overlay, LinkIconWrapper, Link} from '../../moviesPage/components/movieDetailsPage/components/originalDetails';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst ImgWrapper = styled.img`\r\n    width: 300px;\r\n    height: 450px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n    max-width: 890px;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`;\r\n\r\nconst BioWrapper = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n    margin: 30px 0;\r\n`;\r\n\r\nconst BioContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;  \r\n    height: ${props => (props.mainHeight && props.childRef > 200) ? '200px' : 'auto' };\r\n    overflow: hidden;  \r\n    transition: height 200ms;\r\n    text-align: justify;\r\n\r\n    &.open {\r\n        height: ${props => props.childRef + 'px'};\r\n    }\r\n`;\r\n\r\nconst PersonalInfo = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n`;\r\n\r\nconst PersonalInfoItemTitle = styled.div`\r\n    font-size:16px;\r\n    font-weight:600;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst PersonalInfoItemSubtitle = styled.div`\r\n    font-size:16px;\r\n    font-weight:400;\r\n`;\r\n\r\nconst AlsoKnowWrapper = styled.div`\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ReadMoreButton = styled.button`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${props => (props.mainHeight && props.childRef > 200) ? 'flex' : 'none'};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228); \r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PersonDetails = ({person, cast, crew, socialLink}) => {\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n    const history = useHistory();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n    \r\n    const onOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight)\r\n    }\r\n    const classNames = isOpen ? 'open' : '';\r\n    const src = !person.profile_path ? (process.env.PUBLIC_URL + '/assets/avatar.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + person.profile_path);\r\n    const biography = !person.biography ? `У нас нет биографии для ${person.name}` : <div ref={element => getElementHeight(element)}>{person.biography}</div>;\r\n    const gender = person.gender === 1 ? 'Женский' : 'Мужской';\r\n    const alsoKnow = person.also_known_as.map((item, index) => {\r\n        return (\r\n            <AlsoKnowWrapper key={index}>\r\n                {item}\r\n            </AlsoKnowWrapper>\r\n        )\r\n    })\r\n    const birthday = person.birthday ? person.birthday : '-';\r\n    const ageAlive = !person.birthday ? ' ' : person.deathday ? null : (`(${moment().diff(`${person.birthday}`, 'years')} лет)`);\r\n    const ageDead = moment([person.deathday]).diff( moment([person.birthday]) , 'years');\r\n    const dateOfDeath = !person.deathday ? null : <PersonalInfoItemTitle>Дата смерти<PersonalInfoItemSubtitle>{person.deathday} ({ageDead} лет)</PersonalInfoItemSubtitle></PersonalInfoItemTitle>;\r\n    const acting = cast.length !== 0 ? <PersonDetailsCasts cast={cast}/> : null;\r\n    const filmCrew = crew.length !== 0 ? <CrewByDepartments crew={crew}/> : null;\r\n    const famousCast = cast.length !== 0 ? <FamousCast cast={cast} history={history}/> : null;\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <Col className=\"col-4\">\r\n                <ImgWrapper src={src} alt={person.name}/>\r\n                <LinkIconWrapper>\r\n                    {overlayFacebook}\r\n                    {overlayTwitter}\r\n                    {overlayInstagram}\r\n                </LinkIconWrapper>\r\n                <PersonalInfo>Персональная информация</PersonalInfo>\r\n                <PersonalInfoItemTitle>Известность за\r\n                    <PersonalInfoItemSubtitle>{person.known_for_department}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Пол\r\n                    <PersonalInfoItemSubtitle>{gender}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Дата рождения\r\n                    <PersonalInfoItemSubtitle>{birthday} {ageAlive}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                {dateOfDeath}\r\n                <PersonalInfoItemTitle>Место рождения\r\n                    <PersonalInfoItemSubtitle>{person.place_of_birth}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Также известность как\r\n                    <PersonalInfoItemSubtitle>{alsoKnow}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n            </Col>\r\n            <Col className=\"col-8\">\r\n                <DescriptionWrapper>\r\n                    <TitleWrapper>{person.name}</TitleWrapper>\r\n                    <BioWrapper>Биография\r\n                        <BioContent \r\n                            className={classNames}\r\n                            childRef={elementHeight}\r\n                            mainHeight={person.biography}\r\n                        >{biography}</BioContent>\r\n                        <ReadMoreButton\r\n                            childRef={elementHeight}\r\n                            mainHeight={person.biography}\r\n                            onClick={onOpen}\r\n                        >\r\n                            Читать ещё <i className=\"fas fa-chevron-right\"></i>\r\n                        </ReadMoreButton>\r\n                    </BioWrapper>   \r\n                </DescriptionWrapper>\r\n                {famousCast} \r\n                {acting}\r\n                {filmCrew}                 \r\n           </Col>            \r\n        </>            \r\n    )\r\n}\r\n\r\nconst FamousCast = ({cast, history}) => {\r\n    \r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    let carousel;\r\n\r\n    const castItem = cast.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.poster_path ? ('https://image.tmdb.org/t/p/w150_and_h225_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name || item.title} \r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    >\r\n                        <EllipsisText text={item.name || item.title} length={13}/>\r\n                    </CastName>\r\n                </CastItemWrapper>\r\n            )\r\n        });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <CastTitle>Известность за</CastTitle>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={1} \r\n                    itemsToShow={5}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n        </CarouselWrapper>  \r\n    )\r\n}\r\n\r\nexport default PersonDetails;","import React, {Component} from 'react';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport MoviesServices from '../../services/services';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport {PersonDetails} from './components';\r\n\r\n\r\nexport default class PersonBiography extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n            person: null,\r\n            loading: true,\r\n            cast: null,\r\n            crew: null,\r\n            socialLink: {}\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {personId} = this.props;\r\n        this.getBiography(personId);  \r\n        this.getPersonSocailLink(personId); \r\n    }\r\n\r\n    onLoading = (response, cast, crew) => {\r\n        this.setState({\r\n            person: response,\r\n            loading: false,\r\n            cast: cast,\r\n            crew: crew,       \r\n        })\r\n    }\r\n\r\n    getBiography = (personId) => {\r\n        this.moviesServices.getPersonBiography(personId)\r\n            .then((response) => {\r\n                this.onLoading(response.biography, response.combinedMoviesTv.cast, response.combinedMoviesTv.crew)\r\n            })\r\n    }\r\n\r\n    getPersonSocailLink = (personId) => {\r\n        this.moviesServices.getPersonExternalIds(personId)\r\n            .then((response) => {\r\n                this.onLoadingLink(response)\r\n            })\r\n    }\r\n\r\n    onLoadingLink = (response) => {\r\n        this.setState({\r\n            socialLink: response\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {person, loading, cast, crew, socialLink} = this.state;\r\n\r\n        const spinnerPerson = loading ? <Spinner/> : <PersonDetails person={person} cast={cast} crew={crew} socialLink={socialLink}/>\r\n        return(\r\n            <Container className=\"mt-4\">\r\n                <Row>\r\n                    {spinnerPerson}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularTvRequested, popularTvLoaded, popularTvError, popularTvMoreRequested, popularTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass TVPopularPage extends Component {   \r\n    componentWillMount() { \r\n        if(!this.props.tv.length) {\r\n            this.props.popularTvRequested();\r\n            this.loadTV(this.props.popularTvLoaded)\r\n        }      \r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTv = () => {\r\n        const {page, popularTvMoreRequested, popularTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        popularTvMoreRequested();\r\n        this.loadTV(popularTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTv}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularTv, popularPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: popularTv,\r\n        page: popularPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVPopularPage));\r\n","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {airingTodayTvRequested, airingTodayTvLoaded, popularTvError, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass AiringTodayPage extends Component {\r\n    componentWillMount() {\r\n        if (!this.props.tv.length) {\r\n            this.props.airingTodayTvRequested();\r\n            this.loadTV(this.props.airingTodayTvLoaded);\r\n        }\r\n     }\r\n \r\n     loadTV = (success) => {\r\n         const {page, MoviesService, popularTvError} = this.props;\r\n \r\n         MoviesService.getTVAiringToday(page + 1)\r\n             .then((res) => success(res.results))\r\n             .catch(error => popularTvError())\r\n     }\r\n \r\n     loadMoreTV = () => {\r\n         const {page, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} = this.props;\r\n \r\n         if (page > 500) {\r\n             return\r\n         }\r\n \r\n         airingTodayTvMoreRequested();\r\n         this.loadTV(airingTodayTvMoreLoaded)\r\n     }\r\n \r\n     render() {\r\n         const {tv, loading, loadingMore, history} = this.props;\r\n         \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n     }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {airingTodayTv, loading, loadingMore, airingTodayPage} = state.tvPageReducer;\r\n    return {\r\n        tv: airingTodayTv,\r\n        page: airingTodayPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(AiringTodayPage));","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedTvRequested, topRatedTvTvLoaded, popularTvError, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass TVTopRatedPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.topRatedTvRequested();\r\n           this.loadTV(this.props.topRatedTvTvLoaded)\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n    \r\n    loadMoreTV = () => {\r\n        const {page, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedTvTvMoreRequested();\r\n        this.loadTV(topRatedTvTvMoreLoaded)\r\n    } \r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedTv, topRatedPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: topRatedTv,\r\n        page: topRatedPage,\r\n        loading, \r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVTopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {onTheAirTvRequested, onTheAirTvLoaded, popularTvError, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass OnTheAirPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.onTheAirTvRequested();\r\n           this.loadTV(this.props.onTheAirTvLoaded);\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVOnTheAir(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTV = () => {\r\n        const {page, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        onTheAirTvMoreRequested();\r\n        this.loadTV(onTheAirTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {onTheAirTv, loading, loadingMore, onTheAirPage} = state.tvPageReducer;\r\n    return {\r\n        tv: onTheAirTv,\r\n        page: onTheAirPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(OnTheAirPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { Pagination } from '@material-ui/lab';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst PersonItemWrapper = styled.div`\r\n    max-width: 235px;\r\n    width: 100%;\r\n    min-height: ${props => props.size < 415 ? '220px' : '287px'};\r\n    height: 100%;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PersonImg = styled.img`\r\n    width: 100%;\r\n    height: ${props => props.size < 415 ? '63%' : '80%'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonNameWrapper = styled.div`\r\n    padding: 8px 10px;\r\n`;\r\n\r\nconst PersonName = styled.div`\r\n    font-size: 16px;\r\n    line-height: 19.2px;\r\n    font-weight: 700;\r\n    text-align: left;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonCast = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 17.28px;\r\n    opacity: 0.6;\r\n    text-align: left;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 700;\r\n    padding: 0 0 15px 30px;\r\n`;\r\n\r\nconst PersonList = ({person, loading, history, url, totalPages, getPerson, page}) => {\r\n    const size = useWindowSize();\r\n    const personItem = person.map(item => {\r\n        const {name, known_for, profile_path, id} = item;\r\n        const src = profile_path ? ('https://image.tmdb.org/t/p/w235_and_h235_face' + profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n        \r\n        const castArray = known_for.map(movie => movie.name || movie.title);\r\n        const castToString = castArray.join(', ');\r\n\r\n        return (\r\n            <Col key={id} className='mb-4 col-xl-3 col-6 col-sm-6'>\r\n                <PersonItemWrapper size={size}>\r\n                    <PersonImg \r\n                        size={size}\r\n                        src={src} \r\n                        alt={name}\r\n                        onClick={() => history.push(`${url}/${id}`)}\r\n                    />\r\n                    <PersonNameWrapper>\r\n                        <PersonName\r\n                            onClick={() => history.push(`${url}/${id}`)}\r\n                        >{name}</PersonName>\r\n                        <PersonCast>\r\n                            <EllipsisText text={castToString} length={size < 415 ? 15 : 27}/>\r\n                        </PersonCast>\r\n                    </PersonNameWrapper>  \r\n                </PersonItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container className=\"mt-4 mt-lg-5 container-xl\">\r\n                <Row>\r\n                    <SectionTitle>\r\n                        Популярные люди\r\n                    </SectionTitle>\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                    {personItem}\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100 mb-5\">\r\n                    <Pagination \r\n                        size={size < 415 ? \"small\" : 'large'}\r\n                        count={totalPages} \r\n                        boundaryCount={2}\r\n                        page={page}\r\n                        onChange={(event, page) => {\r\n                            getPerson(page)\r\n                        }}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonList;","import React, { Component }  from 'react';\r\nimport PersonList from './components/personList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularPersonRequested, popularPersonLoaded, popularPersonError} from '../../actions/actions';\r\n\r\nclass PersonPage extends Component {  \r\n    componentWillMount() {\r\n        const {popularPersonRequested, person, history, page} = this.props;\r\n        \r\n        history.push({\r\n            pathname: '/person',\r\n            search: `?page=${page}`\r\n        })\r\n\r\n        if (!person.length) {\r\n            popularPersonRequested();\r\n            this.loadPerson(); \r\n        }     \r\n    }\r\n\r\n    onServiceRequest = (page) => {\r\n        const {MoviesService, popularPersonError, popularPersonLoaded, history} = this.props;\r\n\r\n        MoviesService.getPopularPerson(page)\r\n        .then((res) => {\r\n            if (res) {\r\n                history.push({\r\n                    pathname: '/person',\r\n                    search: `?page=${page}`\r\n                });\r\n                const payload = {\r\n                    person: res.results,\r\n                    totalPages: res.total_pages,\r\n                    page: res.page\r\n                }\r\n                popularPersonLoaded(payload)\r\n            } \r\n        })\r\n        .catch(error => popularPersonError())\r\n    }\r\n\r\n    loadPerson = () => {\r\n        const {page} = this.props;\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    loadMorePerson = (page) => {\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    render() {\r\n        const {person, loading, totalPages, page, history} = this.props;\r\n    \r\n        return(\r\n            <PersonList\r\n                person={person}\r\n                loading={loading}\r\n                page={page}\r\n                totalPages={totalPages}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getPerson = {this.loadMorePerson}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {person, loading, page, totalPages} = state.popularPersonReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        page,\r\n        totalPages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PersonPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\n\r\nconst CastItemWrapper = styled.div`\r\n    max-width: ${props => props.large ? '1218px' : '290px'};\r\n    width: 100%;\r\n    display: flex;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 7px;\r\n    margin: 10px 0 4px;\r\n`;\r\n\r\nconst CastImgWrapper = styled.img`\r\n    width: ${props => props.large ? '94px' : '60px'};\r\n    height: ${props => props.large ? '141px' : '60px'};\r\n    border-top-left-radius: 7px;\r\n    border-bottom-left-radius: 7px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 14px;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: ${props => props.large ? '19px' : '16px'};\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: #08e8de;\r\n    }\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size:14.4px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 1.4em;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`\r\n    color: rgb(153, 153, 153);\r\n    font-size: 16px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionCast = ({cast, crew, parts, history}) => {  \r\n\r\n    const onGoToPersonDetails = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const onGoToMovieDetails = (id) => {\r\n        history.push(`/movie/${id}`)\r\n    }\r\n\r\n    const castItem = cast.filter((item, index) => index < 12)\r\n        .map((item, index) => {\r\n            const src = item.profile_path ? 'https://image.tmdb.org/t/p/w64_and_h64_face' + item.profile_path : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper>\r\n                        <CastImgWrapper \r\n                            src={src} \r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>\r\n                                <EllipsisText text={item.character} length={20}/> \r\n                            </CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n    const crewItem = crew.filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const src = item.profile_path ? 'https://image.tmdb.org/t/p/w64_and_h64_face' + item.profile_path : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper>\r\n                        <CastImgWrapper \r\n                            src={src} \r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.department}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n    const partItem = parts.map((part, index) => {\r\n        const src = part.poster_path ? 'https://image.tmdb.org/t/p/w94_and_h141_bestv2' + part.poster_path : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return (\r\n            <Col sm={12} key={index}>\r\n                <CastItemWrapper large>\r\n                    <CastImgWrapper \r\n                        src={src} \r\n                        alt={part.title} \r\n                        large\r\n                        onClick={() => onGoToMovieDetails(part.id)}\r\n                    />\r\n                    <CastNameWrapper>\r\n                        <CastName \r\n                            large\r\n                            onClick={() => onGoToMovieDetails(part.id)}\r\n                        >\r\n                            {part.title}\r\n                            <ReleaseDate>{moment(part.release_date).format('DD/MM/YYYY')}</ReleaseDate>\r\n                        </CastName>\r\n                        <CastCharacter>\r\n                            <EllipsisText text={part.overview} length={270}/>\r\n                        </CastCharacter>\r\n                    </CastNameWrapper>\r\n                </CastItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <Container>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            В главных ролях\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {castItem}\r\n                </Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            Постановщики\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {crewItem}\r\n                </Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            {parts.length} фильмов\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {partItem}\r\n                </Row>\r\n            </Section>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CollectionCast;","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {ImgWrapper, Title, DetailsList, Vote, Overview} from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport Rate from '../../shared/rate';\r\nimport {BackgroundWrapper} from '../../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport CollectionCast from './collectionCast';\r\n\r\nconst DetailsTitleWrapper = styled.div`\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst DetailsContentWrapper = styled.span`\r\n    font-weight: 400;\r\n`;\r\n\r\n\r\nconst CollectionDetails = ({collection, history, genre, cast, crew, revenue}) => {\r\n\r\n    const {name, poster_path, overview, parts, backdrop_path} = collection;\r\n    const averageVote = (parts.reduce((sum, item) => {\r\n        return sum + item.vote_average;\r\n    }, 0) / parts.length).toFixed(2);\r\n    const {genres} = genre;\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + poster_path);\r\n\r\n    const movieOverview = !overview ? '-' : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty('parts') && Object.keys(genre).length) {\r\n            parts.forEach(part => {\r\n                part.genre_ids.forEach(id => {\r\n                    genres.forEach(genre => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name)\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        return null;\r\n    }  \r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index\r\n    })\r\n    const uniquesToString = uniques.join(', ');\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue ? `$${nf.format(revenue).replace(/\\s/g, ',')}` : '-';\r\n\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={backdrop_path}>\r\n                    <Container>\r\n                        <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                            <Col className='col-4'>\r\n                                <ImgWrapper src={src} alt={name}/>\r\n                            </Col>\r\n                            <Col className='col-8 text-left px-0'>\r\n                                <Title>{name}</Title>\r\n                                <DetailsList>\r\n                                    <Row>                       \r\n                                        <Col className=\"col-auto\">{uniquesToString}</Col>\r\n                                    </Row>  \r\n                                    <Row className=\"font-weight-bold py-3\">\r\n                                        <Col className=\"col-auto d-flex\">\r\n                                            <Rate vote={averageVote}/>   \r\n                                            <Vote>Пользовательский счёт</Vote>\r\n                                        </Col>\r\n                                    </Row> \r\n                                    <Row className='flex-column py-2'>\r\n                                        <Col>\r\n                                            <Overview>\r\n                                                Обзор\r\n                                            </Overview>\r\n                                        </Col>\r\n                                        <Col>{movieOverview}</Col>\r\n                                    </Row>\r\n                                    <Row className='flex-column py-2'>\r\n                                        <Col>\r\n                                            <DetailsTitleWrapper>\r\n                                                Число фильмов: <DetailsContentWrapper>{parts.length}</DetailsContentWrapper>\r\n                                            </DetailsTitleWrapper>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <DetailsTitleWrapper>\r\n                                                Сборы: <DetailsContentWrapper>{movieRevenue}</DetailsContentWrapper>\r\n                                            </DetailsTitleWrapper>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </DetailsList>  \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n            </BackgroundWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionDetails;","import React, { Component }  from 'react';\r\nimport MoviesServices from '../../services/services';\r\nimport CollectionDetails from './components/collectionDetails';\r\nimport Spinner from '../shared/spinner/spinner';\r\n\r\n\r\nexport default class CollectionPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.moviesServices = new MoviesServices();\r\n        this.state = {\r\n            collection: null,\r\n            loading: true,\r\n            genresObj: {},\r\n            cast: [],\r\n            crew: [],\r\n            revenue: 0\r\n        }     \r\n    }\r\n    \r\n    componentWillMount() {\r\n        const {collectionId} = this.props;\r\n        this.getGenresName(); \r\n        this.loadCollection(collectionId); \r\n    }\r\n\r\n    loadCollection = (collectionId) => {\r\n        this.moviesServices.getCollection(collectionId)\r\n            .then((res) => { \r\n                if (res) {\r\n                    const movieIds = res.parts.map(part => part.id);\r\n                    this.onLoading(res);\r\n                    this.getCast(res);\r\n                    this.getMovieDetails(movieIds);\r\n                }\r\n            })\r\n    }\r\n\r\n    onLoading = (response) => {\r\n        this.setState({\r\n            collection: response,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    getGenresName = () => {\r\n        this.moviesServices.getGenreList()\r\n            .then((res) => { \r\n                this.onLoadingGenres(res)\r\n            })\r\n    }\r\n\r\n    onLoadingGenres = (response) => {\r\n        this.setState({\r\n            genresObj: response\r\n        })\r\n    }\r\n\r\n    getMovieDetails = (ids) => {\r\n        const total = [];\r\n        ids.forEach(id => {\r\n            this.moviesServices.getMovieDetails(id)\r\n            .then((response) => {\r\n                if (response) {\r\n                    total.push(response.revenue);\r\n                    this.onLoadingDetails(total);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    onLoadingDetails = (total) => {\r\n        const totalRevenue = total.reduce((sum, current) => sum + current, 0)\r\n        this.setState({\r\n            revenue: totalRevenue\r\n        })\r\n    }\r\n\r\n    getCast = (collection) => {\r\n        const ids = collection.parts.map(part => part.id)\r\n        this.moviesServices.getCast(ids)\r\n        .then((res) => { \r\n            this.onLoadingCast(res.cast, res.crew);\r\n\r\n        })\r\n    }\r\n\r\n    onLoadingCast = (cast, crew) => {\r\n        this.setState({\r\n            cast,\r\n            crew\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {collection, loading, genresObj, cast, crew, revenue} = this.state;\r\n        const {history} = this.props;\r\n        const template = loading ? <Spinner/> : <CollectionDetails \r\n                                                    collection={collection} \r\n                                                    loading={loading} \r\n                                                    history={history} \r\n                                                    genre={genresObj}\r\n                                                    cast={cast}\r\n                                                    crew={crew}\r\n                                                    revenue={revenue}\r\n                                                />\r\n        \r\n        return(\r\n            <>{template}</>\r\n        )\r\n    }\r\n}","import React, {useState, useRef, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TogglerWrapper = styled.div`\r\n    width: fit-content;\r\n    border: 1px solid rgb(3, 37, 65);;\r\n    border-radius: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ToggleItem = styled.div`\r\n    padding: 0 15px;\r\n    color: ${props => props.isActive ? 'rgb(30, 213, 169)' : 'rgb(3, 37, 65)'};\r\n    position: relative;\r\n    z-index: 2;\r\n`;\r\n\r\nconst ToggleActive = styled.div`\r\n    background-color: rgb(3, 37, 65);\r\n    position: absolute;\r\n    height: 100%;\r\n    width: ${props => (props.width + 'px') || '100px'};\r\n    border-radius: 15px;\r\n    transition: all 200ms;\r\n\r\n    &.first-active {\r\n        left: 0;\r\n    }\r\n\r\n    &.second-active {\r\n        left: ${props => `calc(100% - ${props.width}px)`}\r\n    }\r\n`;\r\n\r\nconst Toggler = ({names, loadTrend, types}) => {\r\n    const buttonsArray = [\r\n        {\r\n            isActive: true,\r\n            text: names[0],\r\n            type: types[0]\r\n        },\r\n        {\r\n            isActive: false,\r\n            text: names[1],\r\n            type: types[1]\r\n        }\r\n    ]\r\n\r\n    const [buttons, setButtons] = useState(buttonsArray || []);\r\n    const [width, setWidth] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        if (buttons[0].isActive) {\r\n            setWidth(ref.current.clientWidth)\r\n        }\r\n    }, []);\r\n\r\n    let classNames = buttons[0].isActive ? 'first-active' : 'second-active';\r\n\r\n    const onToggle = (event, index) => {\r\n        setWidth(event.currentTarget.clientWidth);\r\n        \r\n        buttons.forEach(item => item.isActive = false);\r\n        buttons[index].isActive = true;\r\n        loadTrend(buttons[index].type)\r\n\r\n        setButtons(buttons);\r\n\r\n    }\r\n\r\n    const toggleItems = buttons.map((item, index) => {\r\n        const reference = item.isActive ? ref : null;\r\n        return (\r\n            <ToggleItem \r\n                isActive={item.isActive}\r\n                key={index}\r\n                onClick={(event) => onToggle(event, index)}\r\n                ref={reference}\r\n            >{item.text}</ToggleItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <TogglerWrapper>\r\n            {toggleItems}\r\n            <ToggleActive className={classNames} width={width}></ToggleActive>\r\n        </TogglerWrapper>\r\n    )\r\n}\r\n\r\nexport default Toggler;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Rate from '../../shared/rate';\r\nimport Toggler from '../../shared/toggler/toggler';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    max-width: 100%;\r\n    margin: 0 15px;\r\n    position: relative;\r\n    background-image: url('https://www.themoviedb.org/assets/2/v4/misc/trending-bg-39afc2a5f77e31d469b25c187814c0a2efef225494c038098d62317d923f8415.svg');\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 345px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 335px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst SectionTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: ${props => props.size < 415 ? 'center' : 'baseline'};\r\n    flex-direction: ${props => props.size < 415 ? 'column' : 'row'};\r\n    margin: 0 15px 30px 5px;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px; \r\n    margin-bottom: 15px; \r\n`;\r\n\r\nconst TrendCardWrapper = styled.div`\r\n    width: 150px;\r\n    min-width: 150px;\r\n`;\r\n\r\nconst TrendCardImg = styled.img`\r\n    border-radius: 8px;\r\n    width: 150px;\r\n    height: 225px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardTitleWrapper = styled.div`\r\n    position: relative;\r\n    padding-top: 20px;\r\n`;\r\nconst TrendCardTitle = styled.div`\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardRelease = styled.div`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst InTrend = ({inTrend, MoviesService, loadTrend, size}) => {\r\n    const history = useHistory();\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    const trendItems = inTrend.map((item, index) => {\r\n        const {id, release_date, first_air_date, media_type, name, title, poster_path, vote_average} = item;\r\n        let src = poster_path ? ('//image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n        const date = moment(release_date || first_air_date).format('DD.MM.YYYY');\r\n        return (\r\n            <TrendCardWrapper key={index}>\r\n                <TrendCardImg \r\n                    src={src} \r\n                    alt={name || title} \r\n                    onClick={() => handleRouting(id, media_type)}\r\n                />\r\n                <TrendCardTitleWrapper>\r\n                    <TrendCardTitle\r\n                        onClick={() => handleRouting(id, media_type)}\r\n                    >\r\n                        {name || title} \r\n                    </TrendCardTitle>\r\n                    <TrendCardRelease>\r\n                        {date}\r\n                    </TrendCardRelease>\r\n                    <Rate \r\n                        vote={vote_average}\r\n                        small\r\n                    />\r\n                </TrendCardTitleWrapper>\r\n            </TrendCardWrapper>\r\n        )\r\n    })\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitleWrapper size={size}>\r\n                <SectionTitle>В тренде </SectionTitle>\r\n                <Toggler names={['Сегодня', 'На этой неделе']} loadTrend={loadTrend} types={['day', 'week']}/>\r\n            </SectionTitleWrapper>\r\n            <Carousel \r\n                renderArrow={myArrow}\r\n                itemsToScroll={size < 415 ? 2 : 5} \r\n                itemsToShow={size < 415 ? 2 : 7}\r\n                focusOnSelect={false}\r\n                ref={ref => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {trendItems}\r\n            </Carousel>\r\n            <PrevButton \r\n                onClick={() => carousel.slidePrev()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton \r\n                onClick={() => carousel.slideNext()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper> \r\n    )\r\n        \r\n}\r\n\r\nexport default InTrend;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {inTrendRequested, inTrendLoaded, inTrendError} from '../../actions/actions';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport {InTrend} from './components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport useWindowSize from '../shared/useWindowSize/useWindowSize';\r\n\r\nconst HomePageWrapper = styled.div`\r\n    width: 100%;\r\n    margin: ${props => props.size < 415 ? '0 auto 10%': '10% auto'};\r\n    background-color: #f1f2f6;\r\n    border-radius: ${props => props.size < 415 ? '0' : '10px'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: ${props => props.size < 415 ? '2.4em' : '3em'};\r\n    font-weight: 700;\r\n    padding: 10% 15px;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePageSubTitle = styled.div`\r\n    font-size: 0.7em;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePage = ({title, MoviesService, inTrendLoaded, inTrendError, inTrend, loading}) => {\r\n    const size = useWindowSize();\r\n    document.title = title;\r\n\r\n    const loadTrend = (time) => {\r\n        MoviesService.getInTrend(time)\r\n            .then((res) => inTrendLoaded(res.results))\r\n            .catch(error => inTrendError());\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTrend('day')\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <HomePageWrapper size={size}>\r\n                            Добро пожаловать в Movies Database.\r\n                            <HomePageSubTitle>\r\n                                Миллионы фильмов, сериалов и людей. Исследуйте сейчас.\r\n                            </HomePageSubTitle>\r\n                        </HomePageWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <InTrend \r\n                            inTrend={inTrend} \r\n                            MoviesService={MoviesService} \r\n                            loadTrend={loadTrend} \r\n                            size={size}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {inTrend, loading} = state.homePageReducer;\r\n    return {\r\n        inTrend,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(HomePage));","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 2.5em;\r\n    padding-left: 15px;\r\n`;\r\n\r\nconst MenuBurger = styled.div`\r\n    width: 35px;\r\n    height: 5px;\r\n    position: relative;\r\n    background-color: black;\r\n    margin-right: 15px;\r\n\r\n    &::after, &::before {\r\n        content: '';\r\n        width: 35px;\r\n        height: 5px;\r\n        position: absolute;\r\n        background-color: black;\r\n    }\r\n\r\n    &::before {\r\n        top: -10px;\r\n    }\r\n\r\n    &::after {\r\n        top: 10px;\r\n    }\r\n`;\r\n\r\nconst MenuList = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #f1dfd1;\r\n    background-image: linear-gradient(315deg, #f1dfd1 0%, #f6f0ea 74%);\r\n    z-index: 50;\r\n    transform: translate(150%, 0);\r\n    transition: transform 300ms;\r\n    overflow-y: hidden;\r\n\r\n    &.active {\r\n        transform: translate(0, 0);\r\n    }\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 30px;\r\n\r\n    & i {\r\n        font-size: 2.5em;\r\n    }\r\n`;\r\n\r\nconst NavList = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst NavListItem = styled.div`\r\n    padding-top: 10px;\r\n    font-size: 1.5em;\r\n    font-weight: 800;\r\n`;\r\n\r\nconst NavListSubItem = styled.div`\r\n    padding: 15px 0 0 15px;\r\n    font-size: 0.77em;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    transition: text-decoration 200ms;\r\n    \r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    & a {\r\n        color: rgba(33, 37, 41, 0.8); \r\n    }\r\n`;\r\n\r\nconst HeaderMobile = () => {\r\n    const [classNames, setClassNames] = useState('');\r\n\r\n    const toggleMenu = (clas, overflow) => {\r\n        setClassNames(clas);\r\n        document.getElementsByTagName('html')[0].style.overflow = overflow;\r\n        document.body.style.overflow = overflow;\r\n    }\r\n\r\n    return (\r\n        <NavBarWrapper>\r\n            <LogoWrapper>\r\n                <Link to='/movie-database'>Movies DB</Link>  \r\n            </LogoWrapper>\r\n            <MenuBurger onClick={() => toggleMenu('active', 'hidden')}/>\r\n            <MenuList className={classNames}>\r\n                <CloseButton \r\n                    onClick={() => toggleMenu('', 'visible')}\r\n                >\r\n                    <i className=\"fas fa-times\"></i>\r\n                </CloseButton>\r\n                <NavList>\r\n                    <NavListItem>\r\n                        Фильмы\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/popular/'>Популярные</Link>\r\n                            <span/>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                    <NavListItem>\r\n                    Сериалы\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/popular/'>Популярные</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/top-rated/'>Лучшие</Link> \r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                    <NavListItem>\r\n                        Люди\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/person/'>Популярные люди</Link> \r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                </NavList>\r\n            </MenuList>\r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default HeaderMobile;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Rate from '../../../../../shared/rate';\r\nimport {ModalWindowMobile} from './index';\r\n\r\nconst GlobalWrapper = styled.div`\r\n    background-color: #5b6467;\r\n    background-image: linear-gradient(315deg, #5b6467 0%, #8b939a 74%);\r\n    color: #fff;\r\n`;\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    width: 100%;\r\n    background-image: linear-gradient(315deg,rgba(233,188,183,0.7) 0%,rgba(41,82,74,0.8) 74%), ${props => `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.url})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    font-family: 'Source Sans Pro';\r\n    background-color: #e9bcb7;\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    padding: 20px;\r\n\r\n    & img {\r\n        border-radius: 7px;\r\n    }\r\n`;\r\n\r\nconst TitleWrapper = styled.div``;\r\n\r\nconst Title = styled.div`\r\n    font-size: calc(0.7em + 3vw);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    padding: 16px 20px;\r\n\r\n    & span {\r\n        font-weight: 400;\r\n        opacity: 0.8;\r\n        font-size: 0.8em;\r\n    }\r\n`;\r\n\r\nconst RateWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 20px 16px;\r\n`;\r\n\r\nconst Vote = styled.div`\r\n    position: relative;\r\n    border-right: 1px solid rgba(255, 255, 255, 0.8);\r\n    font-weight: 600;\r\n    padding: 0 5px 0 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    line-height: 1;\r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n    padding-left: 5px;\r\n\r\n    &:hover{\r\n        opacity: 0.6\r\n    }\r\n\r\n    & i {\r\n        font-size: 0.6em;\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst GenreWrapper = styled.div`\r\n    background-color: #2F4353;\r\n    border-top: 1px solid rgba(0,0,0,0.2);\r\n    border-bottom: 1px solid rgba(0,0,0,0.2);\r\n    padding: 10px;\r\n`;\r\n\r\nconst ReleaseWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & i {\r\n        font-size: 0.5em;\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nconst GenreList = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst OverviewWrapper = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Tagline = styled.div`  \r\n    font-size: 1.1em;\r\n    font-weight: 400;\r\n    font-style: italic;\r\n    opacity: 0.7;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 1em;\r\n    text-align: justify;\r\n    line-height: 1.3;\r\n\r\n    & div {\r\n        font-weight: 600;\r\n        font-size: 1.3em;\r\n        padding-bottom: 5px;\r\n    }\r\n`;\r\n\r\nconst Rating = styled.div`\r\n    border: 1px solid #fff;\r\n    opacity: 0.8;\r\n    padding: 0 7px;\r\n    margin-right: 10px;\r\n    font-size: 1em;\r\n`;\r\n\r\nconst DetailsMobile = ({details, history, video, onOpenModal, modalWindow, onCloseModal, rating}) => {\r\n\r\n    const {title, name, backdrop_path, poster_path, id, homepage, vote_average, release_date, genres, runtime, tagline, overview, first_air_date, episode_run_time, created_by} = details;\r\n    const src = poster_path ? ('//image.tmdb.org/t/p/w116_and_h174_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    let duration = (runtime || episode_run_time) ? moment.duration(runtime || episode_run_time[0], \"minutes\").format(\"h : m o\").replace(':', 'h').replace('o', 'm') : null;\r\n    const genreItem = genres.map(genre => genre.name);\r\n    const genreToString = genreItem.join(', ');\r\n    const releaseYear = release_date || first_air_date ? `(${moment(release_date || first_air_date).format('YYYY')})` : null;\r\n    const releaseDate = release_date || first_air_date ? moment(release_date || first_air_date).format('DD/MM/YYYY') : null;\r\n    const rate = rating.find(item => item.iso_3166_1 === 'US');\r\n\r\n    const showRating = () => {\r\n        if (history.location.pathname.includes('tv')) {\r\n            const rateTV = rate.rating ? <Rating>{rate.rating}</Rating> : null;   \r\n            return rateTV;\r\n        } else {\r\n            const rateMovie = rate?.release_dates[0].certification ? <Rating>{rate?.release_dates[0].certification}</Rating> : null;\r\n            return rateMovie;\r\n        }\r\n    }\r\n\r\n    const trailerButton = () => {\r\n        return(\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle\r\n                    onClick = {() => onOpenModal(id)}\r\n                >Трейлер</TrailerTitle>\r\n            </TrailerWrapper>\r\n        )   \r\n    }\r\n\r\n    const modal = modalWindow ? <ModalWindowMobile video={video} onCloseModal={onCloseModal}/> : null;\r\n    const showTrailer = video?.results.length === 0 ? null : trailerButton();\r\n\r\n    return (   \r\n        <GlobalWrapper> \r\n            {modal}\r\n            <BackgroundWrapper url={backdrop_path}>\r\n                <PosterWrapper>\r\n                    <img src={src} alt={title || name}/>\r\n                </PosterWrapper>\r\n            </BackgroundWrapper>\r\n            <TitleWrapper>\r\n                <Title>{title || name} <span>{(releaseYear)}</span></Title>\r\n                <RateWrapper>\r\n                    <Rate vote={vote_average} small isStatic/>\r\n                    <Vote>Пользовательский <span>счёт</span></Vote>\r\n                    {showTrailer}  \r\n                </RateWrapper>\r\n            </TitleWrapper>\r\n            <GenreWrapper>\r\n                <ReleaseWrapper>\r\n                    {showRating()}\r\n                    {releaseDate}\r\n                    <i className=\"fas fa-circle\"></i>\r\n                    {duration}\r\n                </ReleaseWrapper>\r\n                <GenreList>{genreToString}</GenreList>\r\n            </GenreWrapper>\r\n            <OverviewWrapper>\r\n                <Tagline>{tagline}</Tagline>\r\n                <Overview>\r\n                    <div>Обзор</div>\r\n                    {overview}\r\n                </Overview>\r\n            </OverviewWrapper>\r\n        </GlobalWrapper>\r\n    )\r\n}\r\n\r\nexport default DetailsMobile;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../../shared/youtubeVideo/youtubeVideo';\r\nimport useWindowSize from '../../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: ${props => props.size + 'px'};\r\n    max-height: 40%;\r\n    width: 100%;\r\n\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: ${props => props.size + 'px'};\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindowMobile = ({video, onCloseModal}) => {\r\n    const size = useWindowSize();\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper size={size}>\r\n                <TrailerTitleWraper size={size}>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindowMobile;","import React, {useEffect} from 'react';\r\nimport Spinner from '../../../shared/spinner/spinner';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport {DetailsMobile} from './components/mobileComponents';\r\nimport WithMoviesService from '../../../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {Cast, Recommendation, Collection, OriginalDetails, Keywords} from '../movieDetailsPage/components/index';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded, keywordsRequested, keywordsLoaded, modalWindowToggle, videoLoaded, socialLinkLoaded, collectionLoaded, recommendationsLoaded, ratingRequested, ratingLoaded} from '../../../../actions/actions';\r\n\r\n\r\nconst MovieDetailsMobile = ({movieId, history, rating, loadingRating, details, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, socialLink, collection, recommendations, movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded, keywordsRequested, keywordsLoaded, modalWindowToggle, videoLoaded, socialLinkLoaded, collectionLoaded, recommendationsLoaded, MoviesService, ratingRequested, ratingLoaded}) => {\r\n\r\n    useEffect(() => {\r\n        const {pathname} = history.location;\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                keywordsRequested();\r\n                getDetails(movieId, MoviesService.getTVDetails); \r\n                getRating(movieId, MoviesService.getTVRating);\r\n                getCast(movieId, MoviesService.getTVCasts);\r\n                getKeywords(movieId, MoviesService.getTVKeywords);\r\n                getVideos(movieId, MoviesService.getTVVideos);\r\n                getSocailLink(movieId, MoviesService.getTVExternalIds);\r\n                getRecommendations(movieId, MoviesService.getTVRecommendations);\r\n            } else {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                keywordsRequested();\r\n                getDetails(movieId, MoviesService.getMovieDetails);\r\n                getRating(movieId, MoviesService.getMovieRating);\r\n                getCast(movieId, MoviesService.getCast);\r\n                getKeywords(movieId, MoviesService.getKeywords);\r\n                getVideos(movieId, MoviesService.getVideos);\r\n                getSocailLink(movieId, MoviesService.getMovieExternalIds);\r\n                getRecommendations(movieId, MoviesService.getMovieRecommendations);\r\n            } \r\n        }\r\n    }, []);\r\n\r\n    const getDetails = (id, request) => {\r\n        request(id)\r\n            .then((response) => {\r\n                movieDetailsLoaded(response);\r\n                if (response && response.belongs_to_collection) {\r\n                    getCollectionDetails(response.belongs_to_collection.id)\r\n                }  \r\n            })\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const getCast = (id, request) => {\r\n        request(id)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const getKeywords = (id, request) => {\r\n        request(id)\r\n            .then((response) => keywordsLoaded(response.keywords || response.results))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const getVideos = (id, request) => {\r\n        request(id)\r\n            .then((response) => videoLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const getSocailLink = (id, request) => {\r\n        request(id)\r\n            .then((response) => socialLinkLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const getRecommendations = (id, request) => {\r\n        request(id)\r\n            .then(response => recommendationsLoaded(response.results))\r\n            .catch(error => movieDetailsError())\r\n    }\r\n\r\n    const getCollectionDetails = (id) => {\r\n        MoviesService.getCollection(id)\r\n            .then((response) => collectionLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const getRating = (id, request) => {\r\n        request(id)\r\n            .then((response) => ratingLoaded(response.results))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    const showCollection = (isBelongToCollection) => {\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isBelongToCollection) {\r\n            return <Collection details={details} history={history} collection={collection}/>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const showRecommendations = (isRecommendation) => {\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isRecommendation.length) {\r\n            return(\r\n                <Recommendation \r\n                    history={history} \r\n                    recommendations={recommendations}\r\n                    MoviesService={MoviesService} \r\n                    getDetails={getDetails} \r\n                    getCast={getCast}\r\n                    getKeywords={getKeywords}\r\n                    getVideos={getVideos}\r\n                    getSocailLink={getSocailLink}\r\n                    getRecommendations={getRecommendations}\r\n                    movieDetailsRequested={movieDetailsRequested}\r\n                    castRequested={castRequested}\r\n                />\r\n            )\r\n        } else if (!isRecommendation.length) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const globalLoading = loading || loadingCast || loadingKeywords || loadingRating;\r\n    if (globalLoading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <DetailsMobile details={details} rating={rating} video={video} history={history} onOpenModal={modalWindowToggle} modalWindow={modalWindow} onCloseModal={modalWindowToggle}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Cast casts={casts} id={movieId} history={history}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {showCollection(details?.belongs_to_collection)}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {showRecommendations(recommendations)}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <OriginalDetails details={details} history={history} socialLink={socialLink}/>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Keywords keyword={keywords} history={history} url={'keywords'}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, socialLink, collection, recommendations, rating, loadingRating} = state.movieDetailsReducer;\r\n    return {\r\n        details: movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations,\r\n        rating,\r\n        loadingRating\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    recommendationsLoaded,\r\n    ratingRequested,\r\n    ratingLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(MovieDetailsMobile));","import React, { Component } from 'react';\r\nimport Header from '../shared/header/header';\r\nimport {PopularPage, PlayingNowPage, TopRatedPage, UpcomingPage} from '../moviesPage';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport MovieDetails from '../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport ScrollToTop from '../shared/scrollToTop/scrollToTop';\r\nimport MoviesByKeyword from '../moviesByKeywordsPage/moviesByKeyword';\r\nimport FullCast from '../fullCastPage/castsPage';\r\nimport PersonBiography from '../personDetailsPage/personBiography';\r\nimport {TVPopularPage, OnTheAirPage, TVTopRatedPage, AiringTodayPage} from '../TVPages';\r\nimport PersonPage from '../popularPersonPage/popularPersonPage';\r\nimport CollectionPage from '../collectionPage/collectionPage';\r\nimport HomePage from '../homePage/homePage';\r\nimport HeaderMobile from '../shared/header/headerMob';\r\nimport MovieDetailsMobile from '../moviesPage/components/movieDetailsPage/movieDetailsMob';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth});\r\n    }\r\n\r\n    render() {\r\n        const {width} = this.state;\r\n        const header = width < 415 ? <HeaderMobile/> : <Header/>;\r\n        return(\r\n            <Router>\r\n                {header}\r\n                <ScrollToTop>\r\n                    <Switch>\r\n                        <Redirect exact from='/' to='/movie-database'/>\r\n                        <Route exact path='/movie-database' render={\r\n                            () => {\r\n                                return <HomePage title='Movie Database'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/person' render={\r\n                            ({history}) => {\r\n                                return <PersonPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/popular' render={\r\n                            ({history}) => {\r\n                                return <PopularPage history={history} title='Популярные фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/playing-now' render={\r\n                            ({history}) => {\r\n                                return <PlayingNowPage history={history} title='Сейчас смотрят фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/upcoming' render={\r\n                            ({history}) => {\r\n                                return <UpcomingPage history={history} title='Ожидамые фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TopRatedPage history={history} title='Лучшие фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/collection/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <CollectionPage collectionId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                }  \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/playing-now/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/upcoming/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/popular/' render={\r\n                            ({history}) => {\r\n                                return <TVPopularPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/airing_today' render={\r\n                            ({history}) => {\r\n                                return <AiringTodayPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/on_the_air' render={\r\n                            ({history}) => {\r\n                                return <OnTheAirPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TVTopRatedPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/airing_today/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/on_the_air/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        \r\n                        <Route exact path=\"/movie/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route path=\"/keywords/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MoviesByKeyword keywordId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                if (width < 415) {\r\n                                    return <MovieDetailsMobile movieId = {id} history={history}/>\r\n                                } else {\r\n                                    return <MovieDetails movieId = {id} history={history}/>\r\n                                } \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/person/:id\" render={\r\n                            ({match}) => {\r\n                                const {id} = match.params;\r\n                                return <PersonBiography personId = {id}/>\r\n                            }\r\n                        }/> \r\n                    </Switch>\r\n                </ScrollToTop>\r\n            </Router>\r\n        )\r\n    }\r\n}","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    popularMovies: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    error: false,\r\n    popularPage: 0, \r\n    playingNowMovies: [],\r\n    playingNowPage: 0,\r\n    upcomingMovies: [],\r\n    upcomingPage: 0,\r\n    topRatedMovies: [],\r\n    topRatedPage: 0,\r\n    totalPages: 0\r\n}\r\n\r\nconst moviePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                popularMovies: action.payload,\r\n                loading: false,\r\n                popularPage: state.popularPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_ERROR: \r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularMovies: [...state.popularMovies, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: action.payload,\r\n                loading: false,\r\n                playingNowPage: state.playingNowPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: [...state.playingNowMovies, ...action.payload],\r\n                loadingMore: false,\r\n                playingNowPage: state.playingNowPage + 1\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                upcomingMovies: action.payload,\r\n                loading: false,\r\n                upcomingPage: state.upcomingPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                upcomingMovies: [...state.upcomingMovies, ...action.payload],\r\n                loadingMore: false,\r\n                upcomingPage: state.upcomingPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                topRatedMovies: action.payload,\r\n                loading: false,\r\n                topRatedPage: state.topRatedPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedMovies: [...state.topRatedMovies, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviePageReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    popularTv: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    popularPage: 0,\r\n    error: false,\r\n    airingTodayTv: [],\r\n    airingTodayPage: 0,\r\n    onTheAirTv: [],\r\n    onTheAirPage: 0,\r\n    topRatedTv: [],\r\n    topRatedPage: 0\r\n}\r\n\r\nconst tvPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                popularTv: action.payload,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.POPULAR_TV_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularTv: [...state.popularTv, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                airingTodayTv: action.payload,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                airingTodayTv: [...state.airingTodayTv, ...action.payload],\r\n                loadingMore: false,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                onTheAirTv: action.payload,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                onTheAirTv: [...state.onTheAirTv, ...action.payload],\r\n                loadingMore: false,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topRatedTv: action.payload,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedTv: [...state.topRatedTv, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }   \r\n}\r\n\r\nexport default tvPageReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    person: [],\r\n    loading: true,\r\n    page: 1,\r\n    error: false,\r\n    totalPages: 0\r\n}\r\n\r\nconst popularPersonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    \r\n        case actionTypes.POPULAR_PERSON_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_PERSON_LOADED: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                totalPages: action.payload.totalPages,\r\n                page: action.payload.page\r\n            }\r\n        case actionTypes.POPULAR_PERSON_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default popularPersonReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    movieDetails: [],\r\n    loading: true,\r\n    error: false,\r\n    casts: null,\r\n    loadingCast: true,\r\n    keywords: null,\r\n    loadingKeywords: true,\r\n    modalWindow: false,\r\n    video: null,\r\n    socialLink: {},\r\n    collection: {},\r\n    recommendations: [],\r\n    loadingRating: true,\r\n    rating: []\r\n}\r\n\r\nconst movieDetailsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.MOVIE_DETAILS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movieDetails: action.payload\r\n            }\r\n        case actionTypes.CAST_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingCast: true\r\n            }\r\n        case actionTypes.CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                casts: action.payload,\r\n                loadingCast: false\r\n            }\r\n        case actionTypes.KEYWORDS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: true\r\n            }\r\n        case actionTypes.KEYWORDS_LOADED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: false,\r\n                keywords: action.payload\r\n            }\r\n        case actionTypes.MODAL_WINDOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                modalWindow: !state.modalWindow\r\n            }\r\n        case actionTypes.VIDEO_LOADED:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n        case actionTypes.SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.RECOMMENDATIONS_LOADED:\r\n            return {\r\n                ...state,\r\n                recommendations: action.payload\r\n            }\r\n        case actionTypes.RATING_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingRating: true\r\n            }\r\n        case actionTypes.RATING_LOADED:\r\n            return {\r\n                ...state,\r\n                rating: action.payload,\r\n                loadingRating: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default movieDetailsReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    inTrend: [],\r\n    loading: true,\r\n    error: false,\r\n}\r\n\r\nconst homePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.IN_TREND_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.IN_TREND_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                inTrend: action.payload\r\n            }\r\n        case actionTypes.IN_TREND_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default homePageReducer;","import { combineReducers } from 'redux'\r\nimport moviePageReducer from './reducers/moviePageReducers';\r\nimport tvPageReducer from './reducers/tvPageReducer';\r\nimport popularPersonReducer from './reducers/popularPersonReducer';\r\nimport movieDetailsReducer from './reducers/movieDetailsReducer';\r\nimport homePageReducer from './reducers/homePageReducer';\r\n\r\nexport default combineReducers({\r\n    moviePageReducer,\r\n    tvPageReducer,\r\n    popularPersonReducer,\r\n    movieDetailsReducer,\r\n    homePageReducer\r\n})","import {createStore} from 'redux';\r\nimport combineReducers from './reducers/combineReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(combineReducers, composeWithDevTools());\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {popularMoviesError} from '../../actions/actions';\r\nimport {connect} from 'react-redux';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\n\r\nclass ErrorBoundry extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n      }\r\n    \r\n    //   static getDerivedStateFromError(error) {\r\n    //     // Update state so the next render will show the fallback UI.\r\n    //     return { hasError: true };\r\n    //   }\r\n    \r\n      componentDidCatch() {\r\n        // You can also log the error to an error reporting service\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n          // You can render any custom fallback UI\r\n          return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children; \r\n      }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundry);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MoviesServices from './services/services';\nimport {Provider} from 'react-redux';\nimport MoviesServicesContext from './components/moviesContext/moviesContext';\nimport store from './store';\nimport ErrorBoundry from './components/errorComponent/errorComponent';\n\nconst moviesServices = new MoviesServices();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<MoviesServicesContext.Provider value={moviesServices}>\n\t\t\t\t\t<App/>\n\t\t\t\t</MoviesServicesContext.Provider>\n\t\t\t</ErrorBoundry>\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}