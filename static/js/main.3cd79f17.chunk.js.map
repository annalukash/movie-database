{"version":3,"sources":["components/shared/header/header.js","components/shared/spinner/spinner.js","components/shared/rate.js","components/shared/spinner/loadMoreSpinner.js","components/shared/useWindowSize/useWindowSize.js","components/moviesPage/components/movieList.js","components/moviesContext/moviesContext.js","components/hoc/withMoviesService.js","actions/actionTypes.js","actions/actions.js","components/moviesPage/popularPage.js","components/moviesPage/playingNowPage.js","components/moviesPage/topRatedPage.js","components/moviesPage/upcomingPage.js","components/moviesPage/components/movieDetailsPage/components/casts.js","components/shared/youtubeVideo/youtubeVideo.js","components/moviesPage/components/movieDetailsPage/components/modalWindow.js","components/moviesPage/components/movieDetailsPage/components/details.js","components/moviesPage/components/movieDetailsPage/components/originalDetails.js","components/moviesPage/components/movieDetailsPage/components/keywords.js","components/moviesPage/components/movieDetailsPage/components/collection.js","components/moviesPage/components/movieDetailsPage/components/recommendations.js","components/moviesPage/components/movieDetailsPage/movieDetails.js","components/shared/scrollToTop/scrollToTop.js","services/services.js","components/moviesByKeywordsPage/components/movieListByKeywords.js","components/moviesByKeywordsPage/moviesByKeyword.js","components/fullCastPage/components/fullCastList.js","components/fullCastPage/castsPage.js","components/personDetailsPage/components/personDetailsCasts.js","components/personDetailsPage/components/personDetailsCrew.js","components/personDetailsPage/components/crewByDepartments.js","components/personDetailsPage/components/personDetails.js","components/personDetailsPage/personBiography.js","components/TVPages/tvPopularPage.js","components/TVPages/airingTodayPage.js","components/TVPages/tvTopRatedPage.js","components/TVPages/onTheAirPage.js","components/popularPersonPage/components/personList.js","components/popularPersonPage/popularPersonPage.js","components/collectionPage/components/collectionCast.js","components/collectionPage/components/collectionDetails.js","components/collectionPage/collectionPage.js","components/shared/toggler/toggler.js","components/homePage/components/inTrend.js","components/homePage/homePage.js","components/shared/header/headerMob.js","components/app/app.js","reducers/reducers/moviePageReducers.js","reducers/reducers/tvPageReducer.js","reducers/reducers/popularPersonReducer.js","reducers/reducers/movieDetailsReducer.js","reducers/reducers/homePageReducer.js","reducers/combineReducers.js","store.js","components/errorComponent/errorComponent.js","index.js"],"names":["NavBarWrapper","styled","div","LogoWrapper","LinkWrapper","NavCollapseWrapper","Header","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Spinner","RateWrapper","props","small","Rate","vote","value","background","backgroundPadding","text","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","LoadMoreSpinner","useWindowSize","useState","width","setWindowSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","ContainerWrapper","size","PosterWrapper","MovieDetailsWrapper","TitleWrapper","ReleaseWrapper","Poster","img","LoadMoreButton","button","MovieList","movies","loading","loadingMore","url","getMovies","history","movieItems","map","item","index","poster_path","release_date","vote_average","name","first_air_date","src","process","Col","key","onClick","push","alt","length","moment","format","Container","Row","loadSpinner","showButton","MoviesServicesContext","React","createContext","WithMoviesService","Wrapped","Consumer","MoviesService","POPULAR_MOVIES_REQUESTED","POPULAR_MOVIES_LOADED","POPULAR_MOVIES_ERROR","POPULAR_MOVIES_MORE_REQUESTED","POPULAR_MOVIES_MORE_LOADED","POPULAR_MOVIES_MORE_ERROR","PLAYING_NOW_MOVIES_REQUESTED","PLAYING_NOW_MOVIES_LOADED","PLAYING_NOW_MOVIES_MORE_REQUESTED","PLAYING_NOW_MOVIES_MORE_LOADED","UPCOMING_MOVIES_REQUESTED","UPCOMING_MOVIES_LOADED","UPCOMING_MOVIES_MORE_REQUESTED","UPCOMING_MOVIES_MORE_LOADED","TOP_RATED_MOVIES_REQUESTED","TOP_RATED_MOVIES_LOADED","TOP_RATED_MOVIES_MORE_REQUESTED","TOP_RATED_MOVIES_MORE_LOADED","POPULAR_TV_REQUESTED","POPULAR_TV_LOADED","POPULAR_TV_ERROR","POPULAR_TV_MORE_REQUESTED","POPULAR_TV_MORE_LOADED","AIRING_TODAY_TV_REQUESTED","AIRING_TODAY_TV_LOADED","AIRING_TODAY_TV_MORE_REQUESTED","AIRING_TODAY_TV_MORE_LOADED","ON_THE_AIR_TV_REQUESTED","ON_THE_AIR_TV_LOADED","ON_THE_AIR_TV_MORE_REQUESTED","ON_THE_AIR_TV_MORE_LOADED","TOP_RATED_TV_REQUESTED","TOP_RATED_TV_LOADED","TOP_RATED_TV_MORE_REQUESTED","TOP_RATED_TV_MORE_LOADED","POPULAR_PERSON_REQUESTED","POPULAR_PERSON_LOADED","POPULAR_PERSON_ERROR","MOVIE_DETAILS_REQUESTED","MOVIE_DETAILS_LOADED","MOVIE_DETAILS_ERROR","CAST_REQUESTED","CAST_LOADED","KEYWORDS_REQUESTED","KEYWORDS_LOADED","MODAL_WINDOW_TOGGLE","VIDEO_LOADED","SOCIAL_LINK_LOADED","COLLECTION_LOADED","RECOMMENDATIONS_LOADED","IN_TREND_REQUESTED","IN_TREND_LOADED","IN_TREND_ERROR","popularMoviesError","type","actionTypes","popularTvError","movieDetailsRequested","movieDetailsLoaded","payload","movieDetailsError","castRequested","castLoaded","PopularPage","loadMovies","success","page","getPopular","then","res","results","catch","error","loadMoreMovies","popularMoviesMoreLoaded","popularMoviesMoreRequested","document","this","popularMoviesRequested","popularMoviesLoaded","location","pathname","Component","mapDispatchToProps","connect","state","moviePageReducer","popularMovies","popularPage","PlayingNowPage","getNowPlaying","playingNowMoviesMoreLoaded","playingNowMoviesMoreRequested","playingNowMoviesRequested","playingNowMoviesLoaded","playingNowMovies","playingNowPage","TopRatedPage","getTopRated","topRatedMoviesMoreRequested","topRatedMoviesMoreLoaded","topRatedMoviesRequested","topRatedMoviesLoaded","topRatedMovies","topRatedPage","UpcomingPage","getUpcoming","upcomingMoviesMoreLoaded","upcomingMoviesMoreRequested","upcomingMoviesRequested","upcomingMoviesLoaded","upcomingMovies","upcomingPage","CarouselWrapper","CastTitle","CastItemWrapper","CastImg","CastName","CastCharacter","PrevButton","NextButton","FullCastWrapper","Cast","carousel","casts","onGoPersonBio","castItem","cast","sort","a","b","order","filter","profile_path","character","renderArrow","isEdge","style","display","itemsToScroll","itemsToShow","focusOnSelect","ref","renderPagination","pages","activePage","slidePrev","slideNext","includes","Trailer","resultItem","video","height","frameBorder","allowFullScreen","controls","Backdrop","TrailerBodyWrapper","TrailerTitleWraper","TrailerCloseButton","ModalWindow","onCloseModal","ImgWrapper","Title","Year","span","DetailsList","IconWrapper","Vote","ActivityList","ul","TrailerWrapper","TrailerTitle","Overview","TagLine","CreatorNameWrapper","TvCreator","creator","Details","details","movieId","onOpenModal","modalWindow","genres","runtime","tagline","overview","episode_run_time","created_by","genreToString","genre","join","duration","replace","modal","showTrailer","releaseYear","releaseDate","LinkIconWrapper","Link","movie","SocialLinkWrrapper","facebook","twitter","instagram","TvNetwork","networks","networkItem","find","network","logo","logo_path","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","OriginalDetails","socialLink","original_title","status","budget","revenue","original_language","original_name","homepage","facebook_id","instagram_id","twitter_id","nf","Intl","NumberFormat","movieBudget","movieRevenue","tvNet","href","target","rel","homePage","overlayFacebook","overlayTwitter","overlayInstagram","overlayHomePage","statusMovie","KeywordsWrapper","KeywordItemWrapper","Keywords","keyword","useHistory","keywordsItem","keywordItem","CollectionWrapper","CollectionContent","bg","CollectionName","CollectionDescription","CollectionButton","Collection","collection","belongs_to_collection","backdrop_path","parts","path","hasOwnProperty","part","RecommendationCardWrapper","RecommendationCardImgWrapper","RecommendationCardRelease","RecommendationCardImg","RecommendationCardTitleWrapper","RecommendationCardTitle","RecommendationCardRate","SectionTitle","Recommendation","recommendations","getDetails","getCast","getKeywords","getVideos","getSocailLink","getRecommendations","recommendationItems","getTVDetails","getTVCasts","getTVKeywords","getTVVideos","getTVExternalIds","getTVRecommendations","getMovieDetails","getMovieExternalIds","getMovieRecommendations","handleRouting","BackgroundWrapper","backdrop","MovieDetails","request","response","getCollectionDetails","keywordsLoaded","keywords","videoLoaded","socialLinkLoaded","recommendationsLoaded","collectionLoaded","getCollection","showCollection","isBelongToCollection","showRecommendations","isRecommendation","keywordId","loadingCast","loadingKeywords","modalWindowToggle","keywordsRequested","movieDetailsReducer","movieDetails","ScrollToTop","prevProps","scrollTo","children","withRouter","MoviesServices","getResource","fetch","_baseApi","_apiKey","_apiLanguage","json","status_code","getMovieByKeyword","getKeywordName","getPersonBiography","personId","biography","combinedMoviesTv","tvId","getTVPopular","getTVAiringToday","getTVTopRated","getTVOnTheAir","getPopularPerson","collectionId","getGenreList","getPersonExternalIds","getInTrend","time","MovieCardWrapper","MovieCardImg","MovieCardContent","MovieCardTitle","MovieCardReleaseDate","MovieCardDescription","HeaderWrapper","KeywordName","MovieQuantity","MovieListByKeywords","totalResults","keywordName","moviesItem","film","MovieListWrapper","ButtonWrapper","MoviesByKeyword","onLoadingMovies","setState","totalPages","onToogleLoading","moviesServices","total_results","total_pages","onLoadingKeywordName","CastNumber","CastItemImg","CastNameWrapper","CastContent","DepartmentTitle","Actors","Crew","crew","CrewDepartment","department","job","MovieName","MovieReleaseYear","MoviePosterImg","MovieContent","ButtonBack","FullCast","onGoBack","goBack","spinnerActors","spinnerCrew","MovieListItemWrapper","hasBorder","ReleaseDate","MovieTitle","LikeCharacter","Character","MoviePreviewButton","CircleHover","show","PopoverImgWrapper","PopoverPoster","PopoverContentWrapper","PopoverTitleWrapper","PopoverTitle","PopoverDescription","PopoverRate","DepartmentListTitle","MovieListContent","FilterWrapper","ClearButton","HistoryItem","date","useRef","setShow","setTarget","handleClick","event","rate","toFixed","tvEpisodes","episode_count","container","current","rootClose","onHide","media_type","textEllipsis","yearFormatter","PersonDetailsCasts","setCastItem","filterSelected","setFilterSelected","noDateCasts","sortedCast","previous","Date","allCasts","filteredByMovieType","filteredByTVType","movieQuantity","tvQuantity","arr","next","fullDateToYear","data","onSelect","content","clearButton","DropdownButton","Dropdown","Item","PersonDetailsCrew","noDateCrew","sortedCrew","Department","CrewByDepartments","filteredCrew","production","writing","art","camera","makeUp","crews","directing","editing","lighting","sound","visualEffects","DescriptionWrapper","BioWrapper","BioContent","mainHeight","childRef","PersonalInfo","PersonalInfoItemTitle","PersonalInfoItemSubtitle","AlsoKnowWrapper","ReadMoreButton","FamousCast","PersonDetails","person","isOpen","setOpen","elementHeight","setElementHeight","classNames","element","clientHeight","getElementHeight","gender","alsoKnow","also_known_as","birthday","ageAlive","deathday","diff","ageDead","dateOfDeath","acting","filmCrew","famousCast","known_for_department","place_of_birth","PersonBiography","onLoading","getBiography","getPersonSocailLink","onLoadingLink","spinnerPerson","TVPopularPage","loadTV","loadMoreTv","popularTvMoreRequested","popularTvMoreLoaded","tv","popularTvRequested","popularTvLoaded","tvPageReducer","popularTv","AiringTodayPage","loadMoreTV","airingTodayTvMoreRequested","airingTodayTvMoreLoaded","airingTodayTvRequested","airingTodayTvLoaded","airingTodayTv","airingTodayPage","TVTopRatedPage","topRatedTvTvMoreRequested","topRatedTvTvMoreLoaded","topRatedTvRequested","topRatedTvTvLoaded","topRatedTv","OnTheAirPage","onTheAirTvMoreRequested","onTheAirTvMoreLoaded","onTheAirTvRequested","onTheAirTvLoaded","onTheAirTv","onTheAirPage","PersonItemWrapper","PersonImg","PersonNameWrapper","PersonName","PersonCast","PersonList","getPerson","personItem","known_for","castToString","Pagination","count","boundaryCount","onChange","PersonPage","onServiceRequest","popularPersonError","popularPersonLoaded","search","loadPerson","loadMorePerson","popularPersonRequested","popularPersonReducer","large","CastImgWrapper","Section","CollectionCast","onGoToPersonDetails","onGoToMovieDetails","sm","crewItem","partItem","DetailsTitleWrapper","DetailsContentWrapper","CollectionDetails","averageVote","reduce","sum","movieOverview","genresList","Object","keys","forEach","genre_ids","uniquesToString","array","indexOf","CollectionPage","loadCollection","movieIds","getGenresName","onLoadingGenres","genresObj","ids","total","onLoadingDetails","totalRevenue","onLoadingCast","template","TogglerWrapper","ToggleItem","isActive","ToggleActive","Toggler","names","loadTrend","types","buttonsArray","buttons","setButtons","setWidth","clientWidth","toggleItems","reference","currentTarget","onToggle","SectionTitleWrapper","TrendCardWrapper","TrendCardImg","TrendCardTitleWrapper","TrendCardTitle","TrendCardRelease","InTrend","inTrend","trendItems","HomePageWrapper","HomePageSubTitle","inTrendRequested","inTrendLoaded","inTrendError","homePageReducer","MenuBurger","MenuList","CloseButton","NavList","NavListItem","NavListSubItem","HeaderMobile","setClassNames","toggleMenu","clas","overflow","getElementsByTagName","body","App","updateWindowDimensions","header","exact","from","render","match","params","initialState","action","combineReducers","store","createStore","composeWithDevTools","ErrorBoundry","hasError","ReactDOM","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.3cd79f17.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    padding: 5px 15px; \r\n\r\n    &:hover{\r\n        background-color: rgb(209, 220, 240);\r\n    }\r\n`;\r\n\r\nconst NavCollapseWrapper = styled.div`\r\n    &.dropdown-menu {\r\n        min-width: 11rem;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return(\r\n        <NavBarWrapper> \r\n            <Navbar expand=\"lg\">\r\n                <Navbar.Brand>\r\n                    <LogoWrapper>\r\n                        <Link to='/movie-database'> Movies DB</Link>   \r\n                    </LogoWrapper>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Фильмы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Сериалы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Люди\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/person/'>Популярные люди</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n            </Navbar> \r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div className=\"loadingio-spinner-pulse-4q9a11w5c1h\">\r\n                <div className=\"ldio-8zfoqlwj9ri\">\r\n                    <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\n\r\n\r\nconst RateWrapper = styled.div`\r\n    width: ${props => props.small ? '44px' : '65px'};\r\n    height: ${props => props.small ? '44px' : '65px'};\r\n    position: ${props => props.small ? 'absolute' : 'static'};\r\n    top: -22px;\r\n    left: 10px;\r\n\r\n    .CircularProgressbar-text {\r\n        dominant-baseline: middle;\r\n        text-anchor: middle;\r\n        font-size: 28px;\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Rate = ({vote, small}) => {\r\n\r\n    return (\r\n        <RateWrapper small={small}>\r\n            <CircularProgressbar\r\n                value={vote * 10}\r\n                background = {true}\r\n                backgroundPadding = {5}\r\n                text={`${vote === 0 ? 'NR' : (vote * 10 + '%')}`}\r\n                styles={buildStyles({\r\n                    rotation: 0,\r\n                    strokeLinecap: 'butt',\r\n                    pathTransitionDuration: 0.5,\r\n                    pathColor: vote > 7 ? '#21d07a' : vote < 3 ? '#db2360' : `#d2d531`,\r\n                    textColor: '#fff',\r\n                    trailColor: '#423d0f',\r\n                    backgroundColor: '#000', \r\n                })}\r\n            />\r\n        </RateWrapper>\r\n    )\r\n}\r\n\r\nexport default Rate;","import React from 'react';\r\nimport './loadMoreSpinner.css';\r\n\r\nconst LoadMoreSpinner = () => {\r\n    return(\r\n        <div className=\"loadingio-spinner-eclipse-31fnf915wjs\">\r\n            <div className=\"ldio-0fm56yckxb98\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoadMoreSpinner;\r\n","import {useEffect, useState} from 'react';\r\n\r\nconst useWindowSize = () => {\r\n    const [width, setWindowSize] = useState(null);\r\n  \r\n    useEffect(() => {\r\n        const handleResize = () => setWindowSize(window.innerWidth);\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        \r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n  \r\n    return width;\r\n}\r\n\r\nexport default useWindowSize;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport Rate from '../../shared/rate';\r\nimport moment from 'moment';\r\nimport LoadMoreSpinner from '../../shared/spinner/loadMoreSpinner';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\n\r\nconst ContainerWrapper = styled.div`\r\n    .col {\r\n        max-height: ${props => props.size < 415 ? '275px' : '393px'};\r\n    }\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    border: 1px solid rgb(227, 227, 227);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 5px 8px 0px rgba(0, 0, 0, 0.1);\r\n    max-width: ${props => props.size < 415 ? '150px' : '206px'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieDetailsWrapper = styled.div`\r\n    background-color:rgb(255, 255, 255);\r\n    border-radius: 15px;\r\n    position: relative;\r\n    padding: ${props => props.size < 415 ? '22px 10px 5px' : '22px 10px 15px'};\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n    width: 100%;\r\n\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-family: 'Source Sans Pro';\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ReleaseWrapper = styled(TitleWrapper)`\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    width: 100%;\r\n    border-top-right-radius: 15px;\r\n    border-top-left-radius: 15px;\r\n    height: ${props => props.size < 415 ? '70%' : '80%' };\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 100%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    margin-bottom: 20px;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst MovieList = ({movies, loading, loadingMore, url, getMovies, history}) => {\r\n    const size = useWindowSize();\r\n    const movieItems = movies.map((item, index) => {\r\n        const {title, poster_path, release_date, vote_average, id, name, first_air_date} = item;\r\n        const src = poster_path ? ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return(\r\n            <Col key={index} className=\"col-xl-3 col-6 col-sm-6 d-flex justify-content-center mb-4 px-lg-2 px-0\">\r\n                <PosterWrapper\r\n                    size={size}\r\n                    onClick={() => {\r\n                        history.push(`${url}${id}`)\r\n                    }}\r\n                >\r\n                    <Poster src={src} alt={title || name} size={size}/> \r\n                    <MovieDetailsWrapper size={size}>\r\n                        <TitleWrapper>\r\n                            <EllipsisText text={title || name} length={size < 415 ? 15 : 20}/>    \r\n                        </TitleWrapper>\r\n                        <ReleaseWrapper>\r\n                            {moment(release_date || first_air_date).format('DD.MM.YYYY')}\r\n                        </ReleaseWrapper>\r\n                        <Rate \r\n                            vote={vote_average}\r\n                            small\r\n                        />  \r\n                    </MovieDetailsWrapper>                   \r\n                </PosterWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    const showButton = () => {\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n    \r\n        return (\r\n            <LoadMoreButton\r\n                onClick={() => getMovies()}\r\n            >\r\n                {loadSpinner}\r\n            </LoadMoreButton>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return(\r\n            <ContainerWrapper size={size}>\r\n                <Container className=\"mt-lg-5 mt-3 px-0\">\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        {movieItems}\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        <Col>\r\n                            {showButton()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ContainerWrapper>\r\n        )    \r\n    }  \r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst MoviesServicesContext = React.createContext();\r\n\r\nexport default MoviesServicesContext;","import React from 'react';\r\nimport MoviesServicesContext from '../moviesContext/moviesContext';\r\n\r\nconst WithMoviesService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <MoviesServicesContext.Consumer>\r\n                {\r\n                    (MoviesService) => {\r\n                        return <Wrapped {...props} MoviesService={MoviesService}/>\r\n                    }\r\n                }\r\n            </MoviesServicesContext.Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WithMoviesService;","export const POPULAR_MOVIES_REQUESTED = 'POPULAR_MOVIES_REQUESTED';\r\nexport const POPULAR_MOVIES_LOADED = 'POPULAR_MOVIES_LOADED';\r\nexport const POPULAR_MOVIES_ERROR = 'POPULAR_MOVIES_ERROR';\r\nexport const POPULAR_MOVIES_MORE_REQUESTED = 'POPULAR_MOVIES_MORE_REQUESTED';\r\nexport const POPULAR_MOVIES_MORE_LOADED = 'POPULAR_MOVIES_MORE_LOADED';\r\nexport const POPULAR_MOVIES_MORE_ERROR = 'POPULAR_MOVIES_MORE_ERROR';\r\nexport const PLAYING_NOW_MOVIES_REQUESTED = 'PLAYING_NOW_MOVIES_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_LOADED = 'PLAYING_NOW_MOVIES_LOADED';\r\nexport const PLAYING_NOW_MOVIES_MORE_REQUESTED = 'PLAYING_NOW_MOVIES_MORE_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_MORE_LOADED = 'PLAYING_NOW_MOVIES_MORE_LOADED';\r\nexport const UPCOMING_MOVIES_REQUESTED = 'UPCOMING_MOVIES_REQUESTED';\r\nexport const UPCOMING_MOVIES_LOADED = 'UPCOMING_MOVIES_LOADED';\r\nexport const UPCOMING_MOVIES_MORE_REQUESTED = 'UPCOMING_MOVIES_MORE_REQUESTED';\r\nexport const UPCOMING_MOVIES_MORE_LOADED = 'UPCOMING_MOVIES_MORE_LOADED';\r\nexport const TOP_RATED_MOVIES_REQUESTED = 'TOP_RATED_MOVIES_REQUESTED';\r\nexport const TOP_RATED_MOVIES_LOADED = 'TOP_RATED_MOVIES_LOADED';\r\nexport const TOP_RATED_MOVIES_MORE_REQUESTED = 'TOP_RATED_MOVIES_MORE_REQUESTED';\r\nexport const TOP_RATED_MOVIES_MORE_LOADED = 'TOP_RATED_MOVIES_MORE_LOADED';\r\n\r\nexport const POPULAR_TV_REQUESTED = 'POPULAR_TV_REQUESTED';\r\nexport const POPULAR_TV_LOADED = 'POPULAR_TV_LOADED';\r\nexport const POPULAR_TV_ERROR = 'POPULAR_TV_ERROR';\r\nexport const POPULAR_TV_MORE_REQUESTED = 'POPULAR_TV_MORE_REQUESTED';\r\nexport const POPULAR_TV_MORE_LOADED = 'POPULAR_TV_MORE_LOADED';\r\nexport const AIRING_TODAY_TV_REQUESTED = 'AIRING_TODAY_TV_REQUESTED';\r\nexport const AIRING_TODAY_TV_LOADED = 'AIRING_TODAY_TV_LOADED';\r\nexport const AIRING_TODAY_TV_MORE_REQUESTED = 'AIRING_TODAY_TV_MORE_REQUESTED';\r\nexport const AIRING_TODAY_TV_MORE_LOADED = 'AIRING_TODAY_TV_MORE_LOADED';\r\nexport const ON_THE_AIR_TV_REQUESTED = 'ON_THE_AIR_TV_REQUESTED';\r\nexport const ON_THE_AIR_TV_LOADED = 'ON_THE_AIR_TV_LOADED';\r\nexport const ON_THE_AIR_TV_MORE_REQUESTED = 'ON_THE_AIR_TV_MORE_REQUESTED';\r\nexport const ON_THE_AIR_TV_MORE_LOADED = 'ON_THE_AIR_TV_MORE_LOADED';\r\nexport const TOP_RATED_TV_REQUESTED = 'TOP_RATED_TV_REQUESTED';\r\nexport const TOP_RATED_TV_LOADED = 'TOP_RATED_TV_LOADED';\r\nexport const TOP_RATED_TV_MORE_REQUESTED = 'TOP_RATED_TV_MORE_REQUESTED';\r\nexport const TOP_RATED_TV_MORE_LOADED = 'TOP_RATED_TV_MORE_LOADED';\r\n\r\nexport const POPULAR_PERSON_REQUESTED = 'POPULAR_PERSON_REQUESTED';\r\nexport const POPULAR_PERSON_LOADED = 'POPULAR_PERSON_LOADED';\r\nexport const POPULAR_PERSON_ERROR = 'POPULAR_PERSON_ERROR';\r\n\r\nexport const MOVIE_DETAILS_REQUESTED = 'MOVIE_DETAILS_REQUESTED';\r\nexport const MOVIE_DETAILS_LOADED = 'MOVIE_DETAILS_LOADED';\r\nexport const MOVIE_DETAILS_ERROR = 'MOVIE_DETAILS_ERROR';\r\n\r\nexport const CAST_REQUESTED = 'CAST_REQUESTED';\r\nexport const CAST_LOADED = 'CAST_LOADED';\r\n\r\nexport const KEYWORDS_REQUESTED = 'KEYWORDS_REQUESTED';\r\nexport const KEYWORDS_LOADED = 'KEYWORDS_LOADED';\r\n\r\nexport const MODAL_WINDOW_TOGGLE = 'MODAL_WINDOW_TOGGLE';\r\n\r\nexport const VIDEO_LOADED = 'VIDEO_LOADED';\r\n\r\nexport const SOCIAL_LINK_LOADED = 'SOCIAL_LINK_LOADED';\r\n\r\nexport const COLLECTION_LOADED = 'COLLECTION_LOADED';\r\n\r\nexport const RECOMMENDATIONS_LOADED = 'RECOMMENDATIONS_LOADED';\r\n\r\nexport const IN_TREND_REQUESTED = 'IN_TREND_REQUESTED';\r\nexport const IN_TREND_LOADED = 'IN_TREND_LOADED';\r\nexport const IN_TREND_ERROR = 'IN_TREND_ERROR';\r\n\r\n","import * as actionTypes from './actionTypes';\r\n\r\nconst popularMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_ERROR\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_ERROR\r\n    }\r\n}\r\n\r\nconst popularTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularPersonLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_ERROR\r\n    }\r\n}\r\n\r\nconst movieDetailsRequested = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_REQUESTED\r\n    }\r\n}\r\n\r\nconst movieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsError = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_ERROR\r\n    }\r\n}\r\n\r\nconst castRequested = () => {\r\n    return {\r\n        type: actionTypes.CAST_REQUESTED\r\n    }  \r\n}\r\n\r\nconst castLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst keywordsRequested = () => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_REQUESTED\r\n    }\r\n}\r\n\r\nconst keywordsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst modalWindowToggle = () => {\r\n    return {\r\n        type: actionTypes.MODAL_WINDOW_TOGGLE\r\n    }\r\n}\r\n\r\nconst videoLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.VIDEO_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst socialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst collectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst recommendationsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.RECOMMENDATIONS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendRequested = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_REQUESTED\r\n    }\r\n}\r\n\r\nconst inTrendLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.IN_TREND_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendError = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    popularMoviesRequested,\r\n    popularMoviesLoaded,\r\n    popularMoviesError,\r\n    popularMoviesMoreLoaded,\r\n    popularMoviesMoreRequested,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded,\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvError,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError,\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError,\r\n    recommendationsLoaded\r\n}","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularMoviesRequested, popularMoviesLoaded, popularMoviesError, popularMoviesMoreLoaded, popularMoviesMoreRequested} from '../../actions/actions';\r\n\r\nclass PopularPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.popularMoviesRequested();\r\n            this.loadMovies(this.props.popularMoviesLoaded);  \r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {popularMoviesMoreLoaded, popularMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        popularMoviesMoreRequested();\r\n        this.loadMovies(popularMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, history, loadingMore} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularMovies, loading, loadingMore, popularPage}  = state.moviePageReducer;\r\n    return {\r\n        movies: popularMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: popularPage,\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesLoaded,\r\n    popularMoviesRequested,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PopularPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {playingNowMoviesRequested, playingNowMoviesLoaded, popularMoviesError, playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested} from '../../actions/actions';\r\n\r\nclass PlayingNowPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if(!this.props.movies.length) {\r\n            this.props.playingNowMoviesRequested();\r\n            this.loadMovies(this.props.playingNowMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getNowPlaying(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        playingNowMoviesMoreRequested();\r\n        this.loadMovies(playingNowMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {playingNowMovies, loading, loadingMore, playingNowPage}  = state.moviePageReducer;\r\n    return {\r\n       movies: playingNowMovies,\r\n       loading,\r\n       loadingMore,\r\n       page: playingNowPage \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PlayingNowPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedMoviesRequested, topRatedMoviesLoaded, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded, popularMoviesError} from '../../actions/actions';\r\n\r\n\r\nclass TopRatedPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n        \r\n        if (!this.props.movies.length) {\r\n            this.props.topRatedMoviesRequested();\r\n            this.loadMovies(this.props.topRatedMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {page, MoviesService, popularMoviesError} = this.props;\r\n\r\n        MoviesService.getTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError())\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedMoviesMoreRequested();\r\n        this.loadMovies(topRatedMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedMovies, topRatedPage, loading, loadingMore} = state.moviePageReducer;\r\n    return {\r\n        movies: topRatedMovies,\r\n        page: topRatedPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {upcomingMoviesRequested, upcomingMoviesLoaded, upcomingMoviesMoreRequested, upcomingMoviesMoreLoaded, popularMoviesError} from '../../actions/actions';\r\n\r\nclass UpcomingPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.upcomingMoviesRequested();\r\n            this.loadMovies(this.props.upcomingMoviesLoaded);\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getUpcoming(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, upcomingMoviesMoreLoaded, upcomingMoviesMoreRequested} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        upcomingMoviesMoreRequested();\r\n        this.loadMovies(upcomingMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n       \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {upcomingMovies, loading, loadingMore, upcomingPage} = state.moviePageReducer;\r\n    return {\r\n        movies: upcomingMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: upcomingPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(UpcomingPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 285px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 275px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 64.4%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 13px;\r\n    padding: 5px 10px 0;   \r\n`;\r\n\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst FullCastWrapper = styled.div`\r\n    color: #1e2f3c;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n`;\r\n\r\n\r\n\r\nconst Cast = ({casts, id, history}) => {\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n          <span style={{display: 'none'}}></span>\r\n        )\r\n      }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const onGoFullCast = () => {\r\n\r\n        if (history.location.pathname.includes('tv')) {\r\n            history.push(`/tv/${id}/casts`)\r\n        } else {\r\n            history.push(`/movie/${id}/casts`)\r\n        } \r\n        \r\n    }\r\n\r\n    const onGoPersonBio = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.profile_path ? ('https://image.tmdb.org/t/p/w138_and_h175_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name} \r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastItemWrapper>\r\n                \r\n            )\r\n        });\r\n\r\n    let carousel;\r\n    return (\r\n        <>\r\n            <CarouselWrapper>\r\n                <CastTitle>В главных ролях</CastTitle>\r\n                <Carousel renderArrow={myArrow}\r\n                        itemsToScroll={1} \r\n                        itemsToShow={5}\r\n                        focusOnSelect={false}\r\n                        ref={ref => (carousel = ref)}\r\n                        renderPagination={myPagination}\r\n                >\r\n                    {castItem}\r\n                </Carousel>\r\n                <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n                <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n                <FullCastWrapper\r\n                     onClick={() => onGoFullCast()}\r\n                >Полный актёрский и съёмочный состав</FullCastWrapper>\r\n           </CarouselWrapper>\r\n           \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\n\r\nconst Trailer = ({video}) => {\r\n\r\n    const {results} = video;\r\n    const resultItem = results[0];\r\n\r\n    return (\r\n        <iframe\r\n            title='g'\r\n            width=\"1075\"\r\n            height=\"667\"\r\n            src={\"https://www.youtube.com/embed/\" + resultItem.key}\r\n            frameBorder='0' \r\n            allowFullScreen\r\n            controls='2'\r\n        ></iframe>\r\n    )\r\n\r\n}\r\n\r\nexport default Trailer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../shared/youtubeVideo/youtubeVideo';\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: 1075px;\r\n    max-height: 667px;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: 1075px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindow = ({video, onCloseModal}) => {\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper>\r\n                <TrailerTitleWraper>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindow;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from '../../../../shared/rate';\r\nimport ModalWindow from './modalWindow';\r\n\r\nconst ImgWrapper = styled.img`\r\n    max-width: 300px;\r\n    max-height: 450px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 7px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    font-family: 'Source Sans Pro';\r\n`;\r\n\r\nconst Year = styled.span`\r\n    opacity: 0.8;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst DetailsList = styled.div`\r\n    font-size: 16px; \r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n    font-size: 5px;\r\n`;\r\n\r\nconst Vote = styled.span`\r\n    max-width: 150px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ActivityList = styled.ul`\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    li{\r\n        width: 46px;\r\n        height: 46px;\r\n        background-color: rgb(3, 37, 65);\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-left: 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child{\r\n        margin-left: 0;\r\n    }\r\n    \r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n\r\n    &:hover{\r\n        opacity: 0.6\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst TagLine = styled.div`\r\n    font-size: 17.6px;\r\n    opacity: 0.7;\r\n    font-family: Arial;\r\n`;\r\n\r\nconst CreatorNameWrapper = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Details = ({details, movieId, onOpenModal, modalWindow, onCloseModal, video, history}) => {\r\n    const {poster_path, title, release_date, genres, runtime, vote_average, tagline, overview, name, first_air_date, episode_run_time, created_by} = details;\r\n\r\n    const genreItem = genres.map(genre => genre.name);\r\n    const genreToString = genreItem.join(', ');\r\n\r\n    let duration = (runtime || episode_run_time) ? moment.duration(runtime || episode_run_time[0], \"minutes\").format(\"h : m o\").replace(':', 'h').replace('o', 'm') : null;\r\n\r\n    const trailerButton = () => {\r\n        return(\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle\r\n                    onClick = {() => onOpenModal(movieId)}\r\n                >Воспроизвести трейлер</TrailerTitle>\r\n            </TrailerWrapper>\r\n        )   \r\n    }\r\n\r\n    const modal = modalWindow ? <ModalWindow video={video} onCloseModal={onCloseModal}/> : null;\r\n    const showTrailer = video?.results.length === 0 ? null : trailerButton();\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path);\r\n    const creator = history.location.pathname.includes('tv') ? <TvCreator creator={created_by} history={history}/> : null;\r\n    const releaseYear = release_date || first_air_date ? `(${moment(release_date || first_air_date).format('YYYY')})` : null;\r\n    const releaseDate = release_date || first_air_date ? moment(release_date || first_air_date).format('DD/MM/YYYY') : null;\r\n    return(\r\n        <>\r\n            {modal}\r\n            <Col className='col-4'>\r\n                <ImgWrapper src={src} alt={title || name}/>\r\n            </Col>\r\n            <Col className='col-8 text-left px-0'>\r\n            <Title>{title || name} <Year>{releaseYear}</Year>\r\n                </Title>\r\n                <DetailsList>\r\n                    <Row>\r\n                        <Col className=\"col-auto px-0 pl-3\">{releaseDate}</Col>\r\n                        <Col className=\"col-auto d-flex align-items-center\"><IconWrapper><i className=\"fas fa-circle\"></i></IconWrapper></Col>\r\n                        <Col className=\"col-auto px-0\">{genreToString}</Col>\r\n                        <Col className=\"col-auto d-flex align-items-center\"><IconWrapper><i className=\"fas fa-circle\"></i></IconWrapper></Col>\r\n                        <Col className=\"col-auto px-0\">{duration}</Col>\r\n                    </Row>  \r\n                    <Row className=\"font-weight-bold py-3\">\r\n                        <Col className=\"col-auto d-flex\">\r\n                            <Rate vote={vote_average}/>   \r\n                            <Vote>Пользовательский счёт</Vote>\r\n                        </Col>\r\n                        <Col className=\"px-0 my-0 d-flex align-items-center\">\r\n                            <ActivityList>\r\n                                <li><i className=\"fas fa-list-ul\"></i></li>\r\n                                <li><i className=\"fas fa-heart\"></i></li>\r\n                                <li><i className=\"fas fa-bookmark\"></i></li>\r\n                                <li><i className=\"fas fa-star\"></i></li>\r\n                            </ActivityList>\r\n                        </Col>\r\n                        <Col className=\"d-flex align-items-center\">\r\n                            {showTrailer}                   \r\n                        </Col>\r\n                    </Row>  \r\n                    <Row>\r\n                        <Col className='font-italic'>\r\n                            <TagLine>{tagline}</TagLine>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className='flex-column py-2'>\r\n                        <Col>\r\n                            <Overview>\r\n                                Обзор\r\n                            </Overview>\r\n                        </Col>\r\n                        <Col>{overview}</Col>\r\n                    </Row>\r\n                    {creator}\r\n                </DetailsList>  \r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nconst TvCreator = ({creator, history}) => {\r\n    if (creator?.length) {\r\n        return (\r\n            <Row className='flex-column py-2'>\r\n                <Col>\r\n                    <CreatorNameWrapper\r\n                        onClick={() => history.push(`/person/${creator[0].id}`)}\r\n                    >\r\n                        {creator[0].name}\r\n                    </CreatorNameWrapper>\r\n                    <div>Создатель</div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Details;\r\nexport {ImgWrapper, Title, DetailsList, Vote, Overview};","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: inline-block;\r\n    font-size: 25px;  \r\n    cursor: pointer;\r\n    margin-right: 15px;\r\n    & .popover-body {\r\n        background-color: red\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: #000;\r\n    & :hover :active :link :visited {\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    margin: ${props => props.movie ? '0 15px 20px 0' : '30px 15px 0 0'};\r\n    display: flex;\r\n`;\r\n\r\nconst SocialLinkWrrapper = styled.div`\r\n    display: ${props => !props.facebook && !props.twitter && !props.instagram ? 'none' : 'block'};\r\n    border-right: 1px solid #d7d7d7;\r\n    margin-right: 15px;\r\n`;\r\n\r\n\r\nconst OriginalDetails = ({details, history, socialLink}) => {\r\n    const {original_title, status, budget, revenue, original_language, original_name, networks, homepage} = details;\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieBudget= budget ? nf.format(budget).replace(/\\s/g, ',') : '0';\r\n    const movieRevenue = revenue ? nf.format(revenue).replace(/\\s/g, ',') : '0';\r\n\r\n    const tvNet = history.location.pathname.includes('tv') ? <TvNetwork networks={networks}/> : null;\r\n\r\n    const statusMovie = () => {\r\n        switch (status) {\r\n            case 'Released': \r\n                return 'Выпущено';\r\n            case 'Returning Series':\r\n                return 'Продолжается';\r\n            default:\r\n                return (status);\r\n        }\r\n    }\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const homePage = (\r\n        <Link href={homepage} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-link\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n    const overlayHomePage = homepage ? <Overlay logo={homePage} page={'Домашнюю страницу'}/> : null;\r\n\r\n    return(\r\n        <Col>\r\n            <Row>\r\n                <Col className='d-flex align-items-center'>\r\n                    <LinkWrapper movie>\r\n                        <SocialLinkWrrapper facebook={facebook_id} twitter={twitter_id} instagram={instagram_id}>\r\n                            {overlayFacebook}\r\n                            {overlayTwitter}\r\n                            {overlayInstagram}\r\n                        </SocialLinkWrrapper>\r\n                        {overlayHomePage}\r\n                    </LinkWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Исходное название</Col>\r\n                <Col>{original_title || original_name}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Статус</Col>\r\n                <Col>{statusMovie()}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Исходный язык</Col>\r\n                <Col>{original_language === 'en' ?  'английский' : original_language}</Col>\r\n            </Row>\r\n            {tvNet}\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Бюджет</Col>\r\n                <Col>${movieBudget}.00</Col>\r\n            </Row>\r\n            <Row className=\"flex-column\">\r\n                <Col className=\"font-weight-bold\">Сборы</Col>\r\n                <Col>${movieRevenue}.00</Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst TvNetwork = ({networks}) => {\r\n    const networkItem = networks?.find((network, index) => index === 0);\r\n    const logo = !networkItem?.logo_path ? networkItem?.name : <img src={`https://image.tmdb.org/t/p/h30${networkItem?.logo_path}`} alt={networkItem?.name}/>;\r\n\r\n    return (\r\n        <Row className=\"flex-column\">\r\n            <Col className=\"font-weight-bold\">Телесеть</Col>\r\n            <Col>  \r\n                {logo}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst Overlay = ({logo, page}) => {\r\n    const popover = (\r\n            <Popover id=\"popover-basic\">              \r\n                <Popover.Content>\r\n                    Посетить {page}\r\n                </Popover.Content>\r\n            </Popover>\r\n    );\r\n    \r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={popover}>\r\n            <LinkIconWrapper>{logo}</LinkIconWrapper>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default OriginalDetails;\r\nexport {Overlay, LinkIconWrapper, Link};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst KeywordsWrapper = styled.div`\r\n    margin: 30px 0;\r\n    max-width: 260px;\r\n    width: 100%;\r\n`;\r\n\r\nconst KeywordItemWrapper = styled.div`\r\n    background-color: rgba(0,0,0,0.1);\r\n    border: 1px solid #d7d7d7;\r\n    color: #000;\r\n    padding: 4px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    font-size: 14.4px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Keywords = ({keyword, url}) => {\r\n\r\n    const history = useHistory();\r\n  \r\n        const keywordsItem = keyword.map((keyword, index) => {\r\n            return(\r\n                <KeywordItemWrapper \r\n                    key={index} \r\n                    onClick={() => history.push(`/${url}/${keyword.id}`)}\r\n                >\r\n                    {keyword.name}\r\n                </KeywordItemWrapper>\r\n            )\r\n        })\r\n\r\n    const keywordItem = keywordsItem.length === 0 ? 'Ключевые слова не добавлены.' : keywordsItem;\r\n\r\n    return (\r\n        <KeywordsWrapper>\r\n            <Col className=\"font-weight-bold\">Ключевые слова</Col>\r\n            <Col>\r\n                {keywordItem}\r\n            </Col>\r\n        </KeywordsWrapper>\r\n    )\r\n}\r\n\r\nexport default Keywords;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CollectionWrapper = styled.div`\r\n    padding: 30px 0;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionContent = styled.div`\r\n    border-radius: 8px;\r\n    background-image: linear-gradient(315deg, rgba(42, 42, 114, 0.5) 0%, rgba(0, 159, 253, 0.5) 74%), ${props => `url(${props.bg})`};\r\n    background-repeat: no-repeat;\r\n    max-width: 730px;\r\n    width: 100%;\r\n    height: 320px;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CollectionName = styled.div`\r\n    color: #fff;\r\n    font-size: 1.9em;\r\n    font-weight: 600;\r\n`\r\nconst CollectionDescription = styled.div`\r\n    font-size: 1.1em;\r\n    margin-bottom: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst CollectionButton = styled.button`\r\n    font-size: 1.1em;\r\n    color: #fff;\r\n    background-color: rgb(53, 40, 30);\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 700;\r\n    padding: 6px 20px;\r\n    max-width: 260px;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst Collection = ({details, history, collection}) => {\r\n\r\n    const {belongs_to_collection} = details;\r\n    const {name, backdrop_path, id} = belongs_to_collection;\r\n    const {parts} = collection;\r\n\r\n    const getTitle = () => {\r\n        if (collection.hasOwnProperty('parts')) {\r\n            const moviesTitle = parts.map(part => part.title);\r\n            return moviesTitle.join(', ');\r\n        } \r\n        return null\r\n    }\r\n    \r\n    const path = `https://image.tmdb.org/t/p/w1440_and_h320_multi_faces${backdrop_path}`\r\n    return (\r\n        <CollectionWrapper>\r\n            <CollectionContent bg={path}>\r\n            <CollectionName>Входит в {name}</CollectionName>\r\n            <CollectionDescription>Коллекция включает {getTitle()}</CollectionDescription>\r\n            <CollectionButton\r\n                onClick={() => history.push(`/collection/${id}`)}\r\n            >Смотреть коллекцию</CollectionButton>\r\n            </CollectionContent>\r\n        </CollectionWrapper>\r\n    )\r\n}\r\n\r\nexport default Collection;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\n\r\nconst RecommendationCardWrapper = styled.div`\r\n    max-width: 230px;\r\n`;\r\n\r\nconst RecommendationCardImgWrapper = styled.div`\r\n    cursor: pointer;\r\n    position: relative;\r\n    max-width: 230px;\r\n    font-size: 16px;\r\n\r\n    &:hover .visible {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst RecommendationCardRelease = styled.div`\r\n    background-color: rgba(255,255,255,0.9);\r\n    position: absolute;\r\n    bottom: 0px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: opacity 200ms;\r\n`;\r\n\r\nconst RecommendationCardImg = styled.img`\r\n    border-radius: 5px;\r\n    max-width: 230px;\r\n    max-height: 130px;\r\n`;\r\n\r\nconst RecommendationCardTitleWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;  \r\n`;\r\n\r\nconst RecommendationCardTitle = styled.div``;\r\n\r\nconst RecommendationCardRate = styled.div``;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    border-bottom: 1px solid rgb(215,215,215);\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 210px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 205px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px;   \r\n    margin-bottom: 20px;\r\n`;\r\n\r\n\r\nconst Recommendation = ({recommendations, history, MoviesService, castRequested, movieDetailsRequested, getDetails, getCast, getKeywords, getVideos, getSocailLink, getRecommendations}) => {\r\n    const handleRouting = (id) => {\r\n        if (history.location.pathname.includes('tv')) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getTVDetails); \r\n            getCast(id, MoviesService.getTVCasts);\r\n            getKeywords(id, MoviesService.getTVKeywords);\r\n            getVideos(id, MoviesService.getTVVideos);\r\n            getSocailLink(id, MoviesService.getTVExternalIds);\r\n            getRecommendations(id, MoviesService.getTVRecommendations);\r\n            history.push(`/tv/${id}`)\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getMovieDetails);\r\n            getCast(id, MoviesService.getCast);\r\n            getKeywords(id, MoviesService.getKeywords);\r\n            getVideos(id, MoviesService.getVideos);\r\n            getSocailLink(id, MoviesService.getMovieExternalIds);\r\n            getRecommendations(id, MoviesService.getMovieRecommendations);\r\n            history.push(`/movie/${id}`)\r\n        }\r\n    }\r\n\r\n    const recommendationItems = recommendations.filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const {id, vote_average, title, release_date, name, first_air_date, backdrop_path} = item;\r\n            const src = backdrop_path ? ('//image.tmdb.org/t/p/w250_and_h141_face' + backdrop_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n            const releaseDate = moment(release_date || first_air_date).format('DD/MM/YYYY');\r\n            return (\r\n                <RecommendationCardWrapper key={index}>\r\n                    <RecommendationCardImgWrapper>\r\n                        <RecommendationCardImg \r\n                            src={src} \r\n                            alt={title || name}\r\n                            onClick={() => handleRouting(id)}\r\n                        />\r\n                        <RecommendationCardRelease className={'visible'}>\r\n                            <i className=\"far fa-calendar-alt\"></i> {releaseDate}\r\n                        </RecommendationCardRelease>\r\n                    </RecommendationCardImgWrapper>\r\n                    <RecommendationCardTitleWrapper>\r\n                        <RecommendationCardTitle>\r\n                            <EllipsisText text={title || name} length={24}/>\r\n                        </RecommendationCardTitle>\r\n                        <RecommendationCardRate>{vote_average * 10}%</RecommendationCardRate>\r\n                    </RecommendationCardTitleWrapper>\r\n                </RecommendationCardWrapper>\r\n            )\r\n        })\r\n    \r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitle>Рекомендации </SectionTitle>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={2} \r\n                    itemsToShow={3}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {recommendationItems}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n        </CarouselWrapper>\r\n    )\r\n}\r\n\r\nexport default Recommendation;","import React, {Component} from 'react';\r\nimport Spinner from '../../../shared/spinner/spinner';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport {Cast, Details, OriginalDetails, Keywords, Collection, Recommendation} from './components';\r\nimport WithMoviesService from '../../../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded, keywordsRequested, keywordsLoaded, modalWindowToggle, videoLoaded, socialLinkLoaded, collectionLoaded, recommendationsLoaded} from '../../../../actions/actions';\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    background-image: linear-gradient(315deg, rgba(233, 188, 183, 0.7) 0%, rgba(41, 82, 74, 0.8) 74%), ${props => `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.backdrop})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    color: #fff;\r\n    font-family: 'Source Sans Pro';\r\n    background-color: #e9bcb7;\r\n`\r\n\r\nclass MovieDetails extends Component {\r\n    componentDidMount() {\r\n        const {movieId, history, details, movieDetailsRequested, castRequested, MoviesService} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                this.getDetails(movieId, MoviesService.getTVDetails); \r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getKeywords(movieId, MoviesService.getTVKeywords);\r\n                this.getVideos(movieId, MoviesService.getTVVideos);\r\n                this.getSocailLink(movieId, MoviesService.getTVExternalIds);\r\n                this.getRecommendations(movieId, MoviesService.getTVRecommendations);\r\n            } else {\r\n                movieDetailsRequested();\r\n                castRequested();\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getKeywords(movieId, MoviesService.getKeywords);\r\n                this.getVideos(movieId, MoviesService.getVideos);\r\n                this.getSocailLink(movieId, MoviesService.getMovieExternalIds);\r\n                this.getRecommendations(movieId, MoviesService.getMovieRecommendations);\r\n            } \r\n        }\r\n    }\r\n\r\n    getDetails = (id, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => {\r\n                movieDetailsLoaded(response);\r\n                if (response && response.belongs_to_collection) {\r\n                    this.getCollectionDetails(response.belongs_to_collection.id)\r\n                }  \r\n            })\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getCast = (id, request) => {\r\n        const {movieDetailsError, castLoaded} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getKeywords = (id, request) => {\r\n        const {keywordsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => keywordsLoaded(response.keywords || response.results))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getVideos = (id, request) => {\r\n        const {videoLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => videoLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getSocailLink = (id, request) => {\r\n        const {socialLinkLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then((response) => socialLinkLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getRecommendations = (id, request) => {\r\n        const {recommendationsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(id)\r\n            .then(response => recommendationsLoaded(response.results))\r\n            .catch(error => movieDetailsError())\r\n    }\r\n\r\n    getCollectionDetails = (id) => {\r\n        const {MoviesService, collectionLoaded, movieDetailsError} = this.props;\r\n\r\n        MoviesService.getCollection(id)\r\n            .then((response) => collectionLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    showCollection = (isBelongToCollection) => {\r\n        const {history, details, loading, collection} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isBelongToCollection) {\r\n            return <Collection details={details} history={history} collection={collection}/>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    showRecommendations = (isRecommendation) => {\r\n        const {history, loading, recommendations, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else if (isRecommendation.length) {\r\n            return(\r\n                <Recommendation \r\n                    history={history} \r\n                    recommendations={recommendations}\r\n                    MoviesService={MoviesService} \r\n                    getDetails={this.getDetails} \r\n                    getCast={this.getCast}\r\n                    getKeywords={this.getKeywords}\r\n                    getVideos={this.getVideos}\r\n                    getSocailLink={this.getSocailLink}\r\n                    getRecommendations={this.getRecommendations}\r\n                    movieDetailsRequested={movieDetailsRequested}\r\n                    castRequested={castRequested}\r\n                />\r\n            )\r\n        } else if (!isRecommendation.length) {\r\n            return null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieId, keywordId, history, details, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, modalWindowToggle, socialLink, recommendations} = this.props;\r\n        const globalLoading = loading || loadingCast || loadingKeywords;\r\n        if (globalLoading) {\r\n           return <Spinner/>\r\n        } else {\r\n           return(\r\n            <>\r\n                <BackgroundWrapper backdrop={details?.backdrop_path}>\r\n                        <Container className=\"w-100\">\r\n                            <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                            <Details details={details} movieId={movieId} video={video} history={history} onOpenModal={modalWindowToggle} modalWindow={modalWindow} onCloseModal={modalWindowToggle}/>\r\n                            </Row>\r\n                        </Container> \r\n                </BackgroundWrapper> \r\n                <Container className=\"mt-4 mb-5\">\r\n                    <Row>\r\n                        <Col className=\"col-8\">\r\n                            <Cast casts={casts} id={movieId} history={history}/>\r\n                            {this.showCollection(details?.belongs_to_collection)}\r\n                            {this.showRecommendations(recommendations)}\r\n                        </Col>\r\n                        <Col className=\"col-4\">\r\n                            <Row>\r\n                                <OriginalDetails details={details} history={history} socialLink={socialLink}/>\r\n                            </Row>\r\n                            <Row className=\"flex-column\">\r\n                                <Keywords keyword={keywords} history={this.props.history} keywordId={keywordId} url={'keywords'}/>\r\n                            </Row>\r\n                        </Col>                       \r\n                    </Row>\r\n                </Container>\r\n            </>\r\n           )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, loading, casts, loadingCast, keywords, loadingKeywords, modalWindow, video, socialLink, collection, recommendations} = state.movieDetailsReducer;\r\n    return {\r\n        details: movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    collectionLoaded,\r\n    recommendationsLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(MovieDetails));\r\nexport {BackgroundWrapper};","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\nexport default withRouter(ScrollToTop)","export default class MoviesServices {\r\n    constructor() {\r\n        this._baseApi = 'https://api.themoviedb.org/3';\r\n        this._apiKey = 'api_key=d97132eedaef267781863bedd0564229';\r\n        this._apiLanguage = 'language=ru-RU';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._baseApi}${url}${this._apiKey}&${this._apiLanguage}`);\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getPopular = async (page) => {\r\n        const response = await this.getResource(`/movie/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getMovieDetails = async (movieId) => { \r\n        const response = await this.getResource(`/movie/${movieId}?`);\r\n        if (response && response.status_code === 34) {\r\n            return this.getTVDetails(movieId)\r\n        }\r\n        return response;   \r\n    }\r\n\r\n    getNowPlaying = async (page) => {\r\n        const response = await this.getResource(`/movie/now_playing?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTopRated = async (page) => {\r\n        const response = await this.getResource(`/movie/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getUpcoming = async (page) => {\r\n        const response = await this.getResource(`/movie/upcoming?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCast = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getKeywords = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getVideos = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieByKeyword = async (keywordId, page) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}/movies?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getKeywordName = async (keywordId) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonBiography = async (personId) => {\r\n        const biography = await this.getResource(`/person/${personId}?`);\r\n        const combinedMoviesTv = await this.getResource(`/person/${personId}/combined_credits?`);   \r\n        return {biography, combinedMoviesTv};\r\n\r\n    }\r\n\r\n    getTVDetails = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}?`);\r\n        return response;\r\n    }\r\n\r\n    getTVCasts = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getTVKeywords = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getTVVideos = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getTVPopular = async (page) => {\r\n        const response = await this.getResource(`/tv/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVAiringToday = async (page) => {\r\n        const response = await this.getResource(`/tv/airing_today?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVTopRated = async (page) => {\r\n        const response = await this.getResource(`/tv/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVOnTheAir = async (page) => {\r\n        const response = await this.getResource(`/tv/on_the_air?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getPopularPerson = async (page) => {\r\n        const response = await this.getResource(`/person/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCollection = async (collectionId) => {\r\n        const response = await this.getResource(`/collection/${collectionId}?`);\r\n        return response;\r\n    }\r\n\r\n    getGenreList = async () => {\r\n        const response = await this.getResource(`/genre/movie/list?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieExternalIds = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getTVExternalIds = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonExternalIds = async (personId) => {\r\n        const response = await this.getResource(`/person/${personId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getInTrend = async (time) => {\r\n        const response = await this.getResource(`/trending/all/${time}?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRecommendations = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRecommendations = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MovieCardWrapper = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    min-height: 141px;\r\n    height: 100%;\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    &:first-child {\r\n        margin-top: 35px;\r\n    }\r\n`;\r\n\r\nconst MovieCardImg = styled.img`\r\n    border-top-left-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    width: 94px;\r\n    height: 141px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardContent = styled.div`\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst MovieCardTitle = styled.div`\r\n    font-size: 19.2px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardReleaseDate = styled.div`\r\n    font-size: 16px;\r\n    color: #999;\r\n`;\r\n\r\nconst MovieCardDescription = styled.div`\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    height: 72px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst KeywordName = styled.div`\r\n    font-size: 32px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieQuantity = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    opacity: 0.5;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieListByKeywords = ({movies, totalResults, keywordName}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const moviesItem = movies.map((item, index) => {\r\n        \r\n        const releaseDate = moment(item.release_date).format('DD/MM/YYYY');\r\n    \r\n        const src = !item.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path);\r\n\r\n\r\n        return (\r\n            <MovieCardWrapper key={index}>\r\n                <MovieCardImg \r\n                    src={src}\r\n                    onClick={() => {\r\n                        history.push(`/movie/${item.id}`)\r\n                    }}/>\r\n                <MovieCardContent>\r\n                    <MovieCardTitle\r\n                        onClick={() => {\r\n                            history.push(`/movie/${item.id}`)\r\n                        }}\r\n                    >{item.title}</MovieCardTitle>\r\n                    <MovieCardReleaseDate>{releaseDate}</MovieCardReleaseDate>\r\n                    <MovieCardDescription>\r\n                        <EllipsisText text={item.overview} length={260}/>\r\n                    </MovieCardDescription>\r\n                </MovieCardContent>\r\n            </MovieCardWrapper>\r\n        )\r\n    })\r\n\r\n    const film = totalResults === 1 ? 'фильм' : totalResults < 5 ? 'фильма' : 'фильмов'\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <Header>\r\n                    <KeywordName>{keywordName}</KeywordName>\r\n                    <MovieQuantity>{totalResults} {film}</MovieQuantity>\r\n                </Header>\r\n            </HeaderWrapper>\r\n            {moviesItem}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieListByKeywords;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MoviesServices from '../../services/services';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport LoadMoreSpinner from '../shared/spinner/loadMoreSpinner';\r\nimport MovieListByKeywords from './components/movieListByKeywords';\r\n\r\nconst MovieListWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin: 0 auto 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 930px;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nexport default class MoviesByKeyword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n            loading: true,\r\n            page: 0,\r\n            loadingMore: false,\r\n            totalResults: 0,\r\n            totalPages: 0,\r\n            keywordName: ''\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.keywordId);\r\n\r\n        this.getKeywordName(this.props.keywordId);\r\n    }\r\n\r\n    onLoadingMovies = (response, results, pages) => {\r\n        this.setState({\r\n            movies: [...this.state.movies, ...response],\r\n            loading: false,\r\n            page: this.state.page + 1,\r\n            loadingMore: false,\r\n            totalResults: results,\r\n            totalPages: pages,\r\n            \r\n        })\r\n    }\r\n\r\n    getMovies = (keywordId) => {\r\n        const {page} = this.state;\r\n\r\n        this.onToogleLoading();\r\n\r\n        this.moviesServices.getMovieByKeyword(this.props.keywordId, page + 1)\r\n            .then((response) => {\r\n                this.onLoadingMovies(response.results, response.total_results, response.total_pages)\r\n            })\r\n    }\r\n\r\n    getKeywordName = (keywordId) => {\r\n        this.moviesServices.getKeywordName(this.props.keywordId)\r\n            .then((response) => {\r\n                this.onLoadingKeywordName(response.name)\r\n            })\r\n    }\r\n\r\n    onLoadingKeywordName = (response) => {\r\n        this.setState({\r\n            keywordName: response\r\n        })\r\n    }\r\n\r\n    onToogleLoading = () => {\r\n        this.setState({\r\n            loadingMore: true\r\n        })\r\n    }\r\n\r\n    showButton = () => {\r\n        const {loadingMore, totalPages} = this.state;\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n        if (totalPages !== 1) {\r\n            return (\r\n                <ButtonWrapper>\r\n                    <LoadMoreButton onClick={ () => this.getMovies()}>\r\n                        {loadSpinner}\r\n                    </LoadMoreButton>\r\n                </ButtonWrapper>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, totalResults, keywordName} = this.state;\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else {\r\n            return (\r\n                <>               \r\n                    <MovieListWrapper>\r\n                        <MovieListByKeywords \r\n                            movies={movies} \r\n                            totalResults={totalResults} \r\n                            keywordName={keywordName}\r\n                        />\r\n                    </MovieListWrapper>\r\n                    {this.showButton()}         \r\n                </>\r\n            ) \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CastTitle = styled.div`\r\n    font-size: 22.4px;\r\n    font-family: Arial;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst CastNumber = styled.span`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst CastItemImg = styled.img`\r\n    width: 66px;\r\n    height: 66px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastContent = styled.div``;\r\n\r\nconst DepartmentTitle = styled.div`\r\n    margin: 20px 0 8px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Actors = ({casts, history}) => {\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.map((item, index) => {\r\n        const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastItemImg \r\n                    alt={item.name} \r\n                    src={src} \r\n                    onClick={() => history.push(`/person/${item.id}`)}\r\n                />\r\n                <CastNameWrapper>\r\n                    <CastName \r\n                        onClick={() => history.push(`/person/${item.id}`)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastNameWrapper>\r\n            </CastItemWrapper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Актёрский состав <CastNumber>{cast.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                {castItem}\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Crew = ({casts, history}) => {\r\n\r\n    const {crew} = casts;\r\n\r\n    const CrewDepartment = ({department}) => {\r\n        const crewItem = crew.map((item, index) => {\r\n            const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            if (item.department === department) {\r\n                return (\r\n                    <CastItemWrapper key={index}>\r\n                        <CastItemImg \r\n                            alt={item.name} \r\n                            src={src} \r\n                            onClick={() => {history.push(`/person/${item.id}`)}}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName \r\n                                onClick={() => {history.push(`/person/${item.id}`)}}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.job}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        return crewItem;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Съёмочный состав <CastNumber>{crew.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                <DepartmentTitle>Оформление</DepartmentTitle>\r\n                <CrewDepartment department={'Art'}/>\r\n                <DepartmentTitle>Камера</DepartmentTitle>\r\n                <CrewDepartment department={'Camera'}/>\r\n                <DepartmentTitle>Костюмы и грим</DepartmentTitle>\r\n                <CrewDepartment department={'Costume & Make-Up'}/>\r\n                <DepartmentTitle>Ещё</DepartmentTitle>\r\n                <CrewDepartment department={'Crew'}/>\r\n                <DepartmentTitle>Режиссура</DepartmentTitle>\r\n                <CrewDepartment department={'Directing'}/>\r\n                <DepartmentTitle>Монтаж</DepartmentTitle>\r\n                <CrewDepartment department={'Editing'}/>\r\n                <DepartmentTitle>Свет</DepartmentTitle>\r\n                <CrewDepartment department={'Lighting'}/>\r\n                <DepartmentTitle>Продакшн</DepartmentTitle>\r\n                <CrewDepartment department={'Production'}/>\r\n                <DepartmentTitle>Звук</DepartmentTitle>\r\n                <CrewDepartment department={'Sound'}/>\r\n                <DepartmentTitle>Визуальные эффекты</DepartmentTitle>\r\n                <CrewDepartment department={'Visual Effects'}/>\r\n                <DepartmentTitle>Сценарий</DepartmentTitle>\r\n                <CrewDepartment department={'Writing'}/>\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {Actors, Crew};","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport moment from 'moment';\r\nimport {Actors, Crew} from './components/fullCastList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded} from '../../actions/actions';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 0;\r\n    margin: 0 0 30px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1110px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst MovieName = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieReleaseYear = styled.span`\r\n    font-size: 35.2px;\r\n    font-weight: 400;\r\n    opacity: 0.8;\r\n    color: #fff;\r\n`;\r\n\r\nconst MoviePosterImg = styled.img`\r\n    width: 58px;\r\n    height: 87px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieContent = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst ButtonBack = styled.div`\r\n    cursor: pointer;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    opacity: 0.6;\r\n    color: #fff;\r\n`;\r\n\r\nclass FullCast extends Component {\r\n    componentWillMount() {\r\n        const {movieId, history, details, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getDetails(movieId, MoviesService.getTVDetails);\r\n            } else {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n            }\r\n        }\r\n    }\r\n \r\n    getCast = (movieId, request) => {\r\n        const {castLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getDetails = (movieId, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => movieDetailsLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    onGoBack = () => { \r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const {casts, loadingCast, history, details} = this.props;\r\n        const spinnerActors = loadingCast ? <Spinner/> : <Actors casts={casts} history={history}/>;\r\n        const spinnerCrew = loadingCast ? <Spinner/> : <Crew casts={casts} history={history}/>;\r\n\r\n        const releaseYear = moment(details.first_air_date || details.release_date).format('YYYY');\r\n        const src = !details.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w58_and_h87_face' + details.poster_path);\r\n        \r\n        return (\r\n            <>\r\n                <HeaderWrapper>\r\n                    <Header>\r\n                        <MoviePosterImg src={src} alt={details.name || details.title} onClick={this.onGoBack}/>\r\n                        <MovieContent>\r\n                            <MovieName onClick={this.onGoBack}>{details.name || details.title}\r\n                                <MovieReleaseYear> ({releaseYear})</MovieReleaseYear>\r\n                            </MovieName>  \r\n                            <ButtonBack\r\n                                onClick={this.onGoBack}\r\n                            > <i className=\"fas fa-arrow-left\"></i> Назад на главную</ButtonBack>\r\n                        </MovieContent>\r\n                    </Header>\r\n                </HeaderWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {spinnerActors}\r\n                        </Col>\r\n                        <Col>\r\n                            {spinnerCrew}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, casts, loadingCast} = state.movieDetailsReducer;\r\n\r\n    return {\r\n        details: movieDetails,\r\n        casts,\r\n        loadingCast\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(FullCast));","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport MoviesServices from '../../../services/services';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MovieListItemWrapper = styled.div`\r\n    border-bottom: ${props => !props.hasBorder ? '1px solid rgb(227, 227, 227)' : 'none'};\r\n    font-size: 16px;\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`   \r\n    font-weight: 400;\r\n    padding: 8px 16px;\r\n    width: 70px;\r\n    text-align: center;\r\n`;\r\n\r\nconst MovieTitle = styled.div`\r\n    font-weight: 600;\r\n    padding: 8px 0 8px 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst LikeCharacter = styled.div`\r\n    opacity: 0.5;\r\n    padding: 0 8px;\r\n`;\r\n\r\nconst Character = styled.div`\r\n    opacity: 0.8;\r\n    padding: 8px 16px 8px 0;\r\n`;\r\n\r\nconst MoviePreviewButton = styled.div`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    border: 1px solid #000;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    .popover-body {\r\n        width: 535px;\r\n        background-color: rgb(3, 37, 65);\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        cursor: default;\r\n        padding: 13px;\r\n    }\r\n\r\n    .bs-popover-top > .arrow::after, .bs-popover-auto[x-placement^=\"top\"] > .arrow::after{\r\n        border-top-color: rgb(3, 37, 65);\r\n    }\r\n`;\r\n\r\nconst CircleHover = styled.div`\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #000;\r\n    opacity: ${(props) => props.show ? 1 : 0};\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst PopoverImgWrapper = styled.div``;\r\n\r\nconst PopoverPoster = styled.img`\r\n    width: 94px;\r\n    height: 141px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverContentWrapper = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst PopoverTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst PopoverTitle = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverDescription = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 21.6px;\r\n`;\r\n\r\nconst PopoverRate = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    padding: 4px 8px;\r\n    font-size: 14.4px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-left: 10px;\r\n\r\n    & i {\r\n        font-size: 10px;\r\n        margin-right: 3px;\r\n    }\r\n`;\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n\r\n    &:hover {\r\n        color:rgb(30, 213, 169);\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PersonDetailsCasts = ({cast}) => {\r\n    const [castItem, setCastItem] = useState([]);\r\n    const [filterSelected, setFilterSelected] = useState(false);\r\n    const noDateCasts = cast.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCasts = cast.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCast = releaseDateCasts.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n\r\n    const allCasts = [...noDateCasts, ...sortedCast];\r\n\r\n    const filteredByMovieType = allCasts.filter(item => item.media_type === 'movie');\r\n    const filteredByTVType = allCasts.filter(item => item.media_type === 'tv');\r\n    const movieQuantity = filteredByMovieType.length;\r\n    const tvQuantity = filteredByTVType.length;\r\n    const movies = (casts) => {\r\n        return casts.map((item, index, arr) => {\r\n            if (item.title || item.name) {\r\n                const releaseDate = item.release_date || item.first_air_date;\r\n                const fullDateToYear = moment(releaseDate).format('YYYY');\r\n                const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n                let current;\r\n                let next;\r\n                if (index > 0) {\r\n                    current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                    next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n                }\r\n                return (\r\n                    <HistoryItem key={index} cast={item} date={date} hasBorder={next === current}/>  \r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n    }, []);\r\n\r\n    const onSelect = (content) => {\r\n        const data = movies(content)\r\n        setCastItem(data)\r\n        setFilterSelected(true)\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n        setFilterSelected(false)\r\n    }\r\n\r\n    const clearButton = filterSelected ? <ClearButton onClick={clearFilter}>Очистить</ClearButton> : null;\r\n\r\n    return (\r\n        <>\r\n            <MovieListWrapper>\r\n                <DepartmentListTitle>\r\n                    Актёрское искусство\r\n                    <FilterWrapper>\r\n                        {clearButton}\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Все\">\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByMovieType)}>Фильмы {movieQuantity}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByTVType)}>ТВ Сериалы {tvQuantity}</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </FilterWrapper>\r\n                </DepartmentListTitle>\r\n                <MovieListContent>\r\n                    {castItem}\r\n                </MovieListContent>\r\n            </MovieListWrapper>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst HistoryItem = ({cast, date, hasBorder}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = cast.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + cast.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = cast.vote_average.toFixed(1);\r\n    const tvEpisodes = cast.episode_count ? `(${cast.episode_count} эпизодов)` : null;\r\n  \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n            <ReleaseDate>{date}</ReleaseDate>\r\n            <MoviePreviewButton ref={ref}\r\n                onClick={handleClick}>\r\n                    <CircleHover show={show}></CircleHover>  \r\n            </MoviePreviewButton>\r\n                <Overlay \r\n                    show={show}\r\n                    target={target}\r\n                    container={ref.current}\r\n                    rootClose={true}\r\n                    onHide={handleClick}\r\n                >\r\n                    <Popover>\r\n                        <Popover.Content>\r\n                            <PopoverImgWrapper>\r\n                                <PopoverPoster \r\n                                    src={src} \r\n                                    alt={cast.title || cast.name} \r\n                                    onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                />\r\n                            </PopoverImgWrapper>\r\n                            <PopoverContentWrapper>\r\n                                <PopoverTitleWrapper>\r\n                                    <PopoverTitle\r\n                                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                    >{cast.title || cast.name}</PopoverTitle>\r\n                                    <PopoverRate>\r\n                                        <i className=\"fas fa-star\"></i> {rate}\r\n                                    </PopoverRate>\r\n                                </PopoverTitleWrapper> \r\n                                <PopoverDescription>{textEllipsis(cast.overview, 96)}</PopoverDescription>    \r\n                            </PopoverContentWrapper>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n            <MovieTitle\r\n                onClick={() => handleRouting(cast.id, cast.media_type)}\r\n            >{cast.title || cast.name}</MovieTitle>\r\n            <LikeCharacter> {tvEpisodes} как</LikeCharacter>\r\n            <Character>{cast.character}</Character>\r\n        </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\nexport default PersonDetailsCasts;\r\nexport {CircleHover, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate};","import React, {useState} from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport {CircleHover, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate} from './personDetailsCasts';\r\nimport MoviesServices from '../../../services/services';\r\n\r\n\r\n\r\nconst PersonDetailsCrew = ({crew}) => {\r\n    const noDateCrew = crew.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCrew = crew.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCrew = releaseDateCrew.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n    \r\n    const allCrews = [...noDateCrew, ...sortedCrew];\r\n    \r\n    const crewItem = allCrews.map((item, index, arr) => {\r\n        if (item.title || item.name) {\r\n            const releaseDate = item.release_date || item.first_air_date;\r\n            const fullDateToYear = moment(releaseDate).format('YYYY');\r\n            const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n            let current;\r\n            let next;\r\n            if (index > 0) {\r\n                current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n            }\r\n            return (\r\n                <HistoryItem key={index} item={item} date={date} hasBorder={next === current}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return crewItem;\r\n}\r\n\r\n\r\nconst HistoryItem = ({item, date, hasBorder}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = item.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = item.vote_average.toFixed(1);\r\n    const tvEpisodes = item.episode_count ? `(${item.episode_count} эпизодов)` : null;\r\n    \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                debugger\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n                <ReleaseDate>{date}</ReleaseDate>\r\n                <MoviePreviewButton ref={ref}\r\n                 onClick={handleClick}>\r\n                        <CircleHover show={show}></CircleHover>  \r\n                </MoviePreviewButton>\r\n                    <Overlay \r\n                        show={show}\r\n                        target={target}\r\n                        container={ref.current}\r\n                        rootClose={true}\r\n                        onHide={handleClick}\r\n                    >\r\n                        <Popover>\r\n                            <Popover.Content>\r\n                                <PopoverImgWrapper>\r\n                                    <PopoverPoster \r\n                                        src={src} \r\n                                        alt={item.title || item.name} \r\n                                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                                    />\r\n                                </PopoverImgWrapper>\r\n                                <PopoverContentWrapper>\r\n                                    <PopoverTitleWrapper>\r\n                                        <PopoverTitle\r\n                                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                                        >{item.title || item.name}</PopoverTitle>\r\n                                        <PopoverRate>\r\n                                            <i className=\"fas fa-star\"></i> {rate}\r\n                                        </PopoverRate>\r\n                                    </PopoverTitleWrapper> \r\n                                    <PopoverDescription>{textEllipsis(item.overview, 96)}</PopoverDescription>    \r\n                                </PopoverContentWrapper>\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    </Overlay>\r\n                <MovieTitle\r\n                    onClick={() => handleRouting(item.id, item.media_type)}\r\n                >{item.title || item.name}</MovieTitle>\r\n                <LikeCharacter> {tvEpisodes} ...</LikeCharacter>\r\n                <Character>{item.job}</Character>\r\n            </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\n\r\nexport default PersonDetailsCrew;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PersonDetailsCrew from './personDetailsCrew';\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst CrewByDepartments = ({crew}) => {\r\n\r\n    const filteredCrew = (department) => {\r\n        return crew.filter(item => item.department === department);\r\n    }\r\n\r\n    const production = !filteredCrew(\"Production\").length ? null : <Department crew={filteredCrew(\"Production\")}/>;\r\n    const writing = !filteredCrew(\"Writing\").length ? null : <Department crew={filteredCrew(\"Writing\")}/>;\r\n    const art = !filteredCrew(\"Art\").length ? null : <Department crew={filteredCrew(\"Art\")}/>;\r\n    const camera = !filteredCrew(\"Camera\").length ? null : <Department crew={filteredCrew(\"Camera\")}/>;\r\n    const makeUp = !filteredCrew(\"Costume & Make-Up\").length ? null : <Department crew={filteredCrew(\"Costume & Make-Up\")}/>;\r\n    const crews = !filteredCrew(\"Crew\").length ? null : <Department crew={filteredCrew(\"Crew\")}/>;\r\n    const directing = !filteredCrew(\"Directing\").length ? null : <Department crew={filteredCrew(\"Directing\")}/>;\r\n    const editing = !filteredCrew(\"Editing\").length ? null : <Department crew={filteredCrew(\"Editing\")}/>;\r\n    const lighting = !filteredCrew(\"Lighting\").length ? null : <Department crew={filteredCrew(\"Lighting\")}/>;\r\n    const sound = !filteredCrew(\"Sound\").length ? null : <Department crew={filteredCrew(\"Sound\")}/>;\r\n    const visualEffects = !filteredCrew(\"Visual Effects\").length ? null : <Department crew={filteredCrew(\"Visual Effects\")}/>;\r\n\r\n    return (\r\n        <MovieListWrapper>\r\n            {production}\r\n            {writing}\r\n            {art}\r\n            {camera}\r\n            {makeUp}\r\n            {crews}\r\n            {directing}\r\n            {editing}\r\n            {lighting}\r\n            {sound}\r\n            {visualEffects}\r\n        </MovieListWrapper>\r\n    )\r\n}\r\n\r\nconst Department = ({crew}) => {\r\n    return (\r\n        <>\r\n            <DepartmentListTitle>{crew[0].department}</DepartmentListTitle>\r\n            <MovieListContent>\r\n                <PersonDetailsCrew crew={crew}/>\r\n            </MovieListContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrewByDepartments;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport {PersonDetailsCasts, CrewByDepartments} from './index';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport MoviesServices from '../../../services/services';\r\nimport {Overlay, LinkIconWrapper, Link} from '../../moviesPage/components/movieDetailsPage/components/originalDetails';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst ImgWrapper = styled.img`\r\n    width: 300px;\r\n    height: 450px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n    max-width: 890px;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`;\r\n\r\nconst BioWrapper = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n    margin: 30px 0;\r\n`;\r\n\r\nconst BioContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;  \r\n    height: ${props => (props.mainHeight && props.childRef > 200) ? '200px' : 'auto' };\r\n    overflow: hidden;  \r\n    transition: height 200ms;\r\n    text-align: justify;\r\n\r\n    &.open {\r\n        height: ${props => props.childRef + 'px'};\r\n    }\r\n`;\r\n\r\nconst PersonalInfo = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n`;\r\n\r\nconst PersonalInfoItemTitle = styled.div`\r\n    font-size:16px;\r\n    font-weight:600;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst PersonalInfoItemSubtitle = styled.div`\r\n    font-size:16px;\r\n    font-weight:400;\r\n`;\r\n\r\nconst AlsoKnowWrapper = styled.div`\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ReadMoreButton = styled.button`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${props => (props.mainHeight && props.childRef > 200) ? 'flex' : 'none'};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228); \r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PersonDetails = ({person, cast, crew, socialLink}) => {\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n    const history = useHistory();\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n    \r\n    const onOpen = () => {\r\n        setOpen(!isOpen)\r\n    }\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight)\r\n    }\r\n    const classNames = isOpen ? 'open' : '';\r\n    const src = !person.profile_path ? (process.env.PUBLIC_URL + '/assets/avatar.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + person.profile_path);\r\n    const biography = !person.biography ? `У нас нет биографии для ${person.name}` : <div ref={element => getElementHeight(element)}>{person.biography}</div>;\r\n    const gender = person.gender === 1 ? 'Женский' : 'Мужской';\r\n    const alsoKnow = person.also_known_as.map((item, index) => {\r\n        return (\r\n            <AlsoKnowWrapper key={index}>\r\n                {item}\r\n            </AlsoKnowWrapper>\r\n        )\r\n    })\r\n    const birthday = person.birthday ? person.birthday : '-';\r\n    const ageAlive = !person.birthday ? ' ' : person.deathday ? null : (`(${moment().diff(`${person.birthday}`, 'years')} лет)`);\r\n    const ageDead = moment([person.deathday]).diff( moment([person.birthday]) , 'years');\r\n    const dateOfDeath = !person.deathday ? null : <PersonalInfoItemTitle>Дата смерти<PersonalInfoItemSubtitle>{person.deathday} ({ageDead} лет)</PersonalInfoItemSubtitle></PersonalInfoItemTitle>;\r\n    const acting = cast.length !== 0 ? <PersonDetailsCasts cast={cast}/> : null;\r\n    const filmCrew = crew.length !== 0 ? <CrewByDepartments crew={crew}/> : null;\r\n    const famousCast = cast.length !== 0 ? <FamousCast cast={cast} history={history}/> : null;\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    )\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <Col className=\"col-4\">\r\n                <ImgWrapper src={src} alt={person.name}/>\r\n                <LinkIconWrapper>\r\n                    {overlayFacebook}\r\n                    {overlayTwitter}\r\n                    {overlayInstagram}\r\n                </LinkIconWrapper>\r\n                <PersonalInfo>Персональная информация</PersonalInfo>\r\n                <PersonalInfoItemTitle>Известность за\r\n                    <PersonalInfoItemSubtitle>{person.known_for_department}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Пол\r\n                    <PersonalInfoItemSubtitle>{gender}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Дата рождения\r\n                    <PersonalInfoItemSubtitle>{birthday} {ageAlive}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                {dateOfDeath}\r\n                <PersonalInfoItemTitle>Место рождения\r\n                    <PersonalInfoItemSubtitle>{person.place_of_birth}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n                <PersonalInfoItemTitle>Также известность как\r\n                    <PersonalInfoItemSubtitle>{alsoKnow}</PersonalInfoItemSubtitle>\r\n                </PersonalInfoItemTitle>\r\n            </Col>\r\n            <Col className=\"col-8\">\r\n                <DescriptionWrapper>\r\n                    <TitleWrapper>{person.name}</TitleWrapper>\r\n                    <BioWrapper>Биография\r\n                        <BioContent \r\n                            className={classNames}\r\n                            childRef={elementHeight}\r\n                            mainHeight={person.biography}\r\n                        >{biography}</BioContent>\r\n                        <ReadMoreButton\r\n                            childRef={elementHeight}\r\n                            mainHeight={person.biography}\r\n                            onClick={onOpen}\r\n                        >\r\n                            Читать ещё <i className=\"fas fa-chevron-right\"></i>\r\n                        </ReadMoreButton>\r\n                    </BioWrapper>   \r\n                </DescriptionWrapper>\r\n                {famousCast} \r\n                {acting}\r\n                {filmCrew}                 \r\n           </Col>            \r\n        </>            \r\n    )\r\n}\r\n\r\nconst FamousCast = ({cast, history}) => {\r\n    \r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    let carousel;\r\n\r\n    const castItem = cast.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.poster_path ? ('https://image.tmdb.org/t/p/w150_and_h225_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name || item.title} \r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    >\r\n                        <EllipsisText text={item.name || item.title} length={13}/>\r\n                    </CastName>\r\n                </CastItemWrapper>\r\n            )\r\n        });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <CastTitle>Известность за</CastTitle>\r\n            <Carousel renderArrow={myArrow}\r\n                    itemsToScroll={1} \r\n                    itemsToShow={5}\r\n                    focusOnSelect={false}\r\n                    ref={ref => (carousel = ref)}\r\n                    renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}><i className=\"fas fa-angle-double-left\"></i></PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}><i className=\"fas fa-angle-double-right\"></i></NextButton>\r\n        </CarouselWrapper>  \r\n    )\r\n}\r\n\r\nexport default PersonDetails;","import React, {Component} from 'react';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport MoviesServices from '../../services/services';\r\nimport { Row, Container } from 'react-bootstrap';\r\nimport {PersonDetails} from './components';\r\n\r\n\r\nexport default class PersonBiography extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state ={\r\n            person: null,\r\n            loading: true,\r\n            cast: null,\r\n            crew: null,\r\n            socialLink: {}\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {personId} = this.props;\r\n        this.getBiography(personId);  \r\n        this.getPersonSocailLink(personId); \r\n    }\r\n\r\n    onLoading = (response, cast, crew) => {\r\n        this.setState({\r\n            person: response,\r\n            loading: false,\r\n            cast: cast,\r\n            crew: crew,       \r\n        })\r\n    }\r\n\r\n    getBiography = (personId) => {\r\n        this.moviesServices.getPersonBiography(personId)\r\n            .then((response) => {\r\n                this.onLoading(response.biography, response.combinedMoviesTv.cast, response.combinedMoviesTv.crew)\r\n            })\r\n    }\r\n\r\n    getPersonSocailLink = (personId) => {\r\n        this.moviesServices.getPersonExternalIds(personId)\r\n            .then((response) => {\r\n                this.onLoadingLink(response)\r\n            })\r\n    }\r\n\r\n    onLoadingLink = (response) => {\r\n        this.setState({\r\n            socialLink: response\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {person, loading, cast, crew, socialLink} = this.state;\r\n\r\n        const spinnerPerson = loading ? <Spinner/> : <PersonDetails person={person} cast={cast} crew={crew} socialLink={socialLink}/>\r\n        return(\r\n            <Container className=\"mt-4\">\r\n                <Row>\r\n                    {spinnerPerson}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularTvRequested, popularTvLoaded, popularTvError, popularTvMoreRequested, popularTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass TVPopularPage extends Component {   \r\n    componentWillMount() { \r\n        if(!this.props.tv.length) {\r\n            this.props.popularTvRequested();\r\n            this.loadTV(this.props.popularTvLoaded)\r\n        }      \r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTv = () => {\r\n        const {page, popularTvMoreRequested, popularTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        popularTvMoreRequested();\r\n        this.loadTV(popularTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTv}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularTv, popularPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: popularTv,\r\n        page: popularPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVPopularPage));\r\n","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {airingTodayTvRequested, airingTodayTvLoaded, popularTvError, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass AiringTodayPage extends Component {\r\n    componentWillMount() {\r\n        if (!this.props.tv.length) {\r\n            this.props.airingTodayTvRequested();\r\n            this.loadTV(this.props.airingTodayTvLoaded);\r\n        }\r\n     }\r\n \r\n     loadTV = (success) => {\r\n         const {page, MoviesService, popularTvError} = this.props;\r\n \r\n         MoviesService.getTVAiringToday(page + 1)\r\n             .then((res) => success(res.results))\r\n             .catch(error => popularTvError())\r\n     }\r\n \r\n     loadMoreTV = () => {\r\n         const {page, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} = this.props;\r\n \r\n         if (page > 500) {\r\n             return\r\n         }\r\n \r\n         airingTodayTvMoreRequested();\r\n         this.loadTV(airingTodayTvMoreLoaded)\r\n     }\r\n \r\n     render() {\r\n         const {tv, loading, loadingMore, history} = this.props;\r\n         \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n     }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {airingTodayTv, loading, loadingMore, airingTodayPage} = state.tvPageReducer;\r\n    return {\r\n        tv: airingTodayTv,\r\n        page: airingTodayPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(AiringTodayPage));","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedTvRequested, topRatedTvTvLoaded, popularTvError, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass TVTopRatedPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.topRatedTvRequested();\r\n           this.loadTV(this.props.topRatedTvTvLoaded)\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n    \r\n    loadMoreTV = () => {\r\n        const {page, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedTvTvMoreRequested();\r\n        this.loadTV(topRatedTvTvMoreLoaded)\r\n    } \r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedTv, topRatedPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: topRatedTv,\r\n        page: topRatedPage,\r\n        loading, \r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVTopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {onTheAirTvRequested, onTheAirTvLoaded, popularTvError, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} from '../../actions/actions';\r\n\r\n\r\nclass OnTheAirPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.onTheAirTvRequested();\r\n           this.loadTV(this.props.onTheAirTvLoaded);\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVOnTheAir(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTV = () => {\r\n        const {page, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        onTheAirTvMoreRequested();\r\n        this.loadTV(onTheAirTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {onTheAirTv, loading, loadingMore, onTheAirPage} = state.tvPageReducer;\r\n    return {\r\n        tv: onTheAirTv,\r\n        page: onTheAirPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(OnTheAirPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { Pagination } from '@material-ui/lab';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst PersonItemWrapper = styled.div`\r\n    max-width: 235px;\r\n    width: 100%;\r\n    min-height: ${props => props.size < 415 ? '220px' : '287px'};\r\n    height: 100%;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PersonImg = styled.img`\r\n    width: 100%;\r\n    height: ${props => props.size < 415 ? '63%' : '80%'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonNameWrapper = styled.div`\r\n    padding: 8px 10px;\r\n`;\r\n\r\nconst PersonName = styled.div`\r\n    font-size: 16px;\r\n    line-height: 19.2px;\r\n    font-weight: 700;\r\n    text-align: left;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonCast = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 17.28px;\r\n    opacity: 0.6;\r\n    text-align: left;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 700;\r\n    padding: 0 0 15px 30px;\r\n`;\r\n\r\nconst PersonList = ({person, loading, history, url, totalPages, getPerson, page}) => {\r\n    const size = useWindowSize();\r\n    const personItem = person.map(item => {\r\n        const {name, known_for, profile_path, id} = item;\r\n        const src = profile_path ? ('https://image.tmdb.org/t/p/w235_and_h235_face' + profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n        \r\n        const castArray = known_for.map(movie => movie.name || movie.title);\r\n        const castToString = castArray.join(', ');\r\n\r\n        return (\r\n            <Col key={id} className='mb-4 col-xl-3 col-6 col-sm-6'>\r\n                <PersonItemWrapper size={size}>\r\n                    <PersonImg \r\n                        size={size}\r\n                        src={src} \r\n                        alt={name}\r\n                        onClick={() => history.push(`${url}/${id}`)}\r\n                    />\r\n                    <PersonNameWrapper>\r\n                        <PersonName\r\n                            onClick={() => history.push(`${url}/${id}`)}\r\n                        >{name}</PersonName>\r\n                        <PersonCast>\r\n                            <EllipsisText text={castToString} length={size < 415 ? 15 : 27}/>\r\n                        </PersonCast>\r\n                    </PersonNameWrapper>  \r\n                </PersonItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container className=\"mt-4 mt-lg-5 container-xl\">\r\n                <Row>\r\n                    <SectionTitle>\r\n                        Популярные люди\r\n                    </SectionTitle>\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                    {personItem}\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100 mb-5\">\r\n                    <Pagination \r\n                        size={size < 415 ? \"small\" : 'large'}\r\n                        count={totalPages} \r\n                        boundaryCount={2}\r\n                        page={page}\r\n                        onChange={(event, page) => {\r\n                            getPerson(page)\r\n                        }}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonList;","import React, { Component }  from 'react';\r\nimport PersonList from './components/personList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularPersonRequested, popularPersonLoaded, popularPersonError} from '../../actions/actions';\r\n\r\nclass PersonPage extends Component {  \r\n    componentWillMount() {\r\n        const {popularPersonRequested, person, history, page} = this.props;\r\n        \r\n        history.push({\r\n            pathname: '/person',\r\n            search: `?page=${page}`\r\n        })\r\n\r\n        if (!person.length) {\r\n            popularPersonRequested();\r\n            this.loadPerson(); \r\n        }     \r\n    }\r\n\r\n    onServiceRequest = (page) => {\r\n        const {MoviesService, popularPersonError, popularPersonLoaded, history} = this.props;\r\n\r\n        MoviesService.getPopularPerson(page)\r\n        .then((res) => {\r\n            if (res) {\r\n                history.push({\r\n                    pathname: '/person',\r\n                    search: `?page=${page}`\r\n                });\r\n                const payload = {\r\n                    person: res.results,\r\n                    totalPages: res.total_pages,\r\n                    page: res.page\r\n                }\r\n                popularPersonLoaded(payload)\r\n            } \r\n        })\r\n        .catch(error => popularPersonError())\r\n    }\r\n\r\n    loadPerson = () => {\r\n        const {page} = this.props;\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    loadMorePerson = (page) => {\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    render() {\r\n        const {person, loading, totalPages, page, history} = this.props;\r\n    \r\n        return(\r\n            <PersonList\r\n                person={person}\r\n                loading={loading}\r\n                page={page}\r\n                totalPages={totalPages}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getPerson = {this.loadMorePerson}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {person, loading, page, totalPages} = state.popularPersonReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        page,\r\n        totalPages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PersonPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\n\r\nconst CastItemWrapper = styled.div`\r\n    max-width: ${props => props.large ? '1218px' : '290px'};\r\n    width: 100%;\r\n    display: flex;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 7px;\r\n    margin: 10px 0 4px;\r\n`;\r\n\r\nconst CastImgWrapper = styled.img`\r\n    width: ${props => props.large ? '94px' : '60px'};\r\n    height: ${props => props.large ? '141px' : '60px'};\r\n    border-top-left-radius: 7px;\r\n    border-bottom-left-radius: 7px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 14px;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: ${props => props.large ? '19px' : '16px'};\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: #08e8de;\r\n    }\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size:14.4px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 1.4em;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`\r\n    color: rgb(153, 153, 153);\r\n    font-size: 16px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionCast = ({cast, crew, parts, history}) => {  \r\n\r\n    const onGoToPersonDetails = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const onGoToMovieDetails = (id) => {\r\n        history.push(`/movie/${id}`)\r\n    }\r\n\r\n    const castItem = cast.filter((item, index) => index < 12)\r\n        .map((item, index) => {\r\n            const src = item.profile_path ? 'https://image.tmdb.org/t/p/w64_and_h64_face' + item.profile_path : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper>\r\n                        <CastImgWrapper \r\n                            src={src} \r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>\r\n                                <EllipsisText text={item.character} length={20}/> \r\n                            </CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n    const crewItem = crew.filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const src = item.profile_path ? 'https://image.tmdb.org/t/p/w64_and_h64_face' + item.profile_path : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper>\r\n                        <CastImgWrapper \r\n                            src={src} \r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.department}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            )\r\n        })\r\n\r\n    const partItem = parts.map((part, index) => {\r\n        const src = part.poster_path ? 'https://image.tmdb.org/t/p/w94_and_h141_bestv2' + part.poster_path : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return (\r\n            <Col sm={12} key={index}>\r\n                <CastItemWrapper large>\r\n                    <CastImgWrapper \r\n                        src={src} \r\n                        alt={part.title} \r\n                        large\r\n                        onClick={() => onGoToMovieDetails(part.id)}\r\n                    />\r\n                    <CastNameWrapper>\r\n                        <CastName \r\n                            large\r\n                            onClick={() => onGoToMovieDetails(part.id)}\r\n                        >\r\n                            {part.title}\r\n                            <ReleaseDate>{moment(part.release_date).format('DD/MM/YYYY')}</ReleaseDate>\r\n                        </CastName>\r\n                        <CastCharacter>\r\n                            <EllipsisText text={part.overview} length={270}/>\r\n                        </CastCharacter>\r\n                    </CastNameWrapper>\r\n                </CastItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <Container>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            В главных ролях\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {castItem}\r\n                </Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            Постановщики\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {crewItem}\r\n                </Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className='font-weight-bold'>\r\n                        <HeaderWrapper>\r\n                            {parts.length} фильмов\r\n                        </HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {partItem}\r\n                </Row>\r\n            </Section>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CollectionCast;","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport {ImgWrapper, Title, DetailsList, Vote, Overview} from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport Rate from '../../shared/rate';\r\nimport {BackgroundWrapper} from '../../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport CollectionCast from './collectionCast';\r\n\r\nconst DetailsTitleWrapper = styled.div`\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst DetailsContentWrapper = styled.span`\r\n    font-weight: 400;\r\n`;\r\n\r\n\r\nconst CollectionDetails = ({collection, history, genre, cast, crew, revenue}) => {\r\n\r\n    const {name, poster_path, overview, parts, backdrop_path} = collection;\r\n    const averageVote = (parts.reduce((sum, item) => {\r\n        return sum + item.vote_average;\r\n    }, 0) / parts.length).toFixed(2);\r\n    const {genres} = genre;\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + poster_path);\r\n\r\n    const movieOverview = !overview ? '-' : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty('parts') && Object.keys(genre).length) {\r\n            parts.forEach(part => {\r\n                part.genre_ids.forEach(id => {\r\n                    genres.forEach(genre => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name)\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        return null;\r\n    }  \r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index\r\n    })\r\n    const uniquesToString = uniques.join(', ');\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue ? `$${nf.format(revenue).replace(/\\s/g, ',')}` : '-';\r\n\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={backdrop_path}>\r\n                    <Container>\r\n                        <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                            <Col className='col-4'>\r\n                                <ImgWrapper src={src} alt={name}/>\r\n                            </Col>\r\n                            <Col className='col-8 text-left px-0'>\r\n                                <Title>{name}</Title>\r\n                                <DetailsList>\r\n                                    <Row>                       \r\n                                        <Col className=\"col-auto\">{uniquesToString}</Col>\r\n                                    </Row>  \r\n                                    <Row className=\"font-weight-bold py-3\">\r\n                                        <Col className=\"col-auto d-flex\">\r\n                                            <Rate vote={averageVote}/>   \r\n                                            <Vote>Пользовательский счёт</Vote>\r\n                                        </Col>\r\n                                    </Row> \r\n                                    <Row className='flex-column py-2'>\r\n                                        <Col>\r\n                                            <Overview>\r\n                                                Обзор\r\n                                            </Overview>\r\n                                        </Col>\r\n                                        <Col>{movieOverview}</Col>\r\n                                    </Row>\r\n                                    <Row className='flex-column py-2'>\r\n                                        <Col>\r\n                                            <DetailsTitleWrapper>\r\n                                                Число фильмов: <DetailsContentWrapper>{parts.length}</DetailsContentWrapper>\r\n                                            </DetailsTitleWrapper>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <DetailsTitleWrapper>\r\n                                                Сборы: <DetailsContentWrapper>{movieRevenue}</DetailsContentWrapper>\r\n                                            </DetailsTitleWrapper>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </DetailsList>  \r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n            </BackgroundWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionDetails;","import React, { Component }  from 'react';\r\nimport MoviesServices from '../../services/services';\r\nimport CollectionDetails from './components/collectionDetails';\r\nimport Spinner from '../shared/spinner/spinner';\r\n\r\n\r\nexport default class CollectionPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.moviesServices = new MoviesServices();\r\n        this.state = {\r\n            collection: null,\r\n            loading: true,\r\n            genresObj: {},\r\n            cast: [],\r\n            crew: [],\r\n            revenue: 0\r\n        }     \r\n    }\r\n    \r\n    componentWillMount() {\r\n        const {collectionId} = this.props;\r\n        this.getGenresName(); \r\n        this.loadCollection(collectionId); \r\n    }\r\n\r\n    loadCollection = (collectionId) => {\r\n        this.moviesServices.getCollection(collectionId)\r\n            .then((res) => { \r\n                if (res) {\r\n                    const movieIds = res.parts.map(part => part.id);\r\n                    this.onLoading(res);\r\n                    this.getCast(res);\r\n                    this.getMovieDetails(movieIds);\r\n                }\r\n            })\r\n    }\r\n\r\n    onLoading = (response) => {\r\n        this.setState({\r\n            collection: response,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n    getGenresName = () => {\r\n        this.moviesServices.getGenreList()\r\n            .then((res) => { \r\n                this.onLoadingGenres(res)\r\n            })\r\n    }\r\n\r\n    onLoadingGenres = (response) => {\r\n        this.setState({\r\n            genresObj: response\r\n        })\r\n    }\r\n\r\n    getMovieDetails = (ids) => {\r\n        const total = [];\r\n        ids.forEach(id => {\r\n            this.moviesServices.getMovieDetails(id)\r\n            .then((response) => {\r\n                if (response) {\r\n                    total.push(response.revenue);\r\n                    this.onLoadingDetails(total);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    onLoadingDetails = (total) => {\r\n        const totalRevenue = total.reduce((sum, current) => sum + current, 0)\r\n        this.setState({\r\n            revenue: totalRevenue\r\n        })\r\n    }\r\n\r\n    getCast = (collection) => {\r\n        const ids = collection.parts.map(part => part.id)\r\n        this.moviesServices.getCast(ids)\r\n        .then((res) => { \r\n            this.onLoadingCast(res.cast, res.crew);\r\n\r\n        })\r\n    }\r\n\r\n    onLoadingCast = (cast, crew) => {\r\n        this.setState({\r\n            cast,\r\n            crew\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {collection, loading, genresObj, cast, crew, revenue} = this.state;\r\n        const {history} = this.props;\r\n        const template = loading ? <Spinner/> : <CollectionDetails \r\n                                                    collection={collection} \r\n                                                    loading={loading} \r\n                                                    history={history} \r\n                                                    genre={genresObj}\r\n                                                    cast={cast}\r\n                                                    crew={crew}\r\n                                                    revenue={revenue}\r\n                                                />\r\n        \r\n        return(\r\n            <>{template}</>\r\n        )\r\n    }\r\n}","import React, {useState, useRef, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TogglerWrapper = styled.div`\r\n    width: fit-content;\r\n    border: 1px solid rgb(3, 37, 65);;\r\n    border-radius: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ToggleItem = styled.div`\r\n    padding: 0 15px;\r\n    color: ${props => props.isActive ? 'rgb(30, 213, 169)' : 'rgb(3, 37, 65)'};\r\n    position: relative;\r\n    z-index: 2;\r\n`;\r\n\r\nconst ToggleActive = styled.div`\r\n    background-color: rgb(3, 37, 65);\r\n    position: absolute;\r\n    height: 100%;\r\n    width: ${props => (props.width + 'px') || '100px'};\r\n    border-radius: 15px;\r\n    transition: all 200ms;\r\n\r\n    &.first-active {\r\n        left: 0;\r\n    }\r\n\r\n    &.second-active {\r\n        left: ${props => `calc(100% - ${props.width}px)`}\r\n    }\r\n`;\r\n\r\nconst Toggler = ({names, loadTrend, types}) => {\r\n    const buttonsArray = [\r\n        {\r\n            isActive: true,\r\n            text: names[0],\r\n            type: types[0]\r\n        },\r\n        {\r\n            isActive: false,\r\n            text: names[1],\r\n            type: types[1]\r\n        }\r\n    ]\r\n\r\n    const [buttons, setButtons] = useState(buttonsArray || []);\r\n    const [width, setWidth] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        if (buttons[0].isActive) {\r\n            setWidth(ref.current.clientWidth)\r\n        }\r\n    }, []);\r\n\r\n    let classNames = buttons[0].isActive ? 'first-active' : 'second-active';\r\n\r\n    const onToggle = (event, index) => {\r\n        setWidth(event.currentTarget.clientWidth);\r\n        \r\n        buttons.forEach(item => item.isActive = false);\r\n        buttons[index].isActive = true;\r\n        loadTrend(buttons[index].type)\r\n\r\n        setButtons(buttons);\r\n\r\n    }\r\n\r\n    const toggleItems = buttons.map((item, index) => {\r\n        const reference = item.isActive ? ref : null;\r\n        return (\r\n            <ToggleItem \r\n                isActive={item.isActive}\r\n                key={index}\r\n                onClick={(event) => onToggle(event, index)}\r\n                ref={reference}\r\n            >{item.text}</ToggleItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <TogglerWrapper>\r\n            {toggleItems}\r\n            <ToggleActive className={classNames} width={width}></ToggleActive>\r\n        </TogglerWrapper>\r\n    )\r\n}\r\n\r\nexport default Toggler;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Rate from '../../shared/rate';\r\nimport Toggler from '../../shared/toggler/toggler';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    max-width: 100%;\r\n    margin: 0 15px;\r\n    position: relative;\r\n    background-image: url('https://www.themoviedb.org/assets/2/v4/misc/trending-bg-39afc2a5f77e31d469b25c187814c0a2efef225494c038098d62317d923f8415.svg');\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 345px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 335px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    & i {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst SectionTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: ${props => props.size < 415 ? 'center' : 'baseline'};\r\n    flex-direction: ${props => props.size < 415 ? 'column' : 'row'};\r\n    margin: 0 15px 30px 5px;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px; \r\n    margin-bottom: 15px; \r\n`;\r\n\r\nconst TrendCardWrapper = styled.div`\r\n    width: 150px;\r\n    min-width: 150px;\r\n`;\r\n\r\nconst TrendCardImg = styled.img`\r\n    border-radius: 8px;\r\n    width: 150px;\r\n    height: 225px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardTitleWrapper = styled.div`\r\n    position: relative;\r\n    padding-top: 20px;\r\n`;\r\nconst TrendCardTitle = styled.div`\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardRelease = styled.div`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst InTrend = ({inTrend, MoviesService, loadTrend, size}) => {\r\n    const history = useHistory();\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    const trendItems = inTrend.map((item, index) => {\r\n        const {id, release_date, first_air_date, media_type, name, title, poster_path, vote_average} = item;\r\n        let src = poster_path ? ('//image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n        const date = moment(release_date || first_air_date).format('DD.MM.YYYY');\r\n        return (\r\n            <TrendCardWrapper key={index}>\r\n                <TrendCardImg \r\n                    src={src} \r\n                    alt={name || title} \r\n                    onClick={() => handleRouting(id, media_type)}\r\n                />\r\n                <TrendCardTitleWrapper>\r\n                    <TrendCardTitle\r\n                        onClick={() => handleRouting(id, media_type)}\r\n                    >\r\n                        {name || title} \r\n                    </TrendCardTitle>\r\n                    <TrendCardRelease>\r\n                        {date}\r\n                    </TrendCardRelease>\r\n                    <Rate \r\n                        vote={vote_average}\r\n                        small\r\n                    />\r\n                </TrendCardTitleWrapper>\r\n            </TrendCardWrapper>\r\n        )\r\n    })\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitleWrapper size={size}>\r\n                <SectionTitle>В тренде </SectionTitle>\r\n                <Toggler names={['Сегодня', 'На этой неделе']} loadTrend={loadTrend} types={['day', 'week']}/>\r\n            </SectionTitleWrapper>\r\n            <Carousel \r\n                renderArrow={myArrow}\r\n                itemsToScroll={size < 415 ? 2 : 5} \r\n                itemsToShow={size < 415 ? 2 : 7}\r\n                focusOnSelect={false}\r\n                ref={ref => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {trendItems}\r\n            </Carousel>\r\n            <PrevButton \r\n                onClick={() => carousel.slidePrev()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton \r\n                onClick={() => carousel.slideNext()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper> \r\n    )\r\n        \r\n}\r\n\r\nexport default InTrend;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {inTrendRequested, inTrendLoaded, inTrendError} from '../../actions/actions';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport {InTrend} from './components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport useWindowSize from '../shared/useWindowSize/useWindowSize';\r\n\r\nconst HomePageWrapper = styled.div`\r\n    width: 100%;\r\n    margin: ${props => props.size < 415 ? '0 auto 10%': '10% auto'};\r\n    background-color: #f1f2f6;\r\n    border-radius: ${props => props.size < 415 ? '0' : '10px'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: ${props => props.size < 415 ? '2.4em' : '3em'};\r\n    font-weight: 700;\r\n    padding: 10% 15px;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePageSubTitle = styled.div`\r\n    font-size: 0.7em;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePage = ({title, MoviesService, inTrendLoaded, inTrendError, inTrend, loading}) => {\r\n    const size = useWindowSize();\r\n    document.title = title;\r\n\r\n    const loadTrend = (time) => {\r\n        MoviesService.getInTrend(time)\r\n            .then((res) => inTrendLoaded(res.results))\r\n            .catch(error => inTrendError());\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTrend('day')\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <HomePageWrapper size={size}>\r\n                            Добро пожаловать в Movies Database.\r\n                            <HomePageSubTitle>\r\n                                Миллионы фильмов, сериалов и людей. Исследуйте сейчас.\r\n                            </HomePageSubTitle>\r\n                        </HomePageWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <InTrend \r\n                            inTrend={inTrend} \r\n                            MoviesService={MoviesService} \r\n                            loadTrend={loadTrend} \r\n                            size={size}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {inTrend, loading} = state.homePageReducer;\r\n    return {\r\n        inTrend,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(HomePage));","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 2.5em;\r\n    padding-left: 15px;\r\n`;\r\n\r\nconst MenuBurger = styled.div`\r\n    width: 35px;\r\n    height: 5px;\r\n    position: relative;\r\n    background-color: black;\r\n    margin-right: 15px;\r\n\r\n    &::after, &::before {\r\n        content: '';\r\n        width: 35px;\r\n        height: 5px;\r\n        position: absolute;\r\n        background-color: black;\r\n    }\r\n\r\n    &::before {\r\n        top: -10px;\r\n    }\r\n\r\n    &::after {\r\n        top: 10px;\r\n    }\r\n`;\r\n\r\nconst MenuList = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #f1dfd1;\r\n    background-image: linear-gradient(315deg, #f1dfd1 0%, #f6f0ea 74%);\r\n    z-index: 50;\r\n    transform: translate(150%, 0);\r\n    transition: transform 300ms;\r\n    overflow-y: hidden;\r\n\r\n    &.active {\r\n        transform: translate(0, 0);\r\n    }\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 30px;\r\n\r\n    & i {\r\n        font-size: 2.5em;\r\n    }\r\n`;\r\n\r\nconst NavList = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst NavListItem = styled.div`\r\n    padding-top: 10px;\r\n    font-size: 1.5em;\r\n    font-weight: 800;\r\n`;\r\n\r\nconst NavListSubItem = styled.div`\r\n    padding: 15px 0 0 15px;\r\n    font-size: 0.77em;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    transition: text-decoration 200ms;\r\n    \r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    & a {\r\n        color: rgba(33, 37, 41, 0.8); \r\n    }\r\n`;\r\n\r\nconst HeaderMobile = () => {\r\n    const [classNames, setClassNames] = useState('');\r\n\r\n    const toggleMenu = (clas, overflow) => {\r\n        setClassNames(clas);\r\n        document.getElementsByTagName('html')[0].style.overflow = overflow;\r\n        document.body.style.overflow = overflow;\r\n    }\r\n\r\n    return (\r\n        <NavBarWrapper>\r\n            <LogoWrapper>\r\n                <Link to='/movie-database'>Movies DB</Link>  \r\n            </LogoWrapper>\r\n            <MenuBurger onClick={() => toggleMenu('active', 'hidden')}/>\r\n            <MenuList className={classNames}>\r\n                <CloseButton \r\n                    onClick={() => toggleMenu('', 'visible')}\r\n                >\r\n                    <i className=\"fas fa-times\"></i>\r\n                </CloseButton>\r\n                <NavList>\r\n                    <NavListItem>\r\n                        Фильмы\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/popular/'>Популярные</Link>\r\n                            <span/>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                    <NavListItem>\r\n                    Сериалы\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/popular/'>Популярные</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/top-rated/'>Лучшие</Link> \r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                    <NavListItem>\r\n                        Люди\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/person/'>Популярные люди</Link> \r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                </NavList>\r\n            </MenuList>\r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default HeaderMobile;","import React, { Component } from 'react';\r\nimport Header from '../shared/header/header';\r\nimport {PopularPage, PlayingNowPage, TopRatedPage, UpcomingPage} from '../moviesPage';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport MovieDetails from '../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport ScrollToTop from '../shared/scrollToTop/scrollToTop';\r\nimport MoviesByKeyword from '../moviesByKeywordsPage/moviesByKeyword';\r\nimport FullCast from '../fullCastPage/castsPage';\r\nimport PersonBiography from '../personDetailsPage/personBiography';\r\nimport {TVPopularPage, OnTheAirPage, TVTopRatedPage, AiringTodayPage} from '../TVPages';\r\nimport PersonPage from '../popularPersonPage/popularPersonPage';\r\nimport CollectionPage from '../collectionPage/collectionPage';\r\nimport HomePage from '../homePage/homePage';\r\nimport HeaderMobile from '../shared/header/headerMob';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth});\r\n    }\r\n\r\n    render() {\r\n        const {width} = this.state;\r\n        const header = width < 415 ? <HeaderMobile/> : <Header/>;\r\n        return(\r\n            <Router>\r\n                {header}\r\n                <ScrollToTop>\r\n                    <Switch>\r\n                        <Redirect exact from='/' to='/movie-database'/>\r\n                        <Route exact path='/movie-database' render={\r\n                            () => {\r\n                                return <HomePage title='Movie Database'/>\r\n                            }\r\n                        }>\r\n                            \r\n                        </Route>\r\n                        <Route exact path='/person' render={\r\n                            ({history}) => {\r\n                                return <PersonPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/popular' render={\r\n                            ({history}) => {\r\n                                return <PopularPage history={history} title='Популярные фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/playing-now' render={\r\n                            ({history}) => {\r\n                                return <PlayingNowPage history={history} title='Сейчас смотрят фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/upcoming' render={\r\n                            ({history}) => {\r\n                                return <UpcomingPage history={history} title='Ожидамые фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TopRatedPage history={history} title='Лучшие фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/collection/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <CollectionPage collectionId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/playing-now/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/upcoming/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/popular/' render={\r\n                            ({history}) => {\r\n                                return <TVPopularPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/airing_today' render={\r\n                            ({history}) => {\r\n                                return <AiringTodayPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/on_the_air' render={\r\n                            ({history}) => {\r\n                                return <OnTheAirPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TVTopRatedPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/airing_today/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/on_the_air/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        \r\n                        <Route exact path=\"/movie/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route path=\"/keywords/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MoviesByKeyword keywordId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/person/:id\" render={\r\n                            ({match}) => {\r\n                                const {id} = match.params;\r\n                                return <PersonBiography personId = {id}/>\r\n                            }\r\n                        }/> \r\n                    </Switch>\r\n                </ScrollToTop>\r\n            </Router>\r\n        )\r\n    }\r\n}","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    popularMovies: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    error: false,\r\n    popularPage: 0, \r\n    playingNowMovies: [],\r\n    playingNowPage: 0,\r\n    upcomingMovies: [],\r\n    upcomingPage: 0,\r\n    topRatedMovies: [],\r\n    topRatedPage: 0,\r\n    totalPages: 0\r\n}\r\n\r\nconst moviePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                popularMovies: action.payload,\r\n                loading: false,\r\n                popularPage: state.popularPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_ERROR: \r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularMovies: [...state.popularMovies, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: action.payload,\r\n                loading: false,\r\n                playingNowPage: state.playingNowPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: [...state.playingNowMovies, ...action.payload],\r\n                loadingMore: false,\r\n                playingNowPage: state.playingNowPage + 1\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                upcomingMovies: action.payload,\r\n                loading: false,\r\n                upcomingPage: state.upcomingPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                upcomingMovies: [...state.upcomingMovies, ...action.payload],\r\n                loadingMore: false,\r\n                upcomingPage: state.upcomingPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                topRatedMovies: action.payload,\r\n                loading: false,\r\n                topRatedPage: state.topRatedPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedMovies: [...state.topRatedMovies, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviePageReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    popularTv: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    popularPage: 0,\r\n    error: false,\r\n    airingTodayTv: [],\r\n    airingTodayPage: 0,\r\n    onTheAirTv: [],\r\n    onTheAirPage: 0,\r\n    topRatedTv: [],\r\n    topRatedPage: 0\r\n}\r\n\r\nconst tvPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                popularTv: action.payload,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.POPULAR_TV_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularTv: [...state.popularTv, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                airingTodayTv: action.payload,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                airingTodayTv: [...state.airingTodayTv, ...action.payload],\r\n                loadingMore: false,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                onTheAirTv: action.payload,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                onTheAirTv: [...state.onTheAirTv, ...action.payload],\r\n                loadingMore: false,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topRatedTv: action.payload,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedTv: [...state.topRatedTv, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }   \r\n}\r\n\r\nexport default tvPageReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    person: [],\r\n    loading: true,\r\n    page: 1,\r\n    error: false,\r\n    totalPages: 0\r\n}\r\n\r\nconst popularPersonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    \r\n        case actionTypes.POPULAR_PERSON_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_PERSON_LOADED: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                totalPages: action.payload.totalPages,\r\n                page: action.payload.page\r\n            }\r\n        case actionTypes.POPULAR_PERSON_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default popularPersonReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    movieDetails: [],\r\n    loading: true,\r\n    error: false,\r\n    casts: [],\r\n    loadingCast: true,\r\n    keywords: null,\r\n    loadingKeywords: true,\r\n    modalWindow: false,\r\n    video: null,\r\n    socialLink: {},\r\n    collection: {},\r\n    recommendations: []\r\n}\r\n\r\nconst movieDetailsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.MOVIE_DETAILS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movieDetails: action.payload\r\n            }\r\n        case actionTypes.CAST_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingCast: true\r\n            }\r\n        case actionTypes.CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                casts: action.payload,\r\n                loadingCast: false\r\n            }\r\n        case actionTypes.KEYWORDS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: true\r\n            }\r\n        case actionTypes.KEYWORDS_LOADED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: false,\r\n                keywords: action.payload\r\n            }\r\n        case actionTypes.MODAL_WINDOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                modalWindow: !state.modalWindow\r\n            }\r\n        case actionTypes.VIDEO_LOADED:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n        case actionTypes.SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.RECOMMENDATIONS_LOADED:\r\n            return {\r\n                ...state,\r\n                recommendations: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default movieDetailsReducer;","import {actionTypes} from '../../actions';\r\n\r\nconst initialState = {\r\n    inTrend: [],\r\n    loading: true,\r\n    error: false,\r\n}\r\n\r\nconst homePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.IN_TREND_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.IN_TREND_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                inTrend: action.payload\r\n            }\r\n        case actionTypes.IN_TREND_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default homePageReducer;","import { combineReducers } from 'redux'\r\nimport moviePageReducer from './reducers/moviePageReducers';\r\nimport tvPageReducer from './reducers/tvPageReducer';\r\nimport popularPersonReducer from './reducers/popularPersonReducer';\r\nimport movieDetailsReducer from './reducers/movieDetailsReducer';\r\nimport homePageReducer from './reducers/homePageReducer';\r\n\r\nexport default combineReducers({\r\n    moviePageReducer,\r\n    tvPageReducer,\r\n    popularPersonReducer,\r\n    movieDetailsReducer,\r\n    homePageReducer\r\n})","import {createStore} from 'redux';\r\nimport combineReducers from './reducers/combineReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(combineReducers, composeWithDevTools());\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {popularMoviesError} from '../../actions/actions';\r\nimport {connect} from 'react-redux';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\n\r\nclass ErrorBoundry extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n      }\r\n    \r\n    //   static getDerivedStateFromError(error) {\r\n    //     // Update state so the next render will show the fallback UI.\r\n    //     return { hasError: true };\r\n    //   }\r\n    \r\n      componentDidCatch() {\r\n        // You can also log the error to an error reporting service\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n          // You can render any custom fallback UI\r\n          return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children; \r\n      }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundry);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MoviesServices from './services/services';\nimport {Provider} from 'react-redux';\nimport MoviesServicesContext from './components/moviesContext/moviesContext';\nimport store from './store';\nimport ErrorBoundry from './components/errorComponent/errorComponent';\n\nconst moviesServices = new MoviesServices();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<MoviesServicesContext.Provider value={moviesServices}>\n\t\t\t\t\t<App/>\n\t\t\t\t</MoviesServicesContext.Provider>\n\t\t\t</ErrorBoundry>\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}