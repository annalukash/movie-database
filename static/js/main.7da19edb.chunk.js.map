{"version":3,"sources":["components/shared/header/header.js","components/shared/spinner/spinner.js","components/shared/rate.js","components/shared/spinner/loadMoreSpinner.js","components/shared/useWindowSize/useWindowSize.js","components/moviesPage/components/movieList.js","components/moviesContext/moviesContext.js","components/hoc/withMoviesService.js","actions/actionsMoviesTVPage/actionTypesMoviesTVPage.js","actions/actionsMoviesTVPage/actionMoviesTVPage.js","components/moviesPage/popularPage.js","components/moviesPage/playingNowPage.js","components/moviesPage/topRatedPage.js","components/moviesPage/upcomingPage.js","components/moviesPage/components/movieDetailsPage/components/casts.js","components/shared/youtubeVideo/youtubeVideo.js","components/moviesPage/components/movieDetailsPage/components/modalWindow.js","components/moviesPage/components/movieDetailsPage/components/details.js","components/moviesPage/components/movieDetailsPage/components/originalDetails.js","components/moviesPage/components/movieDetailsPage/components/keywords.js","components/moviesPage/components/movieDetailsPage/components/collection.js","components/moviesPage/components/movieDetailsPage/components/recommendations.js","components/moviesPage/components/movieDetailsPage/components/mobileComponents/modalWindowMob.js","components/moviesPage/components/movieDetailsPage/components/mobileComponents/detailsMob.js","actions/actionsMovieDetailsPage/actionTypesMovieDetailsPage.js","actions/actionsMovieDetailsPage/actionMovieDetailsPage.js","components/moviesPage/components/movieDetailsPage/movieDetails.js","components/shared/scrollToTop/scrollToTop.js","services/services.js","components/moviesByKeywordsPage/components/movieListByKeywords.js","components/moviesByKeywordsPage/moviesByKeyword.js","components/fullCastPage/components/fullCastList.js","components/fullCastPage/castsPage.js","components/personDetailsPage/components/personDetailsCasts.js","components/personDetailsPage/components/personDetailsCrew.js","components/personDetailsPage/components/crewByDepartments.js","components/personDetailsPage/components/personDetails.js","components/personDetailsPage/components/componentsMobile/personDetailsMob.js","actions/actionsPersonDetailsPage/actionTypesPersonDetailsPage.js","components/personDetailsPage/personBiography.js","actions/actionsPersonDetailsPage/actionPersonDetailsPage.js","components/TVPages/tvPopularPage.js","components/TVPages/airingTodayPage.js","components/TVPages/tvTopRatedPage.js","components/TVPages/onTheAirPage.js","components/popularPersonPage/components/personList.js","actions/actionsPopularPersonPage/actionTypesPopularPersonPage.js","components/popularPersonPage/popularPersonPage.js","actions/actionsPopularPersonPage/actionPopularPersonPage.js","components/collectionPage/components/collectionCast.js","components/collectionPage/components/collectionDetails.js","components/collectionPage/components/collectionDetailsMob.js","actions/actionsCollectionPage/actionTypesCollectionPage.js","components/collectionPage/collectionPage.js","actions/actionsCollectionPage/actionCollectionPage.js","actions/actionsHomePage/actionTypeHomePage.js","components/shared/toggler/toggler.js","components/homePage/components/inTrend.js","components/homePage/homePage.js","actions/actionsHomePage/actionHomePage.js","components/shared/header/headerMob.js","components/app/app.js","reducers/reducers/moviePageReducers.js","reducers/reducers/tvPageReducer.js","reducers/reducers/popularPersonReducer.js","reducers/reducers/movieDetailsReducer.js","reducers/reducers/homePageReducer.js","reducers/reducers/collectionPageReducer.js","reducers/reducers/personDetailsPageReducer.js","reducers/combineReducers.js","store.js","components/errorComponent/errorComponent.js","index.js"],"names":["NavBarWrapper","styled","div","LogoWrapper","LinkWrapper","NavCollapseWrapper","Header","Navbar","expand","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Spinner","RateWrapper","props","small","static","Rate","vote","isStatic","voteRound","Math","round","value","background","backgroundPadding","text","styles","buildStyles","rotation","strokeLinecap","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","LoadMoreSpinner","useWindowSize","useState","width","setWindowSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","ContainerWrapper","size","PosterWrapper","MovieDetailsWrapper","TitleWrapper","ReleaseWrapper","Poster","img","LoadMoreButton","button","MovieList","movies","loading","loadingMore","url","getMovies","history","movieItems","map","item","index","poster_path","release_date","vote_average","name","first_air_date","src","process","Col","key","onClick","push","alt","length","moment","format","Container","Row","loadSpinner","showButton","MoviesServicesContext","React","createContext","WithMoviesService","Wrapped","Consumer","MoviesService","POPULAR_MOVIES_REQUESTED","POPULAR_MOVIES_LOADED","POPULAR_MOVIES_ERROR","POPULAR_MOVIES_MORE_REQUESTED","POPULAR_MOVIES_MORE_LOADED","POPULAR_MOVIES_MORE_ERROR","PLAYING_NOW_MOVIES_REQUESTED","PLAYING_NOW_MOVIES_LOADED","PLAYING_NOW_MOVIES_MORE_REQUESTED","PLAYING_NOW_MOVIES_MORE_LOADED","UPCOMING_MOVIES_REQUESTED","UPCOMING_MOVIES_LOADED","UPCOMING_MOVIES_MORE_REQUESTED","UPCOMING_MOVIES_MORE_LOADED","TOP_RATED_MOVIES_REQUESTED","TOP_RATED_MOVIES_LOADED","TOP_RATED_MOVIES_MORE_REQUESTED","TOP_RATED_MOVIES_MORE_LOADED","POPULAR_TV_REQUESTED","POPULAR_TV_LOADED","POPULAR_TV_ERROR","POPULAR_TV_MORE_REQUESTED","POPULAR_TV_MORE_LOADED","AIRING_TODAY_TV_REQUESTED","AIRING_TODAY_TV_LOADED","AIRING_TODAY_TV_MORE_REQUESTED","AIRING_TODAY_TV_MORE_LOADED","ON_THE_AIR_TV_REQUESTED","ON_THE_AIR_TV_LOADED","ON_THE_AIR_TV_MORE_REQUESTED","ON_THE_AIR_TV_MORE_LOADED","TOP_RATED_TV_REQUESTED","TOP_RATED_TV_LOADED","TOP_RATED_TV_MORE_REQUESTED","TOP_RATED_TV_MORE_LOADED","popularMoviesError","type","actionTypes","popularTvError","PopularPage","loadMovies","success","page","getPopular","then","res","results","catch","error","loadMoreMovies","popularMoviesMoreLoaded","popularMoviesMoreRequested","document","this","popularMoviesRequested","popularMoviesLoaded","location","pathname","Component","mapDispatchToProps","payload","connect","state","moviePageReducer","popularMovies","popularPage","PlayingNowPage","getNowPlaying","playingNowMoviesMoreLoaded","playingNowMoviesMoreRequested","playingNowMoviesRequested","playingNowMoviesLoaded","playingNowMovies","playingNowPage","TopRatedPage","getTopRated","topRatedMoviesMoreRequested","topRatedMoviesMoreLoaded","topRatedMoviesRequested","topRatedMoviesLoaded","topRatedMovies","topRatedPage","UpcomingPage","getUpcoming","upcomingMoviesMoreLoaded","upcomingMoviesMoreRequested","upcomingMoviesRequested","upcomingMoviesLoaded","upcomingMovies","upcomingPage","CarouselWrapper","CastTitle","CastItemWrapper","CastImg","CastName","CastCharacter","PrevButton","NextButton","FullCastWrapper","Cast","carousel","casts","onGoPersonBio","castItem","cast","sort","a","b","order","filter","profile_path","character","renderArrow","isEdge","style","display","itemsToScroll","itemsToShow","focusOnSelect","ref","renderPagination","pages","activePage","slidePrev","slideNext","includes","Trailer","resultItem","video","height","frameBorder","allowFullScreen","controls","Backdrop","TrailerBodyWrapper","TrailerTitleWraper","TrailerCloseButton","ModalWindow","onCloseModal","BackgroundWrapper","backdrop","ImgWrapper","Title","Year","span","DetailsList","Vote","ActivityList","ul","TrailerWrapper","TrailerTitle","Overview","TagLine","CreatorNameWrapper","TvCreator","creator","Details","details","movieId","onOpenModal","modalWindow","keywords","socialLink","recommendations","showCollection","showRecommendations","genres","runtime","tagline","overview","episode_run_time","created_by","genreToString","genre","join","durations","duration","replace","modal","showTrailer","releaseYear","showOverview","dateGenreDurationString","backdrop_path","belongs_to_collection","keyword","LinkIconWrapper","Link","movie","SocialLinkWrrapper","facebook","twitter","instagram","TvNetwork","networks","networkItem","find","network","logo","logo_path","Overlay","popover","Popover","Content","OverlayTrigger","placement","overlay","OriginalDetails","original_title","status","budget","revenue","original_language","original_name","homepage","facebook_id","instagram_id","twitter_id","nf","Intl","NumberFormat","movieBudget","movieRevenue","tvNet","href","target","rel","homePage","overlayFacebook","overlayTwitter","overlayInstagram","overlayHomePage","statusMovie","KeywordsWrapper","KeywordItemWrapper","Keywords","keywordsItem","keywordItem","CollectionWrapper","CollectionContent","bg","CollectionName","CollectionDescription","CollectionButton","Collection","collection","parts","path","collectionIncludes","hasOwnProperty","part","RecommendationCardWrapper","RecommendationCardImgWrapper","RecommendationCardRelease","RecommendationCardImg","RecommendationCardTitleWrapper","RecommendationCardTitle","RecommendationCardRate","SectionTitle","Recommendation","castRequested","movieDetailsRequested","getDetails","getCast","getKeywords","getVideos","getSocailLink","getRecommendations","recommendationItems","releaseDate","getTVDetails","getTVCasts","getTVKeywords","getTVVideos","getTVExternalIds","getTVRecommendations","getMovieDetails","getMovieExternalIds","getMovieRecommendations","handleRouting","ModalWindowMobile","GlobalWrapper","border","GenreWrapper","GenreList","OverviewWrapper","CreatorWrapper","Creator","DetailsMobile","creatorId","separator","showCast","MOVIE_DETAILS_REQUESTED","MOVIE_DETAILS_LOADED","MOVIE_DETAILS_ERROR","CAST_REQUESTED","CAST_LOADED","KEYWORDS_REQUESTED","KEYWORDS_LOADED","MODAL_WINDOW_TOGGLE","VIDEO_LOADED","SOCIAL_LINK_LOADED","RECOMMENDATIONS_LOADED","MOVIE_DETAILS_COLLECTION_LOADED","movieDetailsLoaded","movieDetailsError","castLoaded","MovieDetails","request","response","getCollectionDetails","keywordsLoaded","videoLoaded","socialLinkLoaded","recommendationsLoaded","movieDetailsCollectionLoaded","getCollection","isBelongToCollection","isRecommendation","keywordsRequested","ratingRequested","loadingCast","loadingKeywords","modalWindowToggle","movieDetailsReducer","movieDetails","ScrollToTop","prevProps","scrollTo","children","withRouter","MoviesServices","getResource","fetch","_baseApi","_apiKey","_apiLanguage","json","status_code","getMovieByKeyword","keywordId","getKeywordName","getPersonBiography","personId","biography","combinedMoviesTv","tvId","getTVPopular","getTVAiringToday","getTVTopRated","getTVOnTheAir","getPopularPerson","collectionId","getGenreList","getPersonExternalIds","getInTrend","time","getMovieRating","getTVRating","MovieCardWrapper","MovieCardImg","MovieCardContent","MovieCardTitle","MovieCardReleaseDate","MovieCardDescription","HeaderWrapper","KeywordName","MovieQuantity","MovieListByKeywords","totalResults","keywordName","moviesItem","film","MovieListWrapper","ButtonWrapper","MoviesByKeyword","onLoadingMovies","setState","totalPages","onToogleLoading","moviesServices","total_results","total_pages","onLoadingKeywordName","CastNumber","CastItemImg","CastNameWrapper","CastContent","DepartmentTitle","Actors","Crew","crew","CrewDepartment","department","job","MovieName","MovieReleaseYear","MoviePosterImg","MovieContent","ButtonBack","FullCast","onGoBack","goBack","spinnerActors","spinnerCrew","MovieListItemWrapper","hasBorder","ReleaseDate","MovieTitleWrapper","MovieTitle","LikeCharacter","Character","MoviePreviewButton","CircleHover","show","PopoverImgWrapper","PopoverPoster","PopoverContentWrapper","PopoverTitleWrapper","PopoverTitle","PopoverDescription","PopoverRate","DepartmentListTitle","MovieListContent","FilterWrapper","ClearButton","HistoryItem","date","useHistory","useRef","setShow","setTarget","handleClick","event","rate","toFixed","tvEpisodes","episode_count","container","current","rootClose","onHide","media_type","textEllipsis","yearFormatter","PersonDetailsCasts","setCastItem","filterSelected","setFilterSelected","noDateCasts","sortedCast","previous","Date","allCasts","filteredByMovieType","filteredByTVType","movieQuantity","tvQuantity","arr","next","fullDateToYear","data","onSelect","content","clearButton","DropdownButton","Dropdown","Item","PersonDetailsCrew","noDateCrew","sortedCrew","Department","CrewByDepartments","filteredCrew","production","writing","art","camera","makeUp","crews","directing","editing","lighting","sound","visualEffects","DescriptionWrapper","BioWrapper","BioContent","mainHeight","childRef","PersonalInfo","PersonalInfoItemTitle","PersonalInfoItemSubtitle","AlsoKnowWrapper","ReadMoreButton","FamousCast","popularity","PersonDetails","person","isOpen","setOpen","elementHeight","setElementHeight","classNames","element","clientHeight","getElementHeight","gender","alsoKnow","also_known_as","birthday","ageAlive","deathday","diff","ageDead","dateOfDeath","acting","filmCrew","famousCast","known_for_department","place_of_birth","NameWrapper","SectionSubTitle","BiographyWrapper","PersonDetailsMobile","personGender","personBirthday","personBiography","PERSON_BIOGRAPHY_REQUESTED","PERSON_BIOGRAPHY_LOADED","PERSON_BIOGRAPHY_ERROR","PERSON_SOCIAL_LINK_REQUESTED","PERSON_SOCIAL_LINK_LOADED","PERSON_SOCIAL_LINK_ERROR","PersonBiography","getBiography","personBiographyLoaded","personBiographyError","getPersonSocailLink","personSocialLinkLoaded","personSocialLinkError","personBiographyRequested","personSocialLinkRequested","socialLinkLoading","personDetailsPageReducer","TVPopularPage","loadTV","loadMoreTv","popularTvMoreRequested","popularTvMoreLoaded","tv","popularTvRequested","popularTvLoaded","tvPageReducer","popularTv","AiringTodayPage","loadMoreTV","airingTodayTvMoreRequested","airingTodayTvMoreLoaded","airingTodayTvRequested","airingTodayTvLoaded","airingTodayTv","airingTodayPage","TVTopRatedPage","topRatedTvTvMoreRequested","topRatedTvTvMoreLoaded","topRatedTvRequested","topRatedTvTvLoaded","topRatedTv","OnTheAirPage","onTheAirTvMoreRequested","onTheAirTvMoreLoaded","onTheAirTvRequested","onTheAirTvLoaded","onTheAirTv","onTheAirPage","PersonItemWrapper","PersonImg","PersonNameWrapper","PersonName","PersonCast","PersonList","getPerson","personItem","known_for","castToString","Pagination","count","boundaryCount","onChange","POPULAR_PERSON_REQUESTED","POPULAR_PERSON_LOADED","POPULAR_PERSON_ERROR","PersonPage","onServiceRequest","popularPersonError","popularPersonLoaded","search","loadPerson","loadMorePerson","popularPersonRequested","popularPersonReducer","large","CastImgWrapper","Section","CollectionCast","onGoToPersonDetails","onGoToMovieDetails","sm","crewItem","partItem","DetailsTitleWrapper","DetailsContentWrapper","CollectionDetails","averageVote","reduce","sum","movieOverview","genresList","Object","keys","forEach","genre_ids","uniquesToString","array","indexOf","CollectionDetailsMobile","COLLECTION_REQUESTED","COLLECTION_LOADED","COLLECTION_ERROR","GENRES_REQUESTED","GENRES_LOADED","COLLECTION_MOVIE_DETAILS_LOADED","COLLECTION_CAST_LOADED","CollectionPage","loadCollection","collectionLoaded","collectionError","movieIds","getGenresName","genresLoaded","ids","collectionMovieDetailsLoaded","total","collectionCastLoaded","collectionRequested","genresRequested","genresLoading","collectionPageReducer","IN_TREND_REQUESTED","IN_TREND_LOADED","IN_TREND_ERROR","TogglerWrapper","ToggleItem","isActive","ToggleActive","Toggler","names","loadTrend","types","buttonsArray","buttons","setButtons","setWidth","clientWidth","toggleItems","reference","currentTarget","onToggle","SectionTitleWrapper","TrendCardWrapper","TrendCardImg","TrendCardTitleWrapper","TrendCardTitle","TrendCardRelease","InTrend","inTrend","trendItems","HomePageWrapper","HomePageSubTitle","inTrendRequested","inTrendLoaded","inTrendError","homePageReducer","MenuBurger","MenuList","CloseButton","NavList","NavListItem","NavListSubItem","HeaderMobile","setClassNames","toggleMenu","clas","overflow","getElementsByTagName","body","App","updateWindowDimensions","header","exact","from","render","match","params","initialState","action","combineReducers","store","createStore","composeWithDevTools","ErrorBoundry","hasError","ReactDOM","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.7da19edb.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    padding: 5px 15px; \r\n\r\n    &:hover{\r\n        background-color: rgb(209, 220, 240);\r\n    }\r\n`;\r\n\r\nconst NavCollapseWrapper = styled.div`\r\n    &.dropdown-menu {\r\n        min-width: 11rem;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return(\r\n        <NavBarWrapper> \r\n            <Navbar expand=\"lg\">\r\n                <Navbar.Brand>\r\n                    <LogoWrapper>\r\n                        <Link to='/movie-database'> Movies DB</Link>   \r\n                    </LogoWrapper>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Фильмы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Сериалы\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/popular/'>Популярные</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                                </LinkWrapper>\r\n                                <LinkWrapper>\r\n                                    <Link to='/tv/top-rated/'>Лучшие</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n                <NavCollapseWrapper>\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown title=\"Люди\" id=\"basic-nav-dropdown\">\r\n                                <LinkWrapper>\r\n                                    <Link to='/person/'>Популярные люди</Link>\r\n                                </LinkWrapper>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </NavCollapseWrapper>\r\n            </Navbar> \r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className='spinner'>\r\n            <div className=\"loadingio-spinner-pulse-4q9a11w5c1h\">\r\n                <div className=\"ldio-8zfoqlwj9ri\">\r\n                    <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Spinner;\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\n\r\n\r\nconst RateWrapper = styled.div`\r\n    width: ${props => props.small ? '44px' : '65px'};\r\n    height: ${props => props.small ? '44px' : '65px'};\r\n    position: ${props => (props.small && props.static) ? 'static' : props.small ? 'absolute' : 'static'};\r\n    top: -22px;\r\n    left: 10px;\r\n\r\n    .CircularProgressbar-text {\r\n        dominant-baseline: middle;\r\n        text-anchor: middle;\r\n        font-size: 28px;\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Rate = ({vote, small, isStatic}) => {\r\n    const voteRound = Math.round(vote) * 10 + '%';\r\n    return (\r\n        <RateWrapper small={small} static={isStatic}>\r\n            <CircularProgressbar\r\n                value={vote * 10}\r\n                background = {true}\r\n                backgroundPadding = {5}\r\n                text={`${!vote ? 'NR' : voteRound}`}\r\n                styles={buildStyles({\r\n                    rotation: 0,\r\n                    strokeLinecap: 'butt',\r\n                    pathTransitionDuration: 0.5,\r\n                    pathColor: vote > 7 ? '#21d07a' : vote < 3 ? '#db2360' : `#d2d531`,\r\n                    textColor: '#fff',\r\n                    trailColor: '#423d0f',\r\n                    backgroundColor: '#000', \r\n                })}\r\n            />\r\n        </RateWrapper>\r\n    )\r\n}\r\n\r\nexport default Rate;","import React from 'react';\r\nimport './loadMoreSpinner.css';\r\n\r\nconst LoadMoreSpinner = () => {\r\n    return(\r\n        <div className=\"loadingio-spinner-eclipse-31fnf915wjs\">\r\n            <div className=\"ldio-0fm56yckxb98\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default LoadMoreSpinner;\r\n","import {useEffect, useState} from 'react';\r\n\r\nconst useWindowSize = () => {\r\n    const [width, setWindowSize] = useState(null);\r\n  \r\n    useEffect(() => {\r\n        const handleResize = () => setWindowSize(window.innerWidth);\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        \r\n        handleResize();\r\n\r\n        return () => window.removeEventListener(\"resize\", handleResize);\r\n    }, []);\r\n  \r\n    return width;\r\n}\r\n\r\nexport default useWindowSize;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport Rate from '../../shared/rate';\r\nimport moment from 'moment';\r\nimport LoadMoreSpinner from '../../shared/spinner/loadMoreSpinner';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\n\r\nconst ContainerWrapper = styled.div`\r\n    .col {\r\n        max-height: ${props => props.size < 415 ? '275px' : '393px'};\r\n    }\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    border: 1px solid rgb(227, 227, 227);\r\n    border-radius: 15px;\r\n    box-shadow: 0px 5px 8px 0px rgba(0, 0, 0, 0.1);\r\n    max-width: ${props => props.size < 415 ? '150px' : '206px'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieDetailsWrapper = styled.div`\r\n    background-color:rgb(255, 255, 255);\r\n    border-radius: 15px;\r\n    position: relative;\r\n    padding: ${props => props.size < 415 ? '22px 10px 5px' : '22px 10px 15px'};\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n    width: 100%;\r\n\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-family: 'Source Sans Pro';\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ReleaseWrapper = styled(TitleWrapper)`\r\n    color: rgba(0, 0, 0, 0.6);\r\n    font-weight: 400;\r\n`;\r\n\r\nconst Poster = styled.img`\r\n    width: 100%;\r\n    border-top-right-radius: 15px;\r\n    border-top-left-radius: 15px;\r\n    height: ${props => props.size < 415 ? '70%' : '80%' };\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    width: 100%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    margin-bottom: 20px;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst MovieList = ({movies, loading, loadingMore, url, getMovies, history}) => {\r\n    const size = useWindowSize();\r\n    const movieItems = movies.map((item, index) => {\r\n        const {title, poster_path, release_date, vote_average, id, name, first_air_date} = item;\r\n        const src = poster_path ? ('https://image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n\r\n        return(\r\n            <Col key={index} className=\"col-xl-3 col-6 col-sm-6 d-flex justify-content-center mb-4 px-lg-2 px-0\">\r\n                <PosterWrapper\r\n                    size={size}\r\n                    onClick={() => {\r\n                        history.push(`${url}${id}`)\r\n                    }}\r\n                >\r\n                    <Poster src={src} alt={title || name} size={size}/> \r\n                    <MovieDetailsWrapper size={size}>\r\n                        <TitleWrapper>\r\n                            <EllipsisText text={title || name} length={size < 415 ? 15 : 20}/>    \r\n                        </TitleWrapper>\r\n                        <ReleaseWrapper>\r\n                            {moment(release_date || first_air_date).format('DD.MM.YYYY')}\r\n                        </ReleaseWrapper>\r\n                        <Rate \r\n                            vote={vote_average}\r\n                            small\r\n                        />  \r\n                    </MovieDetailsWrapper>                   \r\n                </PosterWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    const showButton = () => {\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n    \r\n        return (\r\n            <LoadMoreButton\r\n                onClick={() => getMovies()}\r\n            >\r\n                {loadSpinner}\r\n            </LoadMoreButton>\r\n        )\r\n    }\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return(\r\n            <ContainerWrapper size={size}>\r\n                <Container className=\"mt-lg-5 mt-3 px-0\">\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        {movieItems}\r\n                    </Row>\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                        <Col>\r\n                            {showButton()}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </ContainerWrapper>\r\n        )    \r\n    }  \r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst MoviesServicesContext = React.createContext();\r\n\r\nexport default MoviesServicesContext;","import React from 'react';\r\nimport MoviesServicesContext from '../moviesContext/moviesContext';\r\n\r\nconst WithMoviesService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return(\r\n            <MoviesServicesContext.Consumer>\r\n                {\r\n                    (MoviesService) => {\r\n                        return <Wrapped {...props} MoviesService={MoviesService}/>\r\n                    }\r\n                }\r\n            </MoviesServicesContext.Consumer>\r\n        )\r\n    }\r\n};\r\n\r\nexport default WithMoviesService;","export const POPULAR_MOVIES_REQUESTED = 'POPULAR_MOVIES_REQUESTED';\r\nexport const POPULAR_MOVIES_LOADED = 'POPULAR_MOVIES_LOADED';\r\nexport const POPULAR_MOVIES_ERROR = 'POPULAR_MOVIES_ERROR';\r\nexport const POPULAR_MOVIES_MORE_REQUESTED = 'POPULAR_MOVIES_MORE_REQUESTED';\r\nexport const POPULAR_MOVIES_MORE_LOADED = 'POPULAR_MOVIES_MORE_LOADED';\r\nexport const POPULAR_MOVIES_MORE_ERROR = 'POPULAR_MOVIES_MORE_ERROR';\r\nexport const PLAYING_NOW_MOVIES_REQUESTED = 'PLAYING_NOW_MOVIES_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_LOADED = 'PLAYING_NOW_MOVIES_LOADED';\r\nexport const PLAYING_NOW_MOVIES_MORE_REQUESTED = 'PLAYING_NOW_MOVIES_MORE_REQUESTED';\r\nexport const PLAYING_NOW_MOVIES_MORE_LOADED = 'PLAYING_NOW_MOVIES_MORE_LOADED';\r\nexport const UPCOMING_MOVIES_REQUESTED = 'UPCOMING_MOVIES_REQUESTED';\r\nexport const UPCOMING_MOVIES_LOADED = 'UPCOMING_MOVIES_LOADED';\r\nexport const UPCOMING_MOVIES_MORE_REQUESTED = 'UPCOMING_MOVIES_MORE_REQUESTED';\r\nexport const UPCOMING_MOVIES_MORE_LOADED = 'UPCOMING_MOVIES_MORE_LOADED';\r\nexport const TOP_RATED_MOVIES_REQUESTED = 'TOP_RATED_MOVIES_REQUESTED';\r\nexport const TOP_RATED_MOVIES_LOADED = 'TOP_RATED_MOVIES_LOADED';\r\nexport const TOP_RATED_MOVIES_MORE_REQUESTED = 'TOP_RATED_MOVIES_MORE_REQUESTED';\r\nexport const TOP_RATED_MOVIES_MORE_LOADED = 'TOP_RATED_MOVIES_MORE_LOADED';\r\n\r\nexport const POPULAR_TV_REQUESTED = 'POPULAR_TV_REQUESTED';\r\nexport const POPULAR_TV_LOADED = 'POPULAR_TV_LOADED';\r\nexport const POPULAR_TV_ERROR = 'POPULAR_TV_ERROR';\r\nexport const POPULAR_TV_MORE_REQUESTED = 'POPULAR_TV_MORE_REQUESTED';\r\nexport const POPULAR_TV_MORE_LOADED = 'POPULAR_TV_MORE_LOADED';\r\nexport const AIRING_TODAY_TV_REQUESTED = 'AIRING_TODAY_TV_REQUESTED';\r\nexport const AIRING_TODAY_TV_LOADED = 'AIRING_TODAY_TV_LOADED';\r\nexport const AIRING_TODAY_TV_MORE_REQUESTED = 'AIRING_TODAY_TV_MORE_REQUESTED';\r\nexport const AIRING_TODAY_TV_MORE_LOADED = 'AIRING_TODAY_TV_MORE_LOADED';\r\nexport const ON_THE_AIR_TV_REQUESTED = 'ON_THE_AIR_TV_REQUESTED';\r\nexport const ON_THE_AIR_TV_LOADED = 'ON_THE_AIR_TV_LOADED';\r\nexport const ON_THE_AIR_TV_MORE_REQUESTED = 'ON_THE_AIR_TV_MORE_REQUESTED';\r\nexport const ON_THE_AIR_TV_MORE_LOADED = 'ON_THE_AIR_TV_MORE_LOADED';\r\nexport const TOP_RATED_TV_REQUESTED = 'TOP_RATED_TV_REQUESTED';\r\nexport const TOP_RATED_TV_LOADED = 'TOP_RATED_TV_LOADED';\r\nexport const TOP_RATED_TV_MORE_REQUESTED = 'TOP_RATED_TV_MORE_REQUESTED';\r\nexport const TOP_RATED_TV_MORE_LOADED = 'TOP_RATED_TV_MORE_LOADED';","import * as actionTypes from './actionTypesMoviesTVPage';\r\n\r\nconst popularMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularMoviesError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_ERROR\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst playingNowMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst upcomingMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.UPCOMING_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedMoviesMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_MOVIES_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularTvError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_ERROR\r\n    }\r\n}\r\n\r\nconst popularTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst airingTodayTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.AIRING_TODAY_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst onTheAirTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.ON_THE_AIR_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreRequested = () => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_REQUESTED\r\n    }\r\n}\r\n\r\nconst topRatedTvTvMoreLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.TOP_RATED_TV_MORE_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport {\r\n    popularMoviesRequested,\r\n    popularMoviesLoaded,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded,\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvError,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded\r\n}","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularMoviesRequested, popularMoviesLoaded, popularMoviesError, popularMoviesMoreLoaded, popularMoviesMoreRequested} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\nclass PopularPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.popularMoviesRequested();\r\n            this.loadMovies(this.props.popularMoviesLoaded);  \r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {popularMoviesMoreLoaded, popularMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        popularMoviesMoreRequested();\r\n        this.loadMovies(popularMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, history, loadingMore} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularMovies, loading, loadingMore, popularPage}  = state.moviePageReducer;\r\n    return {\r\n        movies: popularMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: popularPage,\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesLoaded,\r\n    popularMoviesRequested,\r\n    popularMoviesError,\r\n    popularMoviesMoreRequested,\r\n    popularMoviesMoreLoaded\r\n};\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PopularPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {playingNowMoviesRequested, playingNowMoviesLoaded, popularMoviesError, playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\nclass PlayingNowPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if(!this.props.movies.length) {\r\n            this.props.playingNowMoviesRequested();\r\n            this.loadMovies(this.props.playingNowMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getNowPlaying(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {playingNowMoviesMoreLoaded, playingNowMoviesMoreRequested, page} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        playingNowMoviesMoreRequested();\r\n        this.loadMovies(playingNowMoviesMoreLoaded);\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {playingNowMovies, loading, loadingMore, playingNowPage}  = state.moviePageReducer;\r\n    return {\r\n       movies: playingNowMovies,\r\n       loading,\r\n       loadingMore,\r\n       page: playingNowPage \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError,\r\n    playingNowMoviesRequested,\r\n    playingNowMoviesLoaded,\r\n    playingNowMoviesMoreRequested,\r\n    playingNowMoviesMoreLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PlayingNowPage));","import React, { Component } from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedMoviesRequested, topRatedMoviesLoaded, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded, popularMoviesError} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass TopRatedPage extends Component {\r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n        \r\n        if (!this.props.movies.length) {\r\n            this.props.topRatedMoviesRequested();\r\n            this.loadMovies(this.props.topRatedMoviesLoaded)\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {page, MoviesService, popularMoviesError} = this.props;\r\n\r\n        MoviesService.getTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError())\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, topRatedMoviesMoreRequested, topRatedMoviesMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedMoviesMoreRequested();\r\n        this.loadMovies(topRatedMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedMovies, topRatedPage, loading, loadingMore} = state.moviePageReducer;\r\n    return {\r\n        movies: topRatedMovies,\r\n        page: topRatedPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedMoviesRequested,\r\n    topRatedMoviesLoaded,\r\n    topRatedMoviesMoreRequested,\r\n    topRatedMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from './components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {upcomingMoviesRequested, upcomingMoviesLoaded, upcomingMoviesMoreRequested, upcomingMoviesMoreLoaded, popularMoviesError} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\nclass UpcomingPage extends Component {   \r\n    componentWillMount() {\r\n        document.title = this.props.title;\r\n\r\n        if (!this.props.movies.length) {\r\n            this.props.upcomingMoviesRequested();\r\n            this.loadMovies(this.props.upcomingMoviesLoaded);\r\n        }\r\n    }\r\n\r\n    loadMovies = (success) => {\r\n        const {MoviesService, popularMoviesError, page} = this.props;\r\n\r\n        MoviesService.getUpcoming(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularMoviesError());\r\n    }\r\n\r\n    loadMoreMovies = () => {\r\n        const {page, upcomingMoviesMoreLoaded, upcomingMoviesMoreRequested} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n        upcomingMoviesMoreRequested();\r\n        this.loadMovies(upcomingMoviesMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, loadingMore, history} = this.props;\r\n       \r\n        return(\r\n            <MovieList\r\n                movies={movies}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreMovies}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {upcomingMovies, loading, loadingMore, upcomingPage} = state.moviePageReducer;\r\n    return {\r\n        movies: upcomingMovies,\r\n        loading,\r\n        loadingMore,\r\n        page: upcomingPage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    upcomingMoviesRequested,\r\n    upcomingMoviesLoaded,\r\n    upcomingMoviesMoreRequested,\r\n    upcomingMoviesMoreLoaded,\r\n    popularMoviesError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(UpcomingPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 285px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 275px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 64.4%;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 13px;\r\n    padding: 5px 10px 0;   \r\n`;\r\n\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst FullCastWrapper = styled.div`\r\n    color: #1e2f3c;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    margin-top: 10px;\r\n    cursor: pointer;\r\n    text-decoration: underline;\r\n    text-align: ${props => props.size < 415 ? 'center' : 'left'};\r\n`;\r\n\r\n\r\n\r\nconst Cast = ({casts, id, history}) => {\r\n    const size = useWindowSize();\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n          <span style={{display: 'none'}}></span>\r\n        )\r\n      }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    const onGoFullCast = () => {\r\n\r\n        if (history.location.pathname.includes('tv')) {\r\n            history.push(`/tv/${id}/casts`)\r\n        } else {\r\n            history.push(`/movie/${id}/casts`)\r\n        } \r\n        \r\n    }\r\n\r\n    const onGoPersonBio = (id) => {\r\n        history.push(`/person/${id}`)\r\n    }\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.profile_path ? ('https://image.tmdb.org/t/p/w138_and_h175_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg \r\n                        src={src} \r\n                        alt={item.name} \r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => onGoPersonBio(item.id)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastItemWrapper>\r\n                \r\n            )\r\n        });\r\n\r\n    let carousel;\r\n    return (\r\n        <>\r\n            <CarouselWrapper size={size}>\r\n                <CastTitle>В главных ролях</CastTitle>\r\n                <Carousel renderArrow={myArrow}\r\n                        itemsToScroll={size < 415 ? 2 : 1} \r\n                        itemsToShow={size < 415 ? 2 : 5}\r\n                        focusOnSelect={false}\r\n                        ref={ref => (carousel = ref)}\r\n                        renderPagination={myPagination}\r\n                >\r\n                    {castItem}\r\n                </Carousel>\r\n                <PrevButton \r\n                    size={size}\r\n                    onClick={() => carousel.slidePrev()}\r\n                >\r\n                    <i className=\"fas fa-angle-double-left\"></i>\r\n                </PrevButton>\r\n                <NextButton \r\n                    size={size}\r\n                    onClick={() => carousel.slideNext()}\r\n                >\r\n                    <i className=\"fas fa-angle-double-right\"></i>\r\n                </NextButton>\r\n                <FullCastWrapper\r\n                    size={size}\r\n                    onClick={() => onGoFullCast()}\r\n                >Полный актёрский и съёмочный состав</FullCastWrapper>\r\n           </CarouselWrapper>\r\n           \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Cast;","import React from 'react';\r\nimport useWindowSize from '../useWindowSize/useWindowSize';\r\n\r\nconst Trailer = ({video}) => {\r\n\r\n    const {results} = video;\r\n    const resultItem = results[0];\r\n    const size= useWindowSize();\r\n    return (\r\n        <iframe\r\n            title='g'\r\n            width={ size < 415 ? size : \"1075\"}\r\n            height={ size < 415 ? (size/1.6) : \"667\"}\r\n            src={\"https://www.youtube.com/embed/\" + resultItem.key}\r\n            frameBorder='0' \r\n            allowFullScreen\r\n            controls='2'\r\n        ></iframe>\r\n    )\r\n}\r\n\r\nexport default Trailer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../shared/youtubeVideo/youtubeVideo';\r\n\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: 1075px;\r\n    max-height: 667px;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: fixed;\r\n    top: 20px;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: 1075px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindow = ({video, onCloseModal}) => {\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper>\r\n                <TrailerTitleWraper>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindow;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from \"../../../../shared/rate\";\r\nimport ModalWindow from \"./modalWindow\";\r\nimport { Cast, OriginalDetails, Keywords } from \"./index\";\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    background-image: linear-gradient(\r\n            315deg,\r\n            rgba(233, 188, 183, 0.7) 0%,\r\n            rgba(41, 82, 74, 0.8) 74%\r\n        ),\r\n        ${(props) =>\r\n            `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.backdrop})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    color: #fff;\r\n    font-family: \"Source Sans Pro\";\r\n    background-color: #e9bcb7;\r\n`;\r\n\r\nconst ImgWrapper = styled.img`\r\n    max-width: 300px;\r\n    max-height: 450px;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 7px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 35px;\r\n    font-weight: 700;\r\n    font-family: \"Source Sans Pro\";\r\n`;\r\n\r\nconst Year = styled.span`\r\n    opacity: 0.8;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst DetailsList = styled.div`\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Vote = styled.span`\r\n    max-width: 150px;\r\n    margin-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ActivityList = styled.ul`\r\n    display: flex;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    li {\r\n        width: 46px;\r\n        height: 46px;\r\n        background-color: rgb(3, 37, 65);\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-left: 15px;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-left: 0;\r\n    }\r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 0.6;\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst TagLine = styled.div`\r\n    font-size: 17.6px;\r\n    opacity: 0.7;\r\n    font-family: Arial;\r\n`;\r\n\r\nconst CreatorNameWrapper = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Rating = styled.div`\r\n    border: 1px solid #fff;\r\n    opacity: 0.8;\r\n    padding: 0 7px;\r\n    font-size: 1em;\r\n    margin-right: 7px;\r\n`;\r\n\r\nconst Details = ({\r\n    details,\r\n    movieId,\r\n    onOpenModal,\r\n    modalWindow,\r\n    onCloseModal,\r\n    video,\r\n    history,\r\n    casts,\r\n    keywords,\r\n    socialLink,\r\n    recommendations,\r\n    showCollection,\r\n    showRecommendations\r\n}) => {\r\n    const {\r\n        poster_path,\r\n        title,\r\n        release_date,\r\n        genres,\r\n        runtime,\r\n        vote_average,\r\n        tagline,\r\n        overview,\r\n        name,\r\n        first_air_date,\r\n        episode_run_time,\r\n        created_by,\r\n    } = details;\r\n    const genreItem = genres.map((genre) => genre.name);\r\n    const genreToString = genreItem.join(\", \");\r\n\r\n    const durations =\r\n        runtime || episode_run_time\r\n            ? moment\r\n                  .duration(runtime || episode_run_time[0], \"minutes\")\r\n                  .format(\"h : m o\")\r\n                  .replace(\":\", \"h\")\r\n                  .replace(\"o\", \"m\")\r\n            : null;\r\n\r\n    const trailerButton = () => {\r\n        return (\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle onClick={() => onOpenModal(movieId)}>\r\n                    Воспроизвести трейлер\r\n                </TrailerTitle>\r\n            </TrailerWrapper>\r\n        );\r\n    };\r\n\r\n    const modal = modalWindow ? (\r\n        <ModalWindow video={video} onCloseModal={onCloseModal} />\r\n    ) : null;\r\n    const showTrailer = video?.results.length === 0 ? null : trailerButton();\r\n    const src = !poster_path\r\n        ? process.env.PUBLIC_URL + \"/assets/poster.png\"\r\n        : \"https://image.tmdb.org/t/p/w220_and_h330_face\" + poster_path;\r\n    const creator = history.location.pathname.includes(\"tv\") ? (\r\n        <TvCreator creator={created_by} history={history} />\r\n    ) : null;\r\n    const releaseYear =\r\n        release_date || first_air_date\r\n            ? `(${moment(release_date || first_air_date).format(\"YYYY\")})`\r\n            : null;\r\n    const releaseDate =\r\n        release_date || first_air_date\r\n            ? moment(release_date || first_air_date).format(\"DD/MM/YYYY\")\r\n            : null;\r\n\r\n    const showOverview = overview ? overview : '-';\r\n    const dateGenreDurationArray = [releaseDate, genreToString, durations];\r\n    const dateGenreDurationString = dateGenreDurationArray.filter(item => item).join('  \\u25CF  ');\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={details?.backdrop_path}>\r\n                <Container className=\"w-100\">\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                        <Col className=\"col-4\">\r\n                            {modal}\r\n                            <ImgWrapper src={src} alt={title || name} />\r\n                        </Col>\r\n                        <Col className=\"col-8 text-left px-0\">\r\n                            <Title>\r\n                                {title || name} <Year>{releaseYear}</Year>\r\n                            </Title>\r\n                            <DetailsList>\r\n                                <Row>\r\n                                    <Col className=\"col-auto d-flex align-items-center\">\r\n                                        {dateGenreDurationString}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"font-weight-bold py-3\">\r\n                                    <Col className=\"col-auto d-flex\">\r\n                                        <Rate vote={vote_average} />\r\n                                        <Vote>Пользовательский счёт</Vote>\r\n                                    </Col>\r\n                                    <Col className=\"px-0 my-0 d-flex align-items-center\">\r\n                                        <ActivityList>\r\n                                            <li>\r\n                                                <i className=\"fas fa-list-ul\"></i>\r\n                                            </li>\r\n                                            <li>\r\n                                                <i className=\"fas fa-heart\"></i>\r\n                                            </li>\r\n                                            <li>\r\n                                                <i className=\"fas fa-bookmark\"></i>\r\n                                            </li>\r\n                                            <li>\r\n                                                <i className=\"fas fa-star\"></i>\r\n                                            </li>\r\n                                        </ActivityList>\r\n                                    </Col>\r\n                                    <Col className=\"d-flex align-items-center\">\r\n                                        {showTrailer}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col className=\"font-italic\">\r\n                                        <TagLine>{tagline}</TagLine>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"flex-column py-2\">\r\n                                    <Col>\r\n                                        <Overview>Обзор</Overview>\r\n                                    </Col>\r\n                                    <Col>{showOverview}</Col>\r\n                                </Row>\r\n                                {creator}\r\n                            </DetailsList>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </BackgroundWrapper>\r\n            <Container>\r\n                <Row className='mt-5'>\r\n                    <Col className=\"col-8 px-4\">\r\n                        <Cast casts={casts} id={movieId} history={history} />\r\n                        {showCollection(details?.belongs_to_collection)}\r\n                        {showRecommendations(recommendations)}\r\n                    </Col>\r\n                    <Col className=\"col-4 px-4\">\r\n                        <Row>\r\n                            <OriginalDetails\r\n                                details={details}\r\n                                history={history}\r\n                                socialLink={socialLink}\r\n                            />\r\n                        </Row>\r\n                        <Row className=\"flex-column\">\r\n                            <Keywords\r\n                                keyword={keywords}\r\n                                history={history}\r\n                                url={\"keywords\"}\r\n                            />\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nconst TvCreator = ({ creator, history }) => {\r\n    if (creator?.length) {\r\n        return (\r\n            <Row className=\"flex-column py-2\">\r\n                <Col>\r\n                    <CreatorNameWrapper\r\n                        onClick={() => history.push(`/person/${creator[0].id}`)}\r\n                    >\r\n                        {creator[0].name}\r\n                    </CreatorNameWrapper>\r\n                    <div>Создатель</div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Details;\r\nexport { BackgroundWrapper, ImgWrapper, Title, DetailsList, Vote, Overview };","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover'\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: inline-block;\r\n    font-size: 25px;  \r\n    cursor: pointer;\r\n    margin-right: 15px;\r\n    & .popover-body {\r\n        background-color: red\r\n    }\r\n`;\r\n\r\nconst Link = styled.a`\r\n    color: #000;\r\n    & :hover :active :link :visited {\r\n        color: #000;\r\n    }\r\n`;\r\n\r\nconst LinkWrapper = styled.div`\r\n    margin: ${props => props.movie ? '0 15px 20px 0' : '30px 15px 0 0'};\r\n    display: flex;\r\n`;\r\n\r\nconst SocialLinkWrrapper = styled.div`\r\n    display: ${props => !props.facebook && !props.twitter && !props.instagram ? 'none' : 'block'};\r\n    border-right: 1px solid #d7d7d7;\r\n    margin-right: 15px;\r\n`;\r\n\r\n\r\nconst OriginalDetails = ({details, history, socialLink}) => {\r\n    const {original_title, status, budget, revenue, original_language, original_name, networks, homepage} = details;\r\n    const {facebook_id, instagram_id, twitter_id} = socialLink;\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieBudget= budget ? nf.format(budget).replace(/\\s/g, ',') : '0';\r\n    const movieRevenue = revenue ? nf.format(revenue).replace(/\\s/g, ',') : '0';\r\n\r\n    const tvNet = history.location.pathname.includes('tv') ? <TvNetwork networks={networks}/> : null;\r\n\r\n    const statusMovie = () => {\r\n        switch (status) {\r\n            case 'Released': \r\n                return 'Выпущено';\r\n            case 'Returning Series':\r\n                return 'Продолжается';\r\n            default:\r\n                return (status);\r\n        }\r\n    }\r\n\r\n    const facebook = (\r\n        <Link href={`https://www.facebook.com/${facebook_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link href={`https://twitter.com/${twitter_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link href={`https://www.instagram.com/${instagram_id}`} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const homePage = (\r\n        <Link href={homepage} target='_blank' rel=\"noopener noreferrer\">\r\n            <i className=\"fas fa-link\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? <Overlay logo={facebook} page={'Facebook'}/> : null;\r\n    const overlayTwitter = twitter_id ?  <Overlay logo={twitter} page={'Twitter'}/> : null;\r\n    const overlayInstagram = instagram_id ? <Overlay logo={instagram} page={'Instagram'}/> : null;\r\n    const overlayHomePage = homepage ? <Overlay logo={homePage} page={'Домашнюю страницу'}/> : null;\r\n\r\n    return(\r\n        <Col>\r\n            <Row>\r\n                <Col className='d-flex align-items-center'>\r\n                    <LinkWrapper movie>\r\n                        <SocialLinkWrrapper facebook={facebook_id} twitter={twitter_id} instagram={instagram_id}>\r\n                            {overlayFacebook}\r\n                            {overlayTwitter}\r\n                            {overlayInstagram}\r\n                        </SocialLinkWrrapper>\r\n                        {overlayHomePage}\r\n                    </LinkWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Исходное название</Col>\r\n                <Col>{original_title || original_name}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Статус</Col>\r\n                <Col>{statusMovie()}</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Исходный язык</Col>\r\n                <Col>{original_language === 'en' ?  'английский' : original_language}</Col>\r\n            </Row>\r\n            {tvNet}\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Бюджет</Col>\r\n                <Col>${movieBudget}.00</Col>\r\n            </Row>\r\n            <Row className=\"flex-column mb-3\">\r\n                <Col className=\"font-weight-bold\">Сборы</Col>\r\n                <Col>${movieRevenue}.00</Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nconst TvNetwork = ({networks}) => {\r\n    const networkItem = networks?.find((network, index) => index === 0);\r\n    const logo = !networkItem?.logo_path ? networkItem?.name : <img src={`https://image.tmdb.org/t/p/h30${networkItem?.logo_path}`} alt={networkItem?.name}/>;\r\n\r\n    return (\r\n        <Row className=\"flex-column\">\r\n            <Col className=\"font-weight-bold\">Телесеть</Col>\r\n            <Col>  \r\n                {logo}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst Overlay = ({logo, page}) => {\r\n    const popover = (\r\n            <Popover id=\"popover-basic\">              \r\n                <Popover.Content>\r\n                    Посетить {page}\r\n                </Popover.Content>\r\n            </Popover>\r\n    );\r\n    \r\n    return (\r\n        <OverlayTrigger placement=\"top\" overlay={popover}>\r\n            <LinkIconWrapper>{logo}</LinkIconWrapper>\r\n        </OverlayTrigger>\r\n    )\r\n}\r\n\r\nexport default OriginalDetails;\r\nexport {Overlay, LinkIconWrapper, Link};","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Col } from 'react-bootstrap';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst KeywordsWrapper = styled.div`\r\n    margin: 10px 0;\r\n    max-width: ${props => props.size < 415 ? props.size + 'px' : '260px'};\r\n    width: 100%;\r\n`;\r\n\r\nconst KeywordItemWrapper = styled.div`\r\n    background-color: rgba(0,0,0,0.1);\r\n    border: 1px solid #d7d7d7;\r\n    color: #000;\r\n    padding: 4px 10px;\r\n    border-radius: 4px;\r\n    width: fit-content;\r\n    margin: 5px;\r\n    display: inline-block;\r\n    font-size: 0.9em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst Keywords = ({keyword, url, history}) => {\r\n    const size = useWindowSize();\r\n    const keywordsItem = keyword.map((keyword, index) => {\r\n        return(\r\n            <KeywordItemWrapper \r\n                key={index} \r\n                onClick={() => history.push(`/${url}/${keyword.id}`)}\r\n            >\r\n                {keyword.name}\r\n            </KeywordItemWrapper>\r\n        )\r\n    })\r\n\r\n    const keywordItem = keywordsItem.length === 0 ? 'Ключевые слова не добавлены.' : keywordsItem;\r\n\r\n    return (\r\n        <KeywordsWrapper size={size}>\r\n            <Col className=\"font-weight-bold\">Ключевые слова</Col>\r\n            <Col>\r\n                {keywordItem}\r\n            </Col>\r\n        </KeywordsWrapper>\r\n    )\r\n}\r\n\r\nexport default Keywords;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport useWindowSize from '../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst CollectionWrapper = styled.div`\r\n    padding: 30px 0;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionContent = styled.div`\r\n    border-radius: 8px;\r\n    background-image: linear-gradient(315deg, rgba(42, 42, 114, 0.5) 0%, rgba(0, 159, 253, 0.5) 74%), ${props => `url(${props.bg})`};\r\n    background-repeat: no-repeat;\r\n    max-width: 730px;\r\n    width: 100%;\r\n    height: 320px;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CollectionName = styled.div`\r\n    color: #fff;\r\n    font-size: 1.9em;\r\n    font-weight: 600;\r\n`\r\nconst CollectionDescription = styled.div`\r\n    font-size: 1.1em;\r\n    margin-bottom: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst CollectionButton = styled.button`\r\n    font-size: 1.1em;\r\n    color: #fff;\r\n    background-color: rgb(53, 40, 30);\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 700;\r\n    padding: 6px 20px;\r\n    max-width: 260px;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst Collection = ({details, history, collection}) => {\r\n    const size = useWindowSize();\r\n    const {belongs_to_collection} = details;\r\n    const {name, backdrop_path, id} = belongs_to_collection;\r\n    const {parts} = collection;\r\n\r\n    const getTitle = () => {\r\n        if (collection.hasOwnProperty('parts')) {\r\n            const moviesTitle = parts.map(part => part.title);\r\n            return moviesTitle.join(', ');\r\n        } \r\n        return null\r\n    }\r\n    \r\n    const path = size < 415 ? `https://image.tmdb.org/t/p/w1000_and_h450_multi_faces${backdrop_path}` : `https://image.tmdb.org/t/p/w1440_and_h320_multi_faces${backdrop_path}`;\r\n    const collectionIncludes = size < 415 ? null : `Коллекция включает ${getTitle()}`;\r\n    return (\r\n        <CollectionWrapper>\r\n            <CollectionContent bg={path}>\r\n            <CollectionName>Входит в {name}</CollectionName>\r\n            <CollectionDescription>{collectionIncludes}</CollectionDescription>\r\n            <CollectionButton\r\n                onClick={() => history.push(`/collection/${id}`)}\r\n            >Смотреть коллекцию</CollectionButton>\r\n            </CollectionContent>\r\n        </CollectionWrapper>\r\n    )\r\n}\r\n\r\nexport default Collection;","import React from \"react\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport styled from \"styled-components\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from \"moment\";\r\nimport useWindowSize from \"../../../../shared/useWindowSize/useWindowSize\";\r\n\r\nconst RecommendationCardWrapper = styled.div`\r\n    max-width: 230px;\r\n`;\r\n\r\nconst RecommendationCardImgWrapper = styled.div`\r\n    cursor: pointer;\r\n    position: relative;\r\n    max-width: 230px;\r\n    font-size: 16px;\r\n\r\n    &:hover .visible {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst RecommendationCardRelease = styled.div`\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n    position: absolute;\r\n    bottom: 0px;\r\n    padding: 10px;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: opacity 200ms;\r\n`;\r\n\r\nconst RecommendationCardImg = styled.img`\r\n    border-radius: 5px;\r\n    max-width: 230px;\r\n    max-height: 130px;\r\n`;\r\n\r\nconst RecommendationCardTitleWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst RecommendationCardTitle = styled.div``;\r\n\r\nconst RecommendationCardRate = styled.div``;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    border-bottom: ${(props) =>\r\n        props.size < 415 ? \"none\" : \"1px solid rgb(215,215,215)\"};\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: ${(props) => props.size < 415 ? \"190px\" : \"210px\"};\r\n        * {\r\n            outline: none;\r\n        }\r\n        .rec-item-wrapper {\r\n            height: ${(props) => props.size < 415 ? \"185px\" : \"205px\"};;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${(props) => (props.size < 415 ? \"5%\" : \"0\")};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    display: ${(props) => (props.size < 415 ? \"none\" : \"block\")};\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${(props) => (props.size < 415 ? \"95%\" : \"100%\")};\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Recommendation = ({\r\n    recommendations,\r\n    history,\r\n    MoviesService,\r\n    castRequested,\r\n    movieDetailsRequested,\r\n    getDetails,\r\n    getCast,\r\n    getKeywords,\r\n    getVideos,\r\n    getSocailLink,\r\n    getRecommendations,\r\n}) => {\r\n    const handleRouting = (id) => {\r\n        if (history.location.pathname.includes(\"tv\")) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getTVDetails);\r\n            getCast(id, MoviesService.getTVCasts);\r\n            getKeywords(id, MoviesService.getTVKeywords);\r\n            getVideos(id, MoviesService.getTVVideos);\r\n            getSocailLink(id, MoviesService.getTVExternalIds);\r\n            getRecommendations(id, MoviesService.getTVRecommendations);\r\n            history.push(`/tv/${id}`);\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            getDetails(id, MoviesService.getMovieDetails);\r\n            getCast(id, MoviesService.getCast);\r\n            getKeywords(id, MoviesService.getKeywords);\r\n            getVideos(id, MoviesService.getVideos);\r\n            getSocailLink(id, MoviesService.getMovieExternalIds);\r\n            getRecommendations(id, MoviesService.getMovieRecommendations);\r\n            history.push(`/movie/${id}`);\r\n        }\r\n    };\r\n    const size = useWindowSize();\r\n    const recommendationItems = recommendations\r\n        .filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const {\r\n                id,\r\n                vote_average,\r\n                title,\r\n                release_date,\r\n                name,\r\n                first_air_date,\r\n                backdrop_path,\r\n            } = item;\r\n            const src = backdrop_path\r\n                ? \"//image.tmdb.org/t/p/w250_and_h141_face\" + backdrop_path\r\n                : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n            const releaseDate = moment(release_date || first_air_date).format(\r\n                \"DD/MM/YYYY\"\r\n            );\r\n            return (\r\n                <RecommendationCardWrapper key={index}>\r\n                    <RecommendationCardImgWrapper>\r\n                        <RecommendationCardImg\r\n                            src={src}\r\n                            alt={title || name}\r\n                            onClick={() => handleRouting(id)}\r\n                        />\r\n                        <RecommendationCardRelease className={\"visible\"}>\r\n                            <i className=\"far fa-calendar-alt\"></i>{\" \"}\r\n                            {releaseDate}\r\n                        </RecommendationCardRelease>\r\n                    </RecommendationCardImgWrapper>\r\n                    <RecommendationCardTitleWrapper>\r\n                        <RecommendationCardTitle>\r\n                            <EllipsisText text={title || name} length={24} />\r\n                        </RecommendationCardTitle>\r\n                        <RecommendationCardRate>\r\n                            {vote_average * 10}%\r\n                        </RecommendationCardRate>\r\n                    </RecommendationCardTitleWrapper>\r\n                </RecommendationCardWrapper>\r\n            );\r\n        });\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper size={size}>\r\n            <SectionTitle>Рекомендации </SectionTitle>\r\n            <Carousel\r\n                renderArrow={myArrow}\r\n                itemsToScroll={size < 415 ? 1 : 2}\r\n                itemsToShow={size < 415  ? 1 : 3}\r\n                focusOnSelect={false}\r\n                ref={(ref) => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {recommendationItems}\r\n            </Carousel>\r\n            <PrevButton size={size} onClick={() => carousel.slidePrev()}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton size={size} onClick={() => carousel.slideNext()}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    );\r\n};\r\n\r\nexport default Recommendation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Trailer from '../../../../../shared/youtubeVideo/youtubeVideo';\r\nimport useWindowSize from '../../../../../shared/useWindowSize/useWindowSize';\r\n\r\nconst Backdrop = styled.div`\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: 2;\r\n`;\r\n\r\nconst TrailerBodyWrapper = styled.div`\r\n    background-color: rgba(0, 0, 0);\r\n    max-width: ${props => props.size + 'px'};\r\n    max-height: 40%;\r\n    width: 100%;\r\n\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst TrailerTitleWraper = styled.div`\r\n    max-width: ${props => props.size + 'px'};\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 16px;\r\n    cursor: default;\r\n    font-size: 20px;\r\n    color: #fff;\r\n`;\r\n\r\nconst TrailerCloseButton = styled.div`\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ModalWindowMobile = ({video, onCloseModal}) => {\r\n    const size = useWindowSize();\r\n    return(\r\n        <Backdrop>\r\n            <TrailerBodyWrapper size={size}>\r\n                <TrailerTitleWraper size={size}>\r\n                    Воспроизвести трейлер\r\n                    <TrailerCloseButton\r\n                        onClick={onCloseModal}\r\n                    >\r\n                        <i className=\"fas fa-times\"></i>\r\n                    </TrailerCloseButton>                   \r\n                </TrailerTitleWraper>\r\n                <Trailer video={video}/>\r\n            </TrailerBodyWrapper>\r\n        </Backdrop>\r\n    )    \r\n}\r\n\r\nexport default ModalWindowMobile;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport duration from \"moment-duration-format\";\r\nimport Rate from \"../../../../../shared/rate\";\r\nimport { ModalWindowMobile } from \"./index\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {Cast, OriginalDetails, Keywords} from '../index';\r\n\r\nconst GlobalWrapper = styled.div`\r\n    background-color: #5b6467;\r\n    background-image: linear-gradient(315deg, #5b6467 0%, #8b939a 74%);\r\n    color: #fff;\r\n`;\r\n\r\nconst BackgroundWrapper = styled.div`\r\n    width: 100%;\r\n    background-image: linear-gradient(\r\n            315deg,\r\n            rgba(233, 188, 183, 0.7) 0%,\r\n            rgba(41, 82, 74, 0.8) 74%\r\n        ),\r\n        ${(props) =>\r\n            `url(https://image.tmdb.org/t/p/w1920_and_h800_multi_faces${props.url})`};\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: right;\r\n    min-width: 100%;\r\n    font-family: \"Source Sans Pro\";\r\n    background-color: #e9bcb7;\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    padding: 20px;\r\n\r\n    & img {\r\n        max-width: 116px;\r\n        max-height: 174px;\r\n        border-radius: 7px;\r\n    }\r\n`;\r\n\r\nconst TitleWrapper = styled.div``;\r\n\r\nconst Title = styled.div`\r\n    font-size: calc(0.7em + 3vw);\r\n    font-weight: 600;\r\n    text-align: center;\r\n    padding: 16px 20px;\r\n\r\n    & span {\r\n        font-weight: 400;\r\n        opacity: 0.8;\r\n        font-size: 0.8em;\r\n    }\r\n`;\r\n\r\nconst RateWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0 20px 16px;\r\n`;\r\n\r\nconst Vote = styled.div`\r\n    position: relative;\r\n    border-right: ${(props) =>\r\n        props.border ? \"1px solid rgba(255, 255, 255, 0.8)\" : \"none\"};\r\n    font-weight: 600;\r\n    padding: 0 5px 0 15px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    line-height: 1;\r\n`;\r\n\r\nconst TrailerWrapper = styled.div`\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    transition: opacity 200ms;\r\n    padding-left: 5px;\r\n\r\n    &:hover {\r\n        opacity: 0.6;\r\n    }\r\n\r\n    & i {\r\n        font-size: 0.6em;\r\n    }\r\n`;\r\n\r\nconst TrailerTitle = styled.div`\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst GenreWrapper = styled.div`\r\n    background-color: #2f4353;\r\n    border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    padding: 10px;\r\n`;\r\n\r\nconst ReleaseWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    & i {\r\n        font-size: 0.5em;\r\n        padding: 0 10px;\r\n    }\r\n`;\r\n\r\nconst GenreList = styled.div`\r\n    text-align: center;\r\n`;\r\n\r\nconst OverviewWrapper = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n    font-size: 1em;\r\n    text-align: justify;\r\n    line-height: 1.3;\r\n\r\n    & div {\r\n        font-weight: 600;\r\n        font-size: 1.3em;\r\n        padding-bottom: 5px;\r\n    }\r\n`;\r\n\r\nconst CreatorWrapper = styled.div`\r\n    margin-top: 20px;\r\n    font-size: 0.9em;\r\n`;\r\n\r\nconst Creator = styled.div`\r\n    font-size: 1.1em;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst DetailsMobile = ({\r\n    details,\r\n    history,\r\n    video,\r\n    onOpenModal,\r\n    modalWindow,\r\n    onCloseModal,\r\n    movieId,\r\n    casts,\r\n    keywords,\r\n    socialLink,\r\n    recommendations,\r\n    showCollection,\r\n    showRecommendations\r\n}) => {\r\n    const {\r\n        title,\r\n        name,\r\n        backdrop_path,\r\n        poster_path,\r\n        id,\r\n        vote_average,\r\n        release_date,\r\n        genres,\r\n        runtime,\r\n        overview,\r\n        first_air_date,\r\n        episode_run_time,\r\n        created_by,\r\n    } = details;\r\n    const src = poster_path\r\n        ? \"//image.tmdb.org/t/p/w116_and_h174_face\" + poster_path\r\n        : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n    const durations =\r\n        runtime || episode_run_time\r\n            ? moment\r\n                  .duration(runtime || episode_run_time[0], \"minutes\")\r\n                  .format(\"h : m o\")\r\n                  .replace(\":\", \"h\")\r\n                  .replace(\"o\", \"m\")\r\n            : null;\r\n    const genreItem = genres.map((genre) => genre.name);\r\n    const genreToString = genreItem.join(\", \");\r\n    const releaseYear =\r\n        release_date || first_air_date\r\n            ? `(${moment(release_date || first_air_date).format(\"YYYY\")})`\r\n            : null;\r\n    const releaseDate =\r\n        release_date || first_air_date\r\n            ? moment(release_date || first_air_date).format(\"DD/MM/YYYY\")\r\n            : null;\r\n\r\n    const creator = !created_by?.length ? '-' : created_by?.find((item, index) => index === 0).name;\r\n    const creatorId = !created_by?.length ? null : created_by?.find((item, index) => index === 0).id;\r\n \r\n\r\n\r\n    const showCreator = () => {\r\n        if (history.location.pathname.includes(\"tv\")) {\r\n            return (\r\n                <CreatorWrapper>\r\n                    <Creator\r\n                        onClick={() => history.push(`/person/${creatorId}`)}\r\n                    >\r\n                        {creator}\r\n                    </Creator>\r\n                    Создатель\r\n                </CreatorWrapper>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const trailerButton = () => {\r\n        return (\r\n            <TrailerWrapper>\r\n                <i className=\"fas fa-play\"></i>\r\n                <TrailerTitle onClick={() => onOpenModal(id)}>\r\n                    Трейлер\r\n                </TrailerTitle>\r\n            </TrailerWrapper>\r\n        );\r\n    };\r\n\r\n    const modal = modalWindow ? (\r\n        <ModalWindowMobile video={video} onCloseModal={onCloseModal} />\r\n    ) : null;\r\n    const showTrailer = !video?.results.length ? null : trailerButton();\r\n    const separator = releaseDate ? <>{releaseDate} <i className=\"fas fa-circle\"></i></> : null;\r\n    const showOverview = overview ? overview : '-';\r\n    const showCast = casts.cast.length ? <Cast casts={casts} id={movieId} history={history} /> : null;\r\n\r\n    return (\r\n        <>\r\n            <GlobalWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            {modal}\r\n                            <BackgroundWrapper url={backdrop_path}>\r\n                                <PosterWrapper>\r\n                                    <img src={src} alt={title || name} />\r\n                                </PosterWrapper>\r\n                            </BackgroundWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <TitleWrapper>\r\n                                <Title>\r\n                                    {title || name} <span>{releaseYear}</span>\r\n                                </Title>\r\n                                <RateWrapper>\r\n                                    <Rate vote={vote_average} small isStatic />\r\n                                    <Vote border={video?.results.length}>\r\n                                        Пользовательский <span>счёт</span>\r\n                                    </Vote>\r\n                                    {showTrailer}\r\n                                </RateWrapper>\r\n                            </TitleWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <GenreWrapper>\r\n                                <ReleaseWrapper>\r\n                                    {separator}\r\n                                    {durations}\r\n                                </ReleaseWrapper>\r\n                                <GenreList>{genreToString}</GenreList>\r\n                            </GenreWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <OverviewWrapper>\r\n                                <Overview>\r\n                                    <div>Обзор</div>\r\n                                    {showOverview}\r\n                                </Overview>\r\n                                {showCreator()}\r\n                            </OverviewWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </GlobalWrapper>\r\n            <Container>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        {showCast}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        {showCollection(details?.belongs_to_collection)}\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mt-3'>\r\n                    <Col>\r\n                        {showRecommendations(recommendations)}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <OriginalDetails\r\n                            details={details}\r\n                            history={history}\r\n                            socialLink={socialLink}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row className='mb-3'>\r\n                    <Col>\r\n                        <Keywords\r\n                            keyword={keywords}\r\n                            history={history}\r\n                            url={\"keywords\"}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DetailsMobile;\r\nexport {\r\n    GlobalWrapper,\r\n    BackgroundWrapper,\r\n    PosterWrapper,\r\n    TitleWrapper,\r\n    Title,\r\n    RateWrapper,\r\n    Vote,\r\n    GenreWrapper,\r\n    GenreList,\r\n    OverviewWrapper,\r\n    Overview,\r\n};\r\n","export const MOVIE_DETAILS_REQUESTED = 'MOVIE_DETAILS_REQUESTED';\r\nexport const MOVIE_DETAILS_LOADED = 'MOVIE_DETAILS_LOADED';\r\nexport const MOVIE_DETAILS_ERROR = 'MOVIE_DETAILS_ERROR';\r\n\r\nexport const CAST_REQUESTED = 'CAST_REQUESTED';\r\nexport const CAST_LOADED = 'CAST_LOADED';\r\n\r\nexport const KEYWORDS_REQUESTED = 'KEYWORDS_REQUESTED';\r\nexport const KEYWORDS_LOADED = 'KEYWORDS_LOADED';\r\n\r\nexport const MODAL_WINDOW_TOGGLE = 'MODAL_WINDOW_TOGGLE';\r\n\r\nexport const VIDEO_LOADED = 'VIDEO_LOADED';\r\n\r\nexport const SOCIAL_LINK_LOADED = 'SOCIAL_LINK_LOADED';\r\n\r\nexport const RECOMMENDATIONS_LOADED = 'RECOMMENDATIONS_LOADED';\r\n\r\nexport const MOVIE_DETAILS_COLLECTION_LOADED = 'MOVIE_DETAILS_COLLECTION_LOADED';","import * as actionTypes from './actionTypesMovieDetailsPage';\r\n\r\n\r\nconst movieDetailsRequested = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_REQUESTED\r\n    }\r\n}\r\n\r\nconst movieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsError = () => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_ERROR\r\n    }\r\n}\r\n\r\nconst castRequested = () => {\r\n    return {\r\n        type: actionTypes.CAST_REQUESTED\r\n    }  \r\n}\r\n\r\nconst castLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst keywordsRequested = () => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_REQUESTED\r\n    }\r\n}\r\n\r\nconst keywordsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.KEYWORDS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst modalWindowToggle = () => {\r\n    return {\r\n        type: actionTypes.MODAL_WINDOW_TOGGLE\r\n    }\r\n}\r\n\r\nconst videoLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.VIDEO_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst socialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst recommendationsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.RECOMMENDATIONS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst movieDetailsCollectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.MOVIE_DETAILS_COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nexport {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    recommendationsLoaded,\r\n    movieDetailsCollectionLoaded\r\n}","import React, { Component } from \"react\";\r\nimport Spinner from \"../../../shared/spinner/spinner\";\r\nimport {\r\n    Details,\r\n    Collection,\r\n    Recommendation,\r\n} from \"./components\";\r\nimport DetailsMobile from './components/mobileComponents/detailsMob';\r\nimport WithMoviesService from \"../../../hoc/withMoviesService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    movieDetailsCollectionLoaded,\r\n    recommendationsLoaded\r\n} from \"../../../../actions/actionsMovieDetailsPage/actionMovieDetailsPage\";\r\n\r\n\r\nclass MovieDetails extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            movieId,\r\n            history,\r\n            movieDetailsRequested,\r\n            castRequested,\r\n            MoviesService,\r\n            ratingRequested,\r\n            keywordsRequested,\r\n        } = this.props;\r\n        const { pathname } = history.location;\r\n\r\n        \r\n        if (pathname.includes(\"tv\")) {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            keywordsRequested();\r\n            this.getDetails(movieId, MoviesService.getTVDetails);\r\n            this.getCast(movieId, MoviesService.getTVCasts);\r\n            this.getKeywords(movieId, MoviesService.getTVKeywords);\r\n            this.getVideos(movieId, MoviesService.getTVVideos);\r\n            this.getSocailLink(movieId, MoviesService.getTVExternalIds);\r\n            this.getRecommendations(\r\n                movieId,\r\n                MoviesService.getTVRecommendations\r\n            );\r\n        } else {\r\n            movieDetailsRequested();\r\n            castRequested();\r\n            keywordsRequested();\r\n            this.getDetails(movieId, MoviesService.getMovieDetails);\r\n            this.getCast(movieId, MoviesService.getCast);\r\n            this.getKeywords(movieId, MoviesService.getKeywords);\r\n            this.getVideos(movieId, MoviesService.getVideos);\r\n            this.getSocailLink(movieId, MoviesService.getMovieExternalIds);\r\n            this.getRecommendations(\r\n                movieId,\r\n                MoviesService.getMovieRecommendations\r\n            );\r\n        }  \r\n    }\r\n\r\n    getDetails = (id, request) => {\r\n        const { movieDetailsLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => {\r\n                movieDetailsLoaded(response);\r\n                if (response && response.belongs_to_collection) {\r\n                    this.getCollectionDetails(\r\n                        response.belongs_to_collection.id\r\n                    );\r\n                }\r\n            })\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getCast = (id, request) => {\r\n        const { movieDetailsError, castLoaded } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => castLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getKeywords = (id, request) => {\r\n        const { keywordsLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) =>\r\n                keywordsLoaded(response.keywords || response.results)\r\n            )\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getVideos = (id, request) => {\r\n        const { videoLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => videoLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getSocailLink = (id, request) => {\r\n        const { socialLinkLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => socialLinkLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getRecommendations = (id, request) => {\r\n        const { recommendationsLoaded, movieDetailsError } = this.props;\r\n\r\n        request(id)\r\n            .then((response) => recommendationsLoaded(response.results))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    getCollectionDetails = (id) => {\r\n        const {\r\n            MoviesService,\r\n            movieDetailsCollectionLoaded,\r\n            movieDetailsError,\r\n        } = this.props;\r\n\r\n        MoviesService.getCollection(id)\r\n            .then((response) => movieDetailsCollectionLoaded(response))\r\n            .catch((error) => movieDetailsError());\r\n    };\r\n\r\n    showCollection = (isBelongToCollection) => {\r\n        const { history, details, loading, collection } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        } else if (isBelongToCollection) {\r\n            return (\r\n                <Collection\r\n                    details={details}\r\n                    history={history}\r\n                    collection={collection}\r\n                />\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    showRecommendations = (isRecommendation) => {\r\n        const {\r\n            history,\r\n            loading,\r\n            recommendations,\r\n            MoviesService,\r\n            movieDetailsRequested,\r\n            castRequested,\r\n        } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        } else if (isRecommendation.length) {\r\n            return (\r\n                <Recommendation\r\n                    history={history}\r\n                    recommendations={recommendations}\r\n                    MoviesService={MoviesService}\r\n                    getDetails={this.getDetails}\r\n                    getCast={this.getCast}\r\n                    getKeywords={this.getKeywords}\r\n                    getVideos={this.getVideos}\r\n                    getSocailLink={this.getSocailLink}\r\n                    getRecommendations={this.getRecommendations}\r\n                    movieDetailsRequested={movieDetailsRequested}\r\n                    castRequested={castRequested}\r\n                />\r\n            );\r\n        } else if (!isRecommendation.length) {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            movieId,\r\n            history,\r\n            details,\r\n            loading,\r\n            casts,\r\n            loadingCast,\r\n            keywords,\r\n            loadingKeywords,\r\n            modalWindow,\r\n            video,\r\n            modalWindowToggle,\r\n            socialLink,\r\n            recommendations,\r\n            width\r\n        } = this.props;\r\n        \r\n        const globalLoading = loading || loadingCast || loadingKeywords;\r\n\r\n        if (globalLoading) {\r\n            return <Spinner />;\r\n        } else if (width < 415) {\r\n            return (\r\n                <DetailsMobile\r\n                    details={details}\r\n                    movieId={movieId}\r\n                    video={video}\r\n                    history={history}\r\n                    onOpenModal={modalWindowToggle}\r\n                    modalWindow={modalWindow}\r\n                    onCloseModal={modalWindowToggle}\r\n                    casts={casts}\r\n                    keywords={keywords}\r\n                    socialLink={socialLink}\r\n                    recommendations={recommendations}\r\n                    showCollection={this.showCollection}\r\n                    showRecommendations={this.showRecommendations}\r\n                />\r\n            )\r\n        } else {\r\n            return (     \r\n                <Details\r\n                    details={details}\r\n                    movieId={movieId}\r\n                    video={video}\r\n                    history={history}\r\n                    onOpenModal={modalWindowToggle}\r\n                    modalWindow={modalWindow}\r\n                    onCloseModal={modalWindowToggle}\r\n                    casts={casts}\r\n                    keywords={keywords}\r\n                    socialLink={socialLink}\r\n                    recommendations={recommendations}\r\n                    showCollection={this.showCollection}\r\n                    showRecommendations={this.showRecommendations}\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations\r\n    } = state.movieDetailsReducer;\r\n    return {\r\n        details: movieDetails,\r\n        loading,\r\n        casts,\r\n        loadingCast,\r\n        keywords,\r\n        loadingKeywords,\r\n        modalWindow,\r\n        video,\r\n        socialLink,\r\n        collection,\r\n        recommendations\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded,\r\n    keywordsRequested,\r\n    keywordsLoaded,\r\n    modalWindowToggle,\r\n    videoLoaded,\r\n    socialLinkLoaded,\r\n    movieDetailsCollectionLoaded,\r\n    recommendationsLoaded\r\n};\r\n\r\nexport default WithMoviesService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(MovieDetails)\r\n);","import {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.location !== prevProps.location) {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return this.props.children\r\n    }\r\n  }\r\n  \r\nexport default withRouter(ScrollToTop)","export default class MoviesServices {\r\n    constructor() {\r\n        this._baseApi = 'https://api.themoviedb.org/3';\r\n        this._apiKey = 'api_key=d97132eedaef267781863bedd0564229';\r\n        this._apiLanguage = 'language=ru-RU';\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._baseApi}${url}${this._apiKey}&${this._apiLanguage}`);\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getPopular = async (page) => {\r\n        const response = await this.getResource(`/movie/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getMovieDetails = async (movieId) => { \r\n        const response = await this.getResource(`/movie/${movieId}?`);\r\n        if (response && response.status_code === 34) {\r\n            return this.getTVDetails(movieId)\r\n        }\r\n        return response;   \r\n    }\r\n\r\n    getNowPlaying = async (page) => {\r\n        const response = await this.getResource(`/movie/now_playing?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTopRated = async (page) => {\r\n        const response = await this.getResource(`/movie/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getUpcoming = async (page) => {\r\n        const response = await this.getResource(`/movie/upcoming?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCast = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getKeywords = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getVideos = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieByKeyword = async (keywordId, page) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}/movies?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getKeywordName = async (keywordId) => {\r\n        const response = await this.getResource(`/keyword/${keywordId}?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonBiography = async (personId) => {\r\n        const biography = await this.getResource(`/person/${personId}?`);\r\n        const combinedMoviesTv = await this.getResource(`/person/${personId}/combined_credits?`);   \r\n        return {biography, combinedMoviesTv};\r\n\r\n    }\r\n\r\n    getTVDetails = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}?`);\r\n        return response;\r\n    }\r\n\r\n    getTVCasts = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/credits?`);\r\n        return response;\r\n    }\r\n\r\n    getTVKeywords = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/keywords?`);\r\n        return response;\r\n    }\r\n\r\n    getTVVideos = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/videos?`);\r\n        return response;\r\n    }\r\n\r\n    getTVPopular = async (page) => {\r\n        const response = await this.getResource(`/tv/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVAiringToday = async (page) => {\r\n        const response = await this.getResource(`/tv/airing_today?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVTopRated = async (page) => {\r\n        const response = await this.getResource(`/tv/top_rated?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getTVOnTheAir = async (page) => {\r\n        const response = await this.getResource(`/tv/on_the_air?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getPopularPerson = async (page) => {\r\n        const response = await this.getResource(`/person/popular?page=${page}&`);\r\n        return response;\r\n    }\r\n\r\n    getCollection = async (collectionId) => {\r\n        const response = await this.getResource(`/collection/${collectionId}?`);\r\n        return response;\r\n    }\r\n\r\n    getGenreList = async () => {\r\n        const response = await this.getResource(`/genre/movie/list?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieExternalIds = async (movieId) => {\r\n        const response = await this.getResource(`/movie/${movieId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getTVExternalIds = async (tvId) => {\r\n        const response = await this.getResource(`/tv/${tvId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getPersonExternalIds = async (personId) => {\r\n        const response = await this.getResource(`/person/${personId}/external_ids?`);\r\n        return response;\r\n    }\r\n\r\n    getInTrend = async (time) => {\r\n        const response = await this.getResource(`/trending/all/${time}?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRecommendations = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRecommendations = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/recommendations?`);\r\n        return response;\r\n    }\r\n\r\n    getMovieRating = async (id) => {\r\n        const response = await this.getResource(`/movie/${id}/release_dates?`);\r\n        return response;\r\n    }\r\n\r\n    getTVRating = async (id) => {\r\n        const response = await this.getResource(`/tv/${id}/content_ratings?`);\r\n        return response;\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from 'moment';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst MovieCardWrapper = styled.div`\r\n    max-width: 1218px;\r\n    width: 90%;\r\n    min-height: 141px;\r\n    height: 100%;\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px;\r\n\r\n    &:first-child {\r\n        margin-top: 35px;\r\n    }\r\n`;\r\n\r\nconst MovieCardImg = styled.img`\r\n    border-top-left-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    height: 141px;\r\n    cursor: pointer;\r\n    min-width: 94px;\r\n    flex-shrink: 0;\r\n`;\r\n\r\nconst MovieCardContent = styled.div`\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst MovieCardTitle = styled.div`\r\n    font-size: 19.2px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieCardReleaseDate = styled.div`\r\n    font-size: 16px;\r\n    color: #999;\r\n`;\r\n\r\nconst MovieCardDescription = styled.div`\r\n    font-size: 16px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    height: 72px;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1218px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 15px;\r\n`;\r\n\r\nconst KeywordName = styled.div`\r\n    font-size: 1.6em;\r\n    font-weight: 700;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieQuantity = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    opacity: 0.5;\r\n    color: #fff;\r\n`;\r\n\r\nconst MovieListByKeywords = ({movies, totalResults, keywordName, history}) => {\r\n    const size = useWindowSize();\r\n    const moviesItem = movies.map((item, index) => {\r\n        \r\n        const releaseDate = moment(item.release_date).format('DD/MM/YYYY');\r\n    \r\n        const src = !item.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path);\r\n\r\n\r\n        return (\r\n            <MovieCardWrapper key={index}>\r\n                <MovieCardImg \r\n                    src={src}\r\n                    onClick={() => {\r\n                        history.push(`/movie/${item.id}`)\r\n                    }}/>\r\n                <MovieCardContent>\r\n                    <MovieCardTitle\r\n                        onClick={() => {\r\n                            history.push(`/movie/${item.id}`)\r\n                        }}\r\n                    >{item.title}</MovieCardTitle>\r\n                    <MovieCardReleaseDate>{releaseDate}</MovieCardReleaseDate>\r\n                    <MovieCardDescription>\r\n                        <EllipsisText text={item.overview} length={size < 415 ? 47 : 260}/>\r\n                    </MovieCardDescription>\r\n                </MovieCardContent>\r\n            </MovieCardWrapper>\r\n        )\r\n    })\r\n\r\n    const film = totalResults === 1 ? 'фильм' : totalResults < 5 ? 'фильма' : 'фильмов'\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <Header>\r\n                    <KeywordName>{keywordName}</KeywordName>\r\n                    <MovieQuantity>{totalResults} {film}</MovieQuantity>\r\n                </Header>\r\n            </HeaderWrapper>\r\n            {moviesItem}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieListByKeywords;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport MoviesServices from '../../services/services';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport LoadMoreSpinner from '../shared/spinner/loadMoreSpinner';\r\nimport MovieListByKeywords from './components/movieListByKeywords';\r\n\r\nconst MovieListWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n`;\r\n\r\n\r\nconst ButtonWrapper = styled.div`\r\n    margin: 0 auto 20px;\r\n    text-align: center;\r\n`;\r\n\r\nconst LoadMoreButton = styled.button`\r\n    background-color: rgb(1, 180, 228);\r\n    max-width: 1030px;\r\n    width: 85%;\r\n    border: none;\r\n    font-family: 'Source Sans Pro';\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    padding: 7px 0;\r\n    \r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nexport default class MoviesByKeyword extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            movies: [],\r\n            loading: true,\r\n            page: 0,\r\n            loadingMore: false,\r\n            totalResults: 0,\r\n            totalPages: 0,\r\n            keywordName: ''\r\n        }\r\n        this.moviesServices = new MoviesServices();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMovies(this.props.keywordId);\r\n\r\n        this.getKeywordName(this.props.keywordId);\r\n    }\r\n\r\n    onLoadingMovies = (response, results, pages) => {\r\n        this.setState({\r\n            movies: [...this.state.movies, ...response],\r\n            loading: false,\r\n            page: this.state.page + 1,\r\n            loadingMore: false,\r\n            totalResults: results,\r\n            totalPages: pages,\r\n            \r\n        })\r\n    }\r\n\r\n    getMovies = (keywordId) => {\r\n        const {page} = this.state;\r\n\r\n        this.onToogleLoading();\r\n\r\n        this.moviesServices.getMovieByKeyword(this.props.keywordId, page + 1)\r\n            .then((response) => {\r\n                this.onLoadingMovies(response.results, response.total_results, response.total_pages)\r\n            })\r\n    }\r\n\r\n    getKeywordName = (keywordId) => {\r\n        this.moviesServices.getKeywordName(this.props.keywordId)\r\n            .then((response) => {\r\n                this.onLoadingKeywordName(response.name)\r\n            })\r\n    }\r\n\r\n    onLoadingKeywordName = (response) => {\r\n        this.setState({\r\n            keywordName: response\r\n        })\r\n    }\r\n\r\n    onToogleLoading = () => {\r\n        this.setState({\r\n            loadingMore: true\r\n        })\r\n    }\r\n\r\n    showButton = () => {\r\n        const {loadingMore, totalPages} = this.state;\r\n        const loadSpinner = loadingMore ? <LoadMoreSpinner/> : 'Загрузить еще';\r\n        if (totalPages !== 1) {\r\n            return (\r\n                <ButtonWrapper>\r\n                    <LoadMoreButton onClick={ () => this.getMovies()}>\r\n                        {loadSpinner}\r\n                    </LoadMoreButton>\r\n                </ButtonWrapper>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movies, loading, totalResults, keywordName} = this.state;\r\n        const {history} = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        } else {\r\n            return (\r\n                <>               \r\n                    <MovieListWrapper>\r\n                        <MovieListByKeywords \r\n                            movies={movies} \r\n                            totalResults={totalResults} \r\n                            keywordName={keywordName}\r\n                            history={history}\r\n                        />\r\n                    </MovieListWrapper>\r\n                    {this.showButton()}         \r\n                </>\r\n            ) \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CastTitle = styled.div`\r\n    font-size: 22.4px;\r\n    font-family: Arial;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst CastNumber = styled.span`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst CastItemImg = styled.img`\r\n    width: 66px;\r\n    height: 66px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastContent = styled.div``;\r\n\r\nconst DepartmentTitle = styled.div`\r\n    margin: 20px 0 8px;\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst Actors = ({casts, history}) => {\r\n\r\n    const {cast} = casts;\r\n\r\n    const sortedByOrderCasts = cast.sort((a, b) => {\r\n        const previous = a.order;\r\n        const current = b.order;\r\n        return previous - current;\r\n    })\r\n\r\n    const castItem = sortedByOrderCasts.map((item, index) => {\r\n        const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastItemImg \r\n                    alt={item.name} \r\n                    src={src} \r\n                    onClick={() => history.push(`/person/${item.id}`)}\r\n                />\r\n                <CastNameWrapper>\r\n                    <CastName \r\n                        onClick={() => history.push(`/person/${item.id}`)}\r\n                    >{item.name}</CastName>\r\n                    <CastCharacter>{item.character}</CastCharacter>\r\n                </CastNameWrapper>\r\n            </CastItemWrapper>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Актёрский состав <CastNumber>{cast.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                {castItem}\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nconst Crew = ({casts, history}) => {\r\n\r\n    const {crew} = casts;\r\n\r\n    const CrewDepartment = ({department}) => {\r\n        const crewItem = crew.map((item, index) => {\r\n            const src = item.profile_path ? ('https://image.tmdb.org/t/p/w66_and_h66_face' + item.profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n\r\n            if (item.department === department) {\r\n                return (\r\n                    <CastItemWrapper key={index}>\r\n                        <CastItemImg \r\n                            alt={item.name} \r\n                            src={src} \r\n                            onClick={() => {history.push(`/person/${item.id}`)}}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName \r\n                                onClick={() => {history.push(`/person/${item.id}`)}}\r\n                            >{item.name}</CastName>\r\n                            <CastCharacter>{item.job}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper> \r\n                )\r\n            }\r\n            return null;\r\n        })\r\n        return crewItem;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CastTitle>\r\n                Съёмочный состав <CastNumber>{crew.length}</CastNumber>\r\n            </CastTitle>\r\n            <CastContent>\r\n                <DepartmentTitle>Оформление</DepartmentTitle>\r\n                <CrewDepartment department={'Art'}/>\r\n                <DepartmentTitle>Камера</DepartmentTitle>\r\n                <CrewDepartment department={'Camera'}/>\r\n                <DepartmentTitle>Костюмы и грим</DepartmentTitle>\r\n                <CrewDepartment department={'Costume & Make-Up'}/>\r\n                <DepartmentTitle>Ещё</DepartmentTitle>\r\n                <CrewDepartment department={'Crew'}/>\r\n                <DepartmentTitle>Режиссура</DepartmentTitle>\r\n                <CrewDepartment department={'Directing'}/>\r\n                <DepartmentTitle>Монтаж</DepartmentTitle>\r\n                <CrewDepartment department={'Editing'}/>\r\n                <DepartmentTitle>Свет</DepartmentTitle>\r\n                <CrewDepartment department={'Lighting'}/>\r\n                <DepartmentTitle>Продакшн</DepartmentTitle>\r\n                <CrewDepartment department={'Production'}/>\r\n                <DepartmentTitle>Звук</DepartmentTitle>\r\n                <CrewDepartment department={'Sound'}/>\r\n                <DepartmentTitle>Визуальные эффекты</DepartmentTitle>\r\n                <CrewDepartment department={'Visual Effects'}/>\r\n                <DepartmentTitle>Сценарий</DepartmentTitle>\r\n                <CrewDepartment department={'Writing'}/>\r\n            </CastContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {Actors, Crew};","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport moment from 'moment';\r\nimport {Actors, Crew} from './components/fullCastList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {movieDetailsRequested, movieDetailsLoaded, movieDetailsError, castRequested, castLoaded} from '../../actions/actionsMovieDetailsPage/actionMovieDetailsPage';\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n    background-color: rgb(21, 50, 97);\r\n    max-width: 1920px;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 15px 0;\r\n    margin: 0 0 30px;\r\n`;\r\n\r\nconst Header = styled.div`\r\n    max-width: 1110px;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst MovieName = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #fff;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieReleaseYear = styled.span`\r\n    font-size: 35.2px;\r\n    font-weight: 400;\r\n    opacity: 0.8;\r\n    color: #fff;\r\n`;\r\n\r\nconst MoviePosterImg = styled.img`\r\n    width: 58px;\r\n    height: 87px;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst MovieContent = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst ButtonBack = styled.div`\r\n    cursor: pointer;\r\n    font-size: 17.6px;\r\n    font-weight: 600;\r\n    opacity: 0.6;\r\n    color: #fff;\r\n`;\r\n\r\nclass FullCast extends Component {\r\n    componentWillMount() {\r\n        const {movieId, history, details, MoviesService, movieDetailsRequested, castRequested} = this.props;\r\n        const {pathname} = history.location;\r\n\r\n        if (!details.length) {\r\n            if (pathname.includes('tv')) {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getTVCasts);\r\n                this.getDetails(movieId, MoviesService.getTVDetails);\r\n            } else {\r\n                movieDetailsRequested()\r\n                castRequested()\r\n                this.getCast(movieId, MoviesService.getCast);\r\n                this.getDetails(movieId, MoviesService.getMovieDetails);\r\n            }\r\n        }\r\n    }\r\n \r\n    getCast = (movieId, request) => {\r\n        const {castLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => castLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    getDetails = (movieId, request) => {\r\n        const {movieDetailsLoaded, movieDetailsError} = this.props;\r\n\r\n        request(movieId)\r\n            .then((response) => movieDetailsLoaded(response))\r\n            .catch(error => movieDetailsError());\r\n    }\r\n\r\n    onGoBack = () => { \r\n        this.props.history.goBack()\r\n    }\r\n\r\n    render() {\r\n        const {casts, loadingCast, history, details} = this.props;\r\n        const spinnerActors = loadingCast ? <Spinner/> : <Actors casts={casts} history={history}/>;\r\n        const spinnerCrew = loadingCast ? <Spinner/> : <Crew casts={casts} history={history}/>;\r\n\r\n        const releaseYear = moment(details.first_air_date || details.release_date).format('YYYY');\r\n        const src = !details.poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w58_and_h87_face' + details.poster_path);\r\n        \r\n        return (\r\n            <>\r\n                <HeaderWrapper>\r\n                    <Header>\r\n                        <MoviePosterImg src={src} alt={details.name || details.title} onClick={this.onGoBack}/>\r\n                        <MovieContent>\r\n                            <MovieName onClick={this.onGoBack}>{details.name || details.title}\r\n                                <MovieReleaseYear> ({releaseYear})</MovieReleaseYear>\r\n                            </MovieName>  \r\n                            <ButtonBack\r\n                                onClick={this.onGoBack}\r\n                            > <i className=\"fas fa-arrow-left\"></i> Назад на главную</ButtonBack>\r\n                        </MovieContent>\r\n                    </Header>\r\n                </HeaderWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            {spinnerActors}\r\n                        </Col>\r\n                        <Col>\r\n                            {spinnerCrew}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {movieDetails, casts, loadingCast} = state.movieDetailsReducer;\r\n\r\n    return {\r\n        details: movieDetails,\r\n        casts,\r\n        loadingCast\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    movieDetailsRequested,\r\n    movieDetailsLoaded,\r\n    movieDetailsError,\r\n    castRequested,\r\n    castLoaded\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(FullCast));","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport MoviesServices from '../../../services/services';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nconst MovieListItemWrapper = styled.div`\r\n    border-bottom: ${props => !props.hasBorder ? '1px solid rgb(227, 227, 227)' : 'none'};\r\n    font-size: 16px;\r\n    color: #000;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`   \r\n    font-weight: 400;\r\n    padding: 8px 16px;\r\n    width: 70px;\r\n    text-align: center;\r\n`;\r\n\r\nconst MovieTitleWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    white-space: pre-wrap;\r\n    padding: 8px 0 8px 16px;\r\n`;\r\n\r\nconst MovieTitle = styled.span`\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    \r\n`;\r\n\r\nconst LikeCharacter = styled.span`\r\n    opacity: 0.5;\r\n`;\r\n\r\nconst Character = styled.span`\r\n    opacity: 0.8;\r\n`;\r\n\r\nconst MoviePreviewButton = styled.div`\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n    border: 1px solid #000;\r\n    cursor: pointer;\r\n    position: relative;\r\n    display: ${props => props.width < 415 ? 'none' : 'block'};\r\n\r\n    .popover-body {\r\n        width: 535px;\r\n        background-color: rgb(3, 37, 65);\r\n        color: #fff;\r\n        border-radius: 4px;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        cursor: default;\r\n        padding: 13px;\r\n    }\r\n\r\n    .bs-popover-top > .arrow::after, .bs-popover-auto[x-placement^=\"top\"] > .arrow::after{\r\n        border-top-color: rgb(3, 37, 65);\r\n    }\r\n`;\r\n\r\nconst CircleHover = styled.div`\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-color: #000;\r\n    opacity: ${(props) => props.show ? 1 : 0};\r\n    transition: opacity 200ms;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst PopoverImgWrapper = styled.div``;\r\n\r\nconst PopoverPoster = styled.img`\r\n    width: 94px;\r\n    height: 141px;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverContentWrapper = styled.div`\r\n    padding-left: 20px;\r\n`;\r\n\r\nconst PopoverTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst PopoverTitle = styled.div`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PopoverDescription = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 21.6px;\r\n`;\r\n\r\nconst PopoverRate = styled.div`\r\n    background-color: rgb(1, 180, 228);\r\n    padding: 4px 8px;\r\n    font-size: 14.4px;\r\n    border-radius: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    margin-left: 10px;\r\n\r\n    & i {\r\n        font-size: 10px;\r\n        margin-right: 3px;\r\n    }\r\n`;\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size: 1.2em;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: ${props => props.width < 415 ? '0 15px' : '0'};\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst FilterWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    margin-right: 10px;\r\n\r\n    &:hover {\r\n        color:rgb(30, 213, 169);\r\n    }\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst PersonDetailsCasts = ({cast, width}) => {\r\n    const [castItem, setCastItem] = useState([]);\r\n    const [filterSelected, setFilterSelected] = useState(false);\r\n    const noDateCasts = cast.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCasts = cast.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCast = releaseDateCasts.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n\r\n    const allCasts = [...noDateCasts, ...sortedCast];\r\n\r\n    const filteredByMovieType = allCasts.filter(item => item.media_type === 'movie');\r\n    const filteredByTVType = allCasts.filter(item => item.media_type === 'tv');\r\n    const movieQuantity = filteredByMovieType.length;\r\n    const tvQuantity = filteredByTVType.length;\r\n    const movies = (casts) => {\r\n        return casts.map((item, index, arr) => {\r\n            if (item.title || item.name) {\r\n                const releaseDate = item.release_date || item.first_air_date;\r\n                const fullDateToYear = moment(releaseDate).format('YYYY');\r\n                const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n                let current;\r\n                let next;\r\n                if (index > 0) {\r\n                    current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                    next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n                }\r\n                return (\r\n                    <HistoryItem key={index} cast={item} date={date} hasBorder={next === current} width={width}/>  \r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n    }, []);\r\n\r\n    const onSelect = (content) => {\r\n        const data = movies(content)\r\n        setCastItem(data)\r\n        setFilterSelected(true)\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        const data = movies(allCasts)\r\n        setCastItem(data)\r\n        setFilterSelected(false)\r\n    }\r\n\r\n    const clearButton = filterSelected ? <ClearButton onClick={clearFilter}>Очистить</ClearButton> : null;\r\n\r\n    return (\r\n        <>\r\n            <MovieListWrapper>\r\n                <DepartmentListTitle width={width}>\r\n                    Актёрское искусство\r\n                    <FilterWrapper>\r\n                        {clearButton}\r\n                        <DropdownButton id=\"dropdown-basic-button\" title=\"Все\">\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByMovieType)}>Фильмы {movieQuantity}</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => onSelect(filteredByTVType)}>ТВ Сериалы {tvQuantity}</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </FilterWrapper>\r\n                </DepartmentListTitle>\r\n                <MovieListContent>\r\n                    {castItem}\r\n                </MovieListContent>\r\n            </MovieListWrapper>\r\n        </>\r\n    ); \r\n}\r\n\r\nconst HistoryItem = ({cast, date, hasBorder, width}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = cast.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + cast.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = cast.vote_average.toFixed(1);\r\n    const tvEpisodes = cast.episode_count ? `(${cast.episode_count} эпизодов)` : null;\r\n  \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n            <ReleaseDate>{date}</ReleaseDate>\r\n            <MoviePreviewButton \r\n                ref={ref}\r\n                onClick={handleClick}\r\n                width={width}\r\n            >\r\n                    <CircleHover show={show}></CircleHover>  \r\n            </MoviePreviewButton>\r\n                <Overlay \r\n                    show={show}\r\n                    target={target}\r\n                    container={ref.current}\r\n                    rootClose={true}\r\n                    onHide={handleClick}\r\n                >\r\n                    <Popover>\r\n                        <Popover.Content>\r\n                            <PopoverImgWrapper>\r\n                                <PopoverPoster \r\n                                    src={src} \r\n                                    alt={cast.title || cast.name} \r\n                                    onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                />\r\n                            </PopoverImgWrapper>\r\n                            <PopoverContentWrapper>\r\n                                <PopoverTitleWrapper>\r\n                                    <PopoverTitle\r\n                                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                                    >{cast.title || cast.name}</PopoverTitle>\r\n                                    <PopoverRate>\r\n                                        <i className=\"fas fa-star\"></i> {rate}\r\n                                    </PopoverRate>\r\n                                </PopoverTitleWrapper> \r\n                                <PopoverDescription>{textEllipsis(cast.overview, 96)}</PopoverDescription>    \r\n                            </PopoverContentWrapper>\r\n                        </Popover.Content>\r\n                    </Popover>\r\n                </Overlay>\r\n                <MovieTitleWrapper>\r\n                    <MovieTitle\r\n                        onClick={() => handleRouting(cast.id, cast.media_type)}\r\n                    >\r\n                        {cast.title || cast.name}\r\n                    </MovieTitle>\r\n                    <LikeCharacter> {tvEpisodes} как </LikeCharacter>\r\n                    <Character>{cast.character}</Character>\r\n                </MovieTitleWrapper>\r\n        </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\nexport default PersonDetailsCasts;\r\nexport {CircleHover, MovieTitleWrapper, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate};","import React, {useState} from 'react';\r\nimport Overlay from 'react-bootstrap/Overlay';\r\nimport Popover from 'react-bootstrap/Popover';\r\nimport moment from 'moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport textEllipsis from 'text-ellipsis';\r\nimport {CircleHover, MovieTitleWrapper, MoviePreviewButton, Character, LikeCharacter, MovieTitle, ReleaseDate, MovieListItemWrapper, PopoverImgWrapper, PopoverPoster, PopoverContentWrapper, PopoverTitleWrapper, PopoverTitle, PopoverDescription, PopoverRate} from './personDetailsCasts';\r\nimport MoviesServices from '../../../services/services';\r\n\r\n\r\n\r\nconst PersonDetailsCrew = ({crew, width}) => {\r\n    const noDateCrew = crew.filter((item) => !item.release_date && !item.first_air_date);\r\n    const releaseDateCrew = crew.filter((item) => item.release_date || item.first_air_date);\r\n    const sortedCrew = releaseDateCrew.sort((a, b) => {\r\n        const previous = new Date(a.release_date || a.first_air_date);\r\n        const current = new Date(b.release_date || b.first_air_date);\r\n        return current - previous;\r\n    });\r\n    \r\n    const allCrews = [...noDateCrew, ...sortedCrew];\r\n    \r\n    const crewItem = allCrews.map((item, index, arr) => {\r\n        if (item.title || item.name) {\r\n            const releaseDate = item.release_date || item.first_air_date;\r\n            const fullDateToYear = moment(releaseDate).format('YYYY');\r\n            const date = (!item.release_date && !item.first_air_date) ? '—' : fullDateToYear;\r\n            let current;\r\n            let next;\r\n            if (index > 0) {\r\n                current = arr[index]?.release_date ? yearFormatter(arr[index]?.release_date) : yearFormatter(arr[index]?.first_air_date);\r\n                next = arr[index + 1]?.release_date ? yearFormatter(arr[index + 1]?.release_date) : yearFormatter(arr[index + 1]?.first_air_date);\r\n            }\r\n            return (\r\n                <HistoryItem key={index} item={item} date={date} hasBorder={next === current} width={width}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return crewItem;\r\n}\r\n\r\n\r\nconst HistoryItem = ({item, date, hasBorder, width}) => {\r\n    const history = useHistory();\r\n    const ref = React.useRef(null);\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n\r\n    const handleClick = (event, index) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const src = item.poster_path ? ('https://image.tmdb.org/t/p/w94_and_h141_bestv2' + item.poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n    const rate = item.vote_average.toFixed(1);\r\n    const tvEpisodes = item.episode_count ? `(${item.episode_count} эпизодов)` : null;\r\n    \r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id)\r\n            .then((res) => {\r\n                debugger\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <MovieListItemWrapper hasBorder={hasBorder}>\r\n                <ReleaseDate>{date}</ReleaseDate>\r\n                <MoviePreviewButton \r\n                    ref={ref}\r\n                    onClick={handleClick}\r\n                    width={width}\r\n                >\r\n                    <CircleHover show={show}></CircleHover>  \r\n                </MoviePreviewButton>\r\n                    <Overlay \r\n                        show={show}\r\n                        target={target}\r\n                        container={ref.current}\r\n                        rootClose={true}\r\n                        onHide={handleClick}\r\n                    >\r\n                        <Popover>\r\n                            <Popover.Content>\r\n                                <PopoverImgWrapper>\r\n                                    <PopoverPoster \r\n                                        src={src} \r\n                                        alt={item.title || item.name} \r\n                                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                                    />\r\n                                </PopoverImgWrapper>\r\n                                <PopoverContentWrapper>\r\n                                    <PopoverTitleWrapper>\r\n                                        <PopoverTitle\r\n                                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                                        >{item.title || item.name}</PopoverTitle>\r\n                                        <PopoverRate>\r\n                                            <i className=\"fas fa-star\"></i> {rate}\r\n                                        </PopoverRate>\r\n                                    </PopoverTitleWrapper> \r\n                                    <PopoverDescription>{textEllipsis(item.overview, 96)}</PopoverDescription>    \r\n                                </PopoverContentWrapper>\r\n                            </Popover.Content>\r\n                        </Popover>\r\n                    </Overlay>\r\n                    <MovieTitleWrapper>\r\n                        <MovieTitle\r\n                            onClick={() => handleRouting(item.id, item.media_type)}\r\n                        >{item.title || item.name}</MovieTitle>\r\n                        <LikeCharacter> {tvEpisodes} ... </LikeCharacter>\r\n                        <Character>{item.job}</Character>\r\n                    </MovieTitleWrapper>\r\n            </MovieListItemWrapper>\r\n    );\r\n}\r\n\r\nconst yearFormatter = (date) => {\r\n    return moment(date).format('YYYY');\r\n}\r\n\r\n\r\nexport default PersonDetailsCrew;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PersonDetailsCrew from './personDetailsCrew';\r\n\r\nconst MovieListWrapper = styled.div``;\r\n\r\nconst DepartmentListTitle = styled.div`\r\n    font-size:20.8px;\r\n    font-weight:600;\r\n    margin: 10px 0;\r\n    padding: ${props => props.width < 415 ? '0 15px' : '0'};\r\n`;\r\n\r\nconst MovieListContent = styled.div`\r\n    box-shadow:rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n    border: 1px solid rgb(227, 227, 227);\r\n`;\r\n\r\nconst CrewByDepartments = ({crew, width}) => {\r\n\r\n    const filteredCrew = (department) => {\r\n        return crew.filter(item => item.department === department);\r\n    }\r\n\r\n    const production = !filteredCrew(\"Production\").length ? null : <Department crew={filteredCrew(\"Production\")} width={width}/>;\r\n    const writing = !filteredCrew(\"Writing\").length ? null : <Department crew={filteredCrew(\"Writing\")} width={width}/>;\r\n    const art = !filteredCrew(\"Art\").length ? null : <Department crew={filteredCrew(\"Art\")} width={width}/>;\r\n    const camera = !filteredCrew(\"Camera\").length ? null : <Department crew={filteredCrew(\"Camera\")} width={width}/>;\r\n    const makeUp = !filteredCrew(\"Costume & Make-Up\").length ? null : <Department crew={filteredCrew(\"Costume & Make-Up\")} width={width}/>;\r\n    const crews = !filteredCrew(\"Crew\").length ? null : <Department crew={filteredCrew(\"Crew\")} width={width}/>;\r\n    const directing = !filteredCrew(\"Directing\").length ? null : <Department crew={filteredCrew(\"Directing\")} width={width}/>;\r\n    const editing = !filteredCrew(\"Editing\").length ? null : <Department crew={filteredCrew(\"Editing\")} width={width}/>;\r\n    const lighting = !filteredCrew(\"Lighting\").length ? null : <Department crew={filteredCrew(\"Lighting\")} width={width}/>;\r\n    const sound = !filteredCrew(\"Sound\").length ? null : <Department crew={filteredCrew(\"Sound\")} width={width}/>;\r\n    const visualEffects = !filteredCrew(\"Visual Effects\").length ? null : <Department crew={filteredCrew(\"Visual Effects\")} width={width}/>;\r\n\r\n    return (\r\n        <MovieListWrapper>\r\n            {production}\r\n            {writing}\r\n            {art}\r\n            {camera}\r\n            {makeUp}\r\n            {crews}\r\n            {directing}\r\n            {editing}\r\n            {lighting}\r\n            {sound}\r\n            {visualEffects}\r\n        </MovieListWrapper>\r\n    )\r\n}\r\n\r\nconst Department = ({crew, width}) => {\r\n    return (\r\n        <>\r\n            <DepartmentListTitle width={width}>\r\n                {crew[0].department}\r\n            </DepartmentListTitle>\r\n            <MovieListContent>\r\n                <PersonDetailsCrew crew={crew} width={width}/>\r\n            </MovieListContent>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CrewByDepartments;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport { PersonDetailsCasts, CrewByDepartments } from \"./index\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport MoviesServices from \"../../../services/services\";\r\nimport {\r\n    Overlay,\r\n    LinkIconWrapper,\r\n    Link,\r\n} from \"../../moviesPage/components/movieDetailsPage/components/originalDetails\";\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst CastTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 22px;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 100%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ImgWrapper = styled.img`\r\n    width: 300px;\r\n    height: 450px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n    max-width: 890px;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n    font-size: 35.2px;\r\n    font-weight: 700;\r\n    color: #000;\r\n`;\r\n\r\nconst BioWrapper = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n    margin: 30px 0;\r\n`;\r\n\r\nconst BioContent = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n    height: ${(props) =>\r\n        props.mainHeight && props.childRef > 200 ? \"200px\" : \"auto\"};\r\n    overflow: hidden;\r\n    transition: height 200ms;\r\n    text-align: justify;\r\n\r\n    &.open {\r\n        height: ${(props) => props.childRef + \"px\"};\r\n    }\r\n`;\r\n\r\nconst PersonalInfo = styled.div`\r\n    font-size: 20.8px;\r\n    font-weight: 600;\r\n`;\r\n\r\nconst PersonalInfoItemTitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst PersonalInfoItemSubtitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n`;\r\n\r\nconst AlsoKnowWrapper = styled.div`\r\n    margin-top: 8px;\r\n`;\r\n\r\nconst ReadMoreButton = styled.button`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${(props) =>\r\n        props.mainHeight && props.childRef > 200 ? \"flex\" : \"none\"};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228);\r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PersonDetails = ({ person, cast, crew, socialLink, history }) => {\r\n    const { facebook_id, instagram_id, twitter_id } = socialLink;\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n\r\n    const onOpen = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight);\r\n    };\r\n    const classNames = isOpen ? \"open\" : \"\";\r\n    const src = !person.profile_path\r\n        ? process.env.PUBLIC_URL + \"/assets/avatar.png\"\r\n        : \"https://image.tmdb.org/t/p/w300_and_h450_bestv2\" +\r\n          person.profile_path;\r\n    const biography = !person.biography ? (\r\n        `У нас нет биографии для ${person.name}`\r\n    ) : (\r\n        <div ref={(element) => getElementHeight(element)}>\r\n            {person.biography}\r\n        </div>\r\n    );\r\n    const gender = person.gender === 1 ? \"Женский\" : \"Мужской\";\r\n    const alsoKnow = person.also_known_as.map((item, index) => {\r\n        return <AlsoKnowWrapper key={index}>{item}</AlsoKnowWrapper>;\r\n    });\r\n    const birthday = person.birthday ? person.birthday : \"-\";\r\n    const ageAlive = !person.birthday\r\n        ? \" \"\r\n        : person.deathday\r\n        ? null\r\n        : `(${moment().diff(`${person.birthday}`, \"years\")} лет)`;\r\n    const ageDead = moment([person.deathday]).diff(\r\n        moment([person.birthday]),\r\n        \"years\"\r\n    );\r\n    const dateOfDeath = !person.deathday ? null : (\r\n        <PersonalInfoItemTitle>\r\n            Дата смерти\r\n            <PersonalInfoItemSubtitle>\r\n                {person.deathday} ({ageDead} лет)\r\n            </PersonalInfoItemSubtitle>\r\n        </PersonalInfoItemTitle>\r\n    );\r\n    const acting = cast.length ? <PersonDetailsCasts cast={cast} /> : null;\r\n    const filmCrew = crew.length ? <CrewByDepartments crew={crew} /> : null;\r\n    const famousCast = cast.length ? (\r\n        <FamousCast cast={cast} history={history} />\r\n    ) : null;\r\n\r\n    const facebook = (\r\n        <Link\r\n            href={`https://www.facebook.com/${facebook_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link\r\n            href={`https://twitter.com/${twitter_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link\r\n            href={`https://www.instagram.com/${instagram_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? (\r\n        <Overlay logo={facebook} page={\"Facebook\"} />\r\n    ) : null;\r\n    const overlayTwitter = twitter_id ? (\r\n        <Overlay logo={twitter} page={\"Twitter\"} />\r\n    ) : null;\r\n    const overlayInstagram = instagram_id ? (\r\n        <Overlay logo={instagram} page={\"Instagram\"} />\r\n    ) : null;\r\n\r\n    return (\r\n        <Container className=\"mt-4\">\r\n            <Row>\r\n                <Col className=\"col-4\">\r\n                    <ImgWrapper src={src} alt={person.name} />\r\n                    <LinkIconWrapper>\r\n                        {overlayFacebook}\r\n                        {overlayTwitter}\r\n                        {overlayInstagram}\r\n                    </LinkIconWrapper>\r\n                    <PersonalInfo>Персональная информация</PersonalInfo>\r\n                    <PersonalInfoItemTitle>\r\n                        Известность за\r\n                        <PersonalInfoItemSubtitle>\r\n                            {person.known_for_department}\r\n                        </PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    <PersonalInfoItemTitle>\r\n                        Пол\r\n                        <PersonalInfoItemSubtitle>\r\n                            {gender}\r\n                        </PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    <PersonalInfoItemTitle>\r\n                        Дата рождения\r\n                        <PersonalInfoItemSubtitle>\r\n                            {birthday} {ageAlive}\r\n                        </PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    {dateOfDeath}\r\n                    <PersonalInfoItemTitle>\r\n                        Место рождения\r\n                        <PersonalInfoItemSubtitle>\r\n                            {person.place_of_birth}\r\n                        </PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                    <PersonalInfoItemTitle>\r\n                        Также известность как\r\n                        <PersonalInfoItemSubtitle>\r\n                            {alsoKnow}\r\n                        </PersonalInfoItemSubtitle>\r\n                    </PersonalInfoItemTitle>\r\n                </Col>\r\n                <Col className=\"col-8\">\r\n                    <DescriptionWrapper>\r\n                        <TitleWrapper>{person.name}</TitleWrapper>\r\n                        <BioWrapper>\r\n                            Биография\r\n                            <BioContent\r\n                                className={classNames}\r\n                                childRef={elementHeight}\r\n                                mainHeight={person.biography}\r\n                            >\r\n                                {biography}\r\n                            </BioContent>\r\n                            <ReadMoreButton\r\n                                childRef={elementHeight}\r\n                                mainHeight={person.biography}\r\n                                onClick={onOpen}\r\n                            >\r\n                                Читать ещё{\" \"}\r\n                                <i className=\"fas fa-chevron-right\"></i>\r\n                            </ReadMoreButton>\r\n                        </BioWrapper>\r\n                    </DescriptionWrapper>\r\n                    {famousCast}\r\n                    {acting}\r\n                    {filmCrew}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst FamousCast = ({ cast, history }) => {\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n\r\n    const handleRouting = (id, type) => {\r\n        const moviesServices = new MoviesServices();\r\n        moviesServices.getMovieDetails(id).then((res) => {\r\n            if (res && res.status_code === 34) {\r\n                history.push(`/collection/${id}`);\r\n            } else {\r\n                history.push(`/${type}/${id}`);\r\n            }\r\n        });\r\n    };\r\n\r\n    let carousel;\r\n\r\n    const castSortedByPopularity = cast\r\n        .filter((item) => item.media_type === \"movie\")\r\n        .sort((a, b) => b.popularity - a.popularity)\r\n        .filter((item, index) => index <= 7);\r\n\r\n    const castItem = castSortedByPopularity.map((item, index) => {\r\n        let src = item.poster_path\r\n            ? \"https://image.tmdb.org/t/p/w150_and_h225_bestv2\" +\r\n              item.poster_path\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n        return (\r\n            <CastItemWrapper key={index}>\r\n                <CastImg\r\n                    src={src}\r\n                    alt={item.name || item.title}\r\n                    onClick={() => handleRouting(item.id, item.media_type)}\r\n                />\r\n                <CastName\r\n                    onClick={() => handleRouting(item.id, item.media_type)}\r\n                >\r\n                    <EllipsisText text={item.name || item.title} length={13} />\r\n                </CastName>\r\n            </CastItemWrapper>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <CastTitle>Известность за</CastTitle>\r\n            <Carousel\r\n                renderArrow={myArrow}\r\n                itemsToScroll={1}\r\n                itemsToShow={5}\r\n                focusOnSelect={false}\r\n                ref={(ref) => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    );\r\n};\r\n\r\nexport default PersonDetails;\r\n","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport {\r\n    Overlay,\r\n    Link,\r\n} from \"../../../moviesPage/components/movieDetailsPage/components/originalDetails\";\r\nimport { PersonDetailsCasts, CrewByDepartments } from '../index';\r\n\r\nconst LinkIconWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CarouselWrapper = styled.div`\r\n    position: relative;\r\n\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 285px;\r\n\r\n        * {\r\n            outline: none;\r\n        }\r\n\r\n        .rec-item-wrapper {\r\n            height: 250px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PosterWrapper = styled.div`\r\n    min-width: 40vw;\r\n    width: 40vw;\r\n    height: 40vw;\r\n    margin: 0 auto 15px;\r\n\r\n    & img {\r\n        border-radius: 7px;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nconst NameWrapper = styled.div`\r\n    font-size: 2em;\r\n    font-weight: 700;\r\n    text-align: center;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1.3em;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst SectionSubTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n    margin-bottom: 7px;\r\n\r\n    & div {\r\n        font-weight: 400;\r\n    }\r\n`;\r\n\r\nconst BiographyWrapper = styled.div`\r\n            height: ${props =>\r\n            props.mainHeight && props.childRef > 200 ? \"200px\" : \"auto\"};\r\n        overflow: hidden;\r\n        transition: height 200ms;\r\n\r\n        &.open {\r\n            height: ${(props) => props.childRef + \"px\"};\r\n        }\r\n        \r\n`;\r\n\r\nconst ReadMoreButton = styled.div`\r\n    max-width: 111px;\r\n    width: 100%;\r\n    border: none;\r\n    background-color: transparent;\r\n    color: rgb(1, 180, 228);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    position: absolute;\r\n    right: 0;\r\n    display: ${(props) =>\r\n        props.mainHeight && props.childRef > 200 ? \"flex\" : \"none\"};\r\n    align-items: baseline;\r\n    justify-content: space-between;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n\r\n    &:hover {\r\n        color: rgb(30, 213, 169);\r\n    }\r\n\r\n    &:hover i {\r\n        color: rgb(1, 180, 228);\r\n    }\r\n\r\n    i {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 5%;\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: 95%;\r\n`;\r\n\r\nconst CastItemWrapper = styled.div`\r\n    border-radius: 5px;\r\n    width: 140px;\r\n    height: 240px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 2px 8px 0px;\r\n`;\r\n\r\nconst CastImg = styled.img`\r\n    border-top-right-radius: 5px;\r\n    border-top-left-radius: 5px;\r\n    width: 100%;\r\n    height: 195px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    padding: 10px 10px 0;\r\n    cursor: pointer;\r\n`;\r\n\r\n\r\nconst PersonDetailsMobile = ({ person, cast, crew, socialLink, MoviesService, history, width }) => {\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [elementHeight, setElementHeight] = useState(0);\r\n\r\n    const onOpen = () => {\r\n        setOpen(!isOpen);\r\n    };\r\n\r\n    const getElementHeight = (element) => {\r\n        setElementHeight(element?.clientHeight);\r\n    };\r\n    const classNames = isOpen ? \"open\" : \"\";\r\n\r\n    const {\r\n        known_for_department,\r\n        birthday,\r\n        deathday,\r\n        name,\r\n        gender,\r\n        biography,\r\n        place_of_birth, \r\n        profile_path\r\n    } = person;\r\n\r\n    const src = profile_path ? `//image.tmdb.org/t/p/w235_and_h235_face${profile_path}` : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n    const personGender = gender === 1 ? \"Женский\" : \"Мужской\";\r\n    const personBirthday = birthday ? birthday : \"-\";\r\n    const ageAlive = !birthday ? \" \" : deathday ? null\r\n        : `(${moment().diff(`${birthday}`, \"years\")} лет)`;\r\n\r\n    const ageDead = moment([deathday]).diff(moment([birthday]),\"years\");\r\n    const dateOfDeath = !deathday ? null : (\r\n        <SectionSubTitle>\r\n            Дата смерти\r\n            <div>\r\n                {deathday} ({ageDead} лет)\r\n            </div>\r\n        </SectionSubTitle>\r\n    );\r\n    const personBiography = !biography ? (\r\n        `У нас нет биографии для ${name}`\r\n    ) : (\r\n        <div ref={(element) => getElementHeight(element)}>\r\n            {biography}\r\n        </div>\r\n    );\r\n\r\n    const { facebook_id, instagram_id, twitter_id } = socialLink;\r\n\r\n    const facebook = (\r\n        <Link\r\n            href={`https://www.facebook.com/${facebook_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-facebook-f\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const twitter = (\r\n        <Link\r\n            href={`https://twitter.com/${twitter_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-twitter\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const instagram = (\r\n        <Link\r\n            href={`https://www.instagram.com/${instagram_id}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <i className=\"fab fa-instagram\"></i>\r\n        </Link>\r\n    );\r\n\r\n    const overlayFacebook = facebook_id ? (\r\n        <Overlay logo={facebook} page={\"Facebook\"} />\r\n    ) : null;\r\n    const overlayTwitter = twitter_id ? (\r\n        <Overlay logo={twitter} page={\"Twitter\"} />\r\n    ) : null;\r\n    const overlayInstagram = instagram_id ? (\r\n        <Overlay logo={instagram} page={\"Instagram\"} />\r\n    ) : null;\r\n\r\n    const famousCast = cast.length ? <FamousCast cast={cast} history={history} MoviesService={MoviesService} /> : null;\r\n    const acting = cast.length ? <PersonDetailsCasts cast={cast} width={width} /> : null;\r\n    const filmCrew = crew.length ? <CrewByDepartments crew={crew} width={width}/> : null;\r\n\r\n    return (\r\n        <Container className='mt-4'>\r\n            <Row>\r\n                <Col className=\"px-0\">\r\n                    <PosterWrapper>\r\n                        <img src={src} alt={name}/>\r\n                    </PosterWrapper>\r\n                    <NameWrapper>\r\n                        {name}\r\n                    </NameWrapper>\r\n                    <LinkIconWrapper>\r\n                        {overlayFacebook}\r\n                        {overlayTwitter}\r\n                        {overlayInstagram}\r\n                    </LinkIconWrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row className='mt-4'>\r\n                <Col>\r\n                    <SectionTitle>\r\n                        Персональная информация\r\n                    </SectionTitle>\r\n                    <SectionSubTitle>\r\n                        Известность за\r\n                        <div>{known_for_department}</div>\r\n                    </SectionSubTitle>\r\n                    <SectionSubTitle>\r\n                        Пол\r\n                        <div>{personGender}</div>\r\n                    </SectionSubTitle>\r\n                    <SectionSubTitle>\r\n                        Дата рождения\r\n                        <div>{personBirthday} {ageAlive}</div>\r\n                    </SectionSubTitle>\r\n                    {dateOfDeath}\r\n                    <SectionSubTitle>\r\n                        Место рождения\r\n                        <div>{place_of_birth}</div>\r\n                    </SectionSubTitle>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <SectionTitle>\r\n                        Биография\r\n                    </SectionTitle>\r\n                    <SectionSubTitle>\r\n                        <BiographyWrapper\r\n                            className={classNames}\r\n                            childRef={elementHeight}\r\n                            mainHeight={biography}\r\n                        >\r\n                            {personBiography}\r\n                        </BiographyWrapper>\r\n                        <ReadMoreButton\r\n                            childRef={elementHeight}\r\n                            mainHeight={biography}\r\n                            onClick={onOpen}\r\n                        >\r\n                            Читать ещё{\" \"}\r\n                            <i className=\"fas fa-chevron-right\"></i>\r\n                        </ReadMoreButton>\r\n                    </SectionSubTitle>\r\n                </Col>\r\n            </Row>\r\n            <Row className='mt-4'>\r\n                <Col>\r\n                    {famousCast}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className='px-0'>\r\n                    {acting}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className='px-0'>\r\n                    {filmCrew}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst FamousCast = ({ cast, history, MoviesService }) => {\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return <span style={{ display: \"none\" }}></span>;\r\n    };\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id).then((res) => {\r\n            if (res && res.status_code === 34) {\r\n                history.push(`/collection/${id}`);\r\n            } else {\r\n                history.push(`/${type}/${id}`);\r\n            }\r\n        });\r\n    };\r\n\r\n    let carousel;\r\n\r\n    const castSortedByPopularity = cast\r\n    .filter((item) => item.media_type === \"movie\")\r\n    .sort((a, b) => b.popularity - a.popularity)\r\n    .filter((item, index) => index <= 7);\r\n\r\n    const castItem = castSortedByPopularity\r\n        .filter((item, index) => index <= 7)\r\n        .map((item, index) => {\r\n            let src = item.poster_path\r\n                ? \"//image.tmdb.org/t/p/w150_and_h225_bestv2\" +\r\n                  item.poster_path\r\n                : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n            return (\r\n                <CastItemWrapper key={index}>\r\n                    <CastImg\r\n                        src={src}\r\n                        alt={item.name || item.title}\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    />\r\n                    <CastName\r\n                        onClick={() => handleRouting(item.id, item.media_type)}\r\n                    >\r\n                        <EllipsisText\r\n                            text={item.name || item.title}\r\n                            length={13}\r\n                        />\r\n                    </CastName>\r\n                </CastItemWrapper>\r\n            );\r\n        });\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitle>Известность за</SectionTitle>\r\n            <Carousel\r\n                renderArrow={myArrow}\r\n                itemsToScroll={2}\r\n                itemsToShow={2}\r\n                focusOnSelect={false}\r\n                ref={(ref) => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {castItem}\r\n            </Carousel>\r\n            <PrevButton onClick={() => carousel.slidePrev()}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton onClick={() => carousel.slideNext()}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper>\r\n    );\r\n};\r\n\r\nexport default PersonDetailsMobile;\r\n","export const PERSON_BIOGRAPHY_REQUESTED = 'PERSON_BIOGRAPHY_REQUESTED';\r\nexport const PERSON_BIOGRAPHY_LOADED = 'PERSON_BIOGRAPHY_LOADED';\r\nexport const PERSON_BIOGRAPHY_ERROR = 'PERSON_BIOGRAPHY_ERROR';\r\n\r\nexport const PERSON_SOCIAL_LINK_REQUESTED = 'PERSON_SOCIAL_LINK_REQUESTED';\r\nexport const PERSON_SOCIAL_LINK_LOADED = 'PERSON_SOCIAL_LINK_LOADED';\r\nexport const PERSON_SOCIAL_LINK_ERROR = 'PERSON_SOCIAL_LINK_ERROR';","import React, { Component } from \"react\";\r\nimport Spinner from \"../shared/spinner/spinner\";\r\nimport { PersonDetails } from \"./components\";\r\nimport PersonDetailsMobile from \"./components/componentsMobile/personDetailsMob\";\r\nimport WithMoviesService from \"../hoc/withMoviesService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    personBiographyRequested,\r\n    personBiographyLoaded,\r\n    personBiographyError,\r\n    personSocialLinkRequested,\r\n    personSocialLinkLoaded,\r\n    personSocialLinkError,\r\n} from \"../../actions/actionsPersonDetailsPage/actionPersonDetailsPage\";\r\n\r\nclass PersonBiography extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            personId,\r\n            personBiographyRequested,\r\n            personSocialLinkRequested,\r\n        } = this.props;\r\n\r\n        personBiographyRequested();\r\n        personSocialLinkRequested();\r\n        this.getBiography(personId);\r\n        this.getPersonSocailLink(personId);\r\n    }\r\n\r\n    getBiography = (personId) => {\r\n        const {\r\n            MoviesService,\r\n            personBiographyLoaded,\r\n            personBiographyError,\r\n        } = this.props;\r\n\r\n        MoviesService.getPersonBiography(personId)\r\n            .then((response) => {\r\n                const payload = {\r\n                    person: response.biography,\r\n                    cast: response.combinedMoviesTv.cast,\r\n                    crew: response.combinedMoviesTv.crew,\r\n                };\r\n                personBiographyLoaded(payload);\r\n            })\r\n            .catch((error) => personBiographyError());\r\n    };\r\n\r\n    getPersonSocailLink = (personId) => {\r\n        const {\r\n            MoviesService,\r\n            personSocialLinkLoaded,\r\n            personSocialLinkError,\r\n        } = this.props;\r\n\r\n        MoviesService.getPersonExternalIds(personId)\r\n            .then((response) => personSocialLinkLoaded(response))\r\n            .catch((error) => personSocialLinkError());\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            person,\r\n            loading,\r\n            cast,\r\n            crew,\r\n            socialLink,\r\n            socialLinkLoading,\r\n            width,\r\n            history,\r\n            MoviesService\r\n        } = this.props;\r\n\r\n        if (loading || socialLinkLoading) {\r\n            return <Spinner />;\r\n        } else if (width < 415) {\r\n            return (\r\n                <PersonDetailsMobile \r\n                    person={person}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    socialLink={socialLink}\r\n                    history={history}\r\n                    MoviesService={MoviesService}\r\n                    width={width}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <PersonDetails\r\n                    person={person}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    socialLink={socialLink}\r\n                    history={history}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        person,\r\n        loading,\r\n        cast,\r\n        crew,\r\n        socialLink,\r\n        socialLinkLoading,\r\n    } = state.personDetailsPageReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        cast,\r\n        crew,\r\n        socialLink,\r\n        socialLinkLoading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    personBiographyRequested,\r\n    personBiographyLoaded,\r\n    personBiographyError,\r\n    personSocialLinkRequested,\r\n    personSocialLinkLoaded,\r\n    personSocialLinkError,\r\n};\r\n\r\nexport default WithMoviesService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(PersonBiography)\r\n);\r\n","import * as actionTypes from './actionTypesPersonDetailsPage';\r\n\r\nconst personBiographyRequested = () => {\r\n    return {\r\n        type: actionTypes.PERSON_BIOGRAPHY_REQUESTED\r\n    }\r\n}\r\n\r\nconst personBiographyLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PERSON_BIOGRAPHY_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst personBiographyError = () => {\r\n    return {\r\n        type: actionTypes.PERSON_BIOGRAPHY_ERROR\r\n    }\r\n}\r\n\r\nconst personSocialLinkRequested = () => {\r\n    return {\r\n        type: actionTypes.PERSON_SOCIAL_LINK_REQUESTED\r\n    }\r\n}\r\n\r\nconst personSocialLinkLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.PERSON_SOCIAL_LINK_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst personSocialLinkError = () => {\r\n    return {\r\n        type: actionTypes.PERSON_SOCIAL_LINK_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    personBiographyRequested,\r\n    personBiographyLoaded,\r\n    personBiographyError,\r\n    personSocialLinkRequested,\r\n    personSocialLinkLoaded,\r\n    personSocialLinkError\r\n}","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularTvRequested, popularTvLoaded, popularTvError, popularTvMoreRequested, popularTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass TVPopularPage extends Component {   \r\n    componentWillMount() { \r\n        if(!this.props.tv.length) {\r\n            this.props.popularTvRequested();\r\n            this.loadTV(this.props.popularTvLoaded)\r\n        }      \r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVPopular(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTv = () => {\r\n        const {page, popularTvMoreRequested, popularTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        popularTvMoreRequested();\r\n        this.loadTV(popularTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n\r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTv}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {popularTv, popularPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: popularTv,\r\n        page: popularPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularTvRequested,\r\n    popularTvLoaded,\r\n    popularTvMoreRequested,\r\n    popularTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVPopularPage));\r\n","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {airingTodayTvRequested, airingTodayTvLoaded, popularTvError, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass AiringTodayPage extends Component {\r\n    componentWillMount() {\r\n        if (!this.props.tv.length) {\r\n            this.props.airingTodayTvRequested();\r\n            this.loadTV(this.props.airingTodayTvLoaded);\r\n        }\r\n     }\r\n \r\n     loadTV = (success) => {\r\n         const {page, MoviesService, popularTvError} = this.props;\r\n \r\n         MoviesService.getTVAiringToday(page + 1)\r\n             .then((res) => success(res.results))\r\n             .catch(error => popularTvError())\r\n     }\r\n \r\n     loadMoreTV = () => {\r\n         const {page, airingTodayTvMoreRequested, airingTodayTvMoreLoaded} = this.props;\r\n \r\n         if (page > 500) {\r\n             return\r\n         }\r\n \r\n         airingTodayTvMoreRequested();\r\n         this.loadTV(airingTodayTvMoreLoaded)\r\n     }\r\n \r\n     render() {\r\n         const {tv, loading, loadingMore, history} = this.props;\r\n         \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n     }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {airingTodayTv, loading, loadingMore, airingTodayPage} = state.tvPageReducer;\r\n    return {\r\n        tv: airingTodayTv,\r\n        page: airingTodayPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    airingTodayTvRequested,\r\n    airingTodayTvLoaded,\r\n    airingTodayTvMoreRequested,\r\n    airingTodayTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(AiringTodayPage));","import React, { Component } from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {topRatedTvRequested, topRatedTvTvLoaded, popularTvError, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass TVTopRatedPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.topRatedTvRequested();\r\n           this.loadTV(this.props.topRatedTvTvLoaded)\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVTopRated(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n    \r\n    loadMoreTV = () => {\r\n        const {page, topRatedTvTvMoreRequested, topRatedTvTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        topRatedTvTvMoreRequested();\r\n        this.loadTV(topRatedTvTvMoreLoaded)\r\n    } \r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {topRatedTv, topRatedPage, loading, loadingMore} = state.tvPageReducer;\r\n    return {\r\n        tv: topRatedTv,\r\n        page: topRatedPage,\r\n        loading, \r\n        loadingMore\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    topRatedTvRequested,\r\n    topRatedTvTvLoaded,\r\n    topRatedTvTvMoreRequested,\r\n    topRatedTvTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(TVTopRatedPage));","import React, {Component} from 'react';\r\nimport MovieList from '../moviesPage/components/movieList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {onTheAirTvRequested, onTheAirTvLoaded, popularTvError, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\n\r\n\r\nclass OnTheAirPage extends Component {\r\n    componentWillMount() {\r\n       if (!this.props.tv.length) {\r\n           this.props.onTheAirTvRequested();\r\n           this.loadTV(this.props.onTheAirTvLoaded);\r\n       }\r\n    }\r\n\r\n    loadTV = (success) => {\r\n        const {page, MoviesService, popularTvError} = this.props;\r\n\r\n        MoviesService.getTVOnTheAir(page + 1)\r\n            .then((res) => success(res.results))\r\n            .catch(error => popularTvError())\r\n    }\r\n\r\n    loadMoreTV = () => {\r\n        const {page, onTheAirTvMoreRequested, onTheAirTvMoreLoaded} = this.props;\r\n\r\n        if (page > 500) {\r\n            return\r\n        }\r\n\r\n        onTheAirTvMoreRequested();\r\n        this.loadTV(onTheAirTvMoreLoaded)\r\n    }\r\n\r\n    render() {\r\n        const {tv, loading, loadingMore, history} = this.props;\r\n        \r\n        return(\r\n            <MovieList\r\n                movies={tv}\r\n                loading={loading}\r\n                loadingMore={loadingMore}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getMovies = {this.loadMoreTV}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {onTheAirTv, loading, loadingMore, onTheAirPage} = state.tvPageReducer;\r\n    return {\r\n        tv: onTheAirTv,\r\n        page: onTheAirPage,\r\n        loading,\r\n        loadingMore\r\n    }\r\n} \r\n\r\nconst mapDispatchToProps = {\r\n    onTheAirTvRequested,\r\n    onTheAirTvLoaded,\r\n    onTheAirTvMoreRequested,\r\n    onTheAirTvMoreLoaded,\r\n    popularTvError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(OnTheAirPage));","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport Spinner from '../../shared/spinner/spinner';\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport { Pagination } from '@material-ui/lab';\r\nimport useWindowSize from '../../shared/useWindowSize/useWindowSize';\r\n\r\nconst PersonItemWrapper = styled.div`\r\n    max-width: 235px;\r\n    width: 100%;\r\n    min-height: ${props => props.size < 415 ? '220px' : '287px'};\r\n    height: 100%;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst PersonImg = styled.img`\r\n    width: 100%;\r\n    height: ${props => props.size < 415 ? '63%' : '80%'};\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonNameWrapper = styled.div`\r\n    padding: 8px 10px;\r\n`;\r\n\r\nconst PersonName = styled.div`\r\n    font-size: 16px;\r\n    line-height: 19.2px;\r\n    font-weight: 700;\r\n    text-align: left;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst PersonCast = styled.div`\r\n    font-size: 14.4px;\r\n    line-height: 17.28px;\r\n    opacity: 0.6;\r\n    text-align: left;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 700;\r\n    padding: 0 0 15px 30px;\r\n`;\r\n\r\nconst PersonList = ({person, loading, history, url, totalPages, getPerson, page}) => {\r\n    const size = useWindowSize();\r\n    const personItem = person.map(item => {\r\n        const {name, known_for, profile_path, id} = item;\r\n        const src = profile_path ? ('https://image.tmdb.org/t/p/w235_and_h235_face' + profile_path) : (process.env.PUBLIC_URL + '/assets/avatar.png');\r\n        \r\n        const castArray = known_for.map(movie => movie.name || movie.title);\r\n        const castToString = castArray.join(', ');\r\n\r\n        return (\r\n            <Col key={id} className='mb-4 col-xl-3 col-6 col-sm-6'>\r\n                <PersonItemWrapper size={size}>\r\n                    <PersonImg \r\n                        size={size}\r\n                        src={src} \r\n                        alt={name}\r\n                        onClick={() => history.push(`${url}/${id}`)}\r\n                    />\r\n                    <PersonNameWrapper>\r\n                        <PersonName\r\n                            onClick={() => history.push(`${url}/${id}`)}\r\n                        >{name}</PersonName>\r\n                        <PersonCast>\r\n                            <EllipsisText text={castToString} length={size < 415 ? 15 : 27}/>\r\n                        </PersonCast>\r\n                    </PersonNameWrapper>  \r\n                </PersonItemWrapper>\r\n            </Col>\r\n        )\r\n    })\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container className=\"mt-4 mt-lg-5 container-xl\">\r\n                <Row>\r\n                    <SectionTitle>\r\n                        Популярные люди\r\n                    </SectionTitle>\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100\">\r\n                    {personItem}\r\n                </Row>\r\n                <Row className=\"justify-content-center mx-auto text-center w-100 mb-5\">\r\n                    <Pagination \r\n                        size={size < 415 ? \"small\" : 'large'}\r\n                        count={totalPages} \r\n                        boundaryCount={2}\r\n                        page={page}\r\n                        onChange={(event, page) => {\r\n                            getPerson(page)\r\n                        }}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PersonList;","export const POPULAR_PERSON_REQUESTED = 'POPULAR_PERSON_REQUESTED';\r\nexport const POPULAR_PERSON_LOADED = 'POPULAR_PERSON_LOADED';\r\nexport const POPULAR_PERSON_ERROR = 'POPULAR_PERSON_ERROR';","import React, { Component }  from 'react';\r\nimport PersonList from './components/personList';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {popularPersonRequested, popularPersonLoaded, popularPersonError} from '../../actions/actionsPopularPersonPage/actionPopularPersonPage';\r\n\r\nclass PersonPage extends Component {  \r\n    componentWillMount() {\r\n        const {popularPersonRequested, person, history, page} = this.props;\r\n        \r\n        history.push({\r\n            pathname: '/person',\r\n            search: `?page=${page}`\r\n        })\r\n\r\n        if (!person.length) {\r\n            popularPersonRequested();\r\n            this.loadPerson(); \r\n        }     \r\n    }\r\n\r\n    onServiceRequest = (page) => {\r\n        const {MoviesService, popularPersonError, popularPersonLoaded, history} = this.props;\r\n\r\n        MoviesService.getPopularPerson(page)\r\n        .then((res) => {\r\n            if (res) {\r\n                history.push({\r\n                    pathname: '/person',\r\n                    search: `?page=${page}`\r\n                });\r\n                const payload = {\r\n                    person: res.results,\r\n                    totalPages: res.total_pages,\r\n                    page: res.page\r\n                }\r\n                popularPersonLoaded(payload)\r\n            } \r\n        })\r\n        .catch(error => popularPersonError())\r\n    }\r\n\r\n    loadPerson = () => {\r\n        const {page} = this.props;\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    loadMorePerson = (page) => {\r\n        this.onServiceRequest(page)\r\n    }\r\n\r\n    render() {\r\n        const {person, loading, totalPages, page, history} = this.props;\r\n    \r\n        return(\r\n            <PersonList\r\n                person={person}\r\n                loading={loading}\r\n                page={page}\r\n                totalPages={totalPages}\r\n                history={history}\r\n                url={history.location.pathname}\r\n                getPerson = {this.loadMorePerson}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {person, loading, page, totalPages} = state.popularPersonReducer;\r\n    return {\r\n        person,\r\n        loading,\r\n        page,\r\n        totalPages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(PersonPage));","import * as actionTypes from './actionTypesPopularPersonPage';\r\n\r\nconst popularPersonRequested = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_REQUESTED\r\n    }\r\n}\r\n\r\nconst popularPersonLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst popularPersonError = () => {\r\n    return {\r\n        type: actionTypes.POPULAR_PERSON_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    popularPersonRequested,\r\n    popularPersonLoaded,\r\n    popularPersonError,\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport EllipsisText from \"react-ellipsis-text\";\r\nimport moment from \"moment\";\r\nimport useWindowSize from \"../../shared/useWindowSize/useWindowSize\";\r\n\r\nconst CastItemWrapper = styled.div`\r\n    max-width: ${props => props.large ? \"1218px\" : props.size < 415 ? props.size + 'px' : \"290px\"};\r\n    width: 100%;\r\n    display: flex;\r\n    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 7px;\r\n    margin: 10px 0 4px;\r\n`;\r\n\r\nconst CastImgWrapper = styled.img`\r\n    width: ${(props) => (props.large ? \"94px\" : \"60px\")};\r\n    min-width: ${(props) => (props.large ? \"94px\" : \"60px\")};\r\n    height: ${(props) => (props.large ? \"141px\" : \"60px\")};\r\n    border-top-left-radius: 7px;\r\n    border-bottom-left-radius: 7px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CastNameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 14px;\r\n    justify-content: center;\r\n`;\r\n\r\nconst CastName = styled.div`\r\n    font-size: ${(props) => (props.large ? \"19px\" : \"16px\")};\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        color: #08e8de;\r\n    }\r\n`;\r\n\r\nconst CastCharacter = styled.div`\r\n    font-size: 0.9em;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n    font-size: 1.4em;\r\n    margin: 20px 0;\r\n`;\r\n\r\nconst ReleaseDate = styled.div`\r\n    color: rgb(153, 153, 153);\r\n    font-size: 0.7em;\r\n    margin-bottom: ${props => props.size < 415 ? '5px' : '20px'};\r\n`;\r\n\r\nconst Section = styled.div`\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid rgb(215, 215, 215);\r\n`;\r\n\r\nconst CollectionCast = ({ cast, crew, parts, history }) => {\r\n    const size = useWindowSize();\r\n\r\n    const onGoToPersonDetails = (id) => {\r\n        history.push(`/person/${id}`);\r\n    };\r\n\r\n    const onGoToMovieDetails = (id) => {\r\n        history.push(`/movie/${id}`);\r\n    };\r\n\r\n    const castItem = cast\r\n        .filter((item, index) => index < 12)\r\n        .map((item, index) => {\r\n            const src = item.profile_path\r\n                ? \"https://image.tmdb.org/t/p/w64_and_h64_face\" +\r\n                  item.profile_path\r\n                : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper size={size}>\r\n                        <CastImgWrapper\r\n                            src={src}\r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >\r\n                                {item.name}\r\n                            </CastName>\r\n                            <CastCharacter>\r\n                                <EllipsisText\r\n                                    text={item.character}\r\n                                    length={size < 415 ? 30 : 20}\r\n                                />\r\n                            </CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            );\r\n        });\r\n\r\n    const crewItem = crew\r\n        .filter((item, index) => index < 8)\r\n        .map((item, index) => {\r\n            const src = item.profile_path\r\n                ? \"https://image.tmdb.org/t/p/w64_and_h64_face\" +\r\n                  item.profile_path\r\n                : process.env.PUBLIC_URL + \"/assets/avatar.png\";\r\n\r\n            return (\r\n                <Col sm={3} key={index}>\r\n                    <CastItemWrapper size={size}>\r\n                        <CastImgWrapper\r\n                            src={src}\r\n                            alt={item.name}\r\n                            onClick={() => onGoToPersonDetails(item.id)}\r\n                        />\r\n                        <CastNameWrapper>\r\n                            <CastName\r\n                                onClick={() => onGoToPersonDetails(item.id)}\r\n                            >\r\n                                {item.name}\r\n                            </CastName>\r\n                            <CastCharacter>{item.department}</CastCharacter>\r\n                        </CastNameWrapper>\r\n                    </CastItemWrapper>\r\n                </Col>\r\n            );\r\n        });\r\n\r\n    const partItem = parts.map((part, index) => {\r\n        const src = part.poster_path\r\n            ? \"https://image.tmdb.org/t/p/w94_and_h141_bestv2\" +\r\n              part.poster_path\r\n            : process.env.PUBLIC_URL + \"/assets/poster.png\";\r\n\r\n        return (\r\n            <Col sm={12} key={index}>\r\n                <CastItemWrapper large>\r\n                    <CastImgWrapper\r\n                        src={src}\r\n                        alt={part.title}\r\n                        large\r\n                        onClick={() => onGoToMovieDetails(part.id)}\r\n                    />\r\n                    <CastNameWrapper>\r\n                        <CastName\r\n                            large\r\n                            onClick={() => onGoToMovieDetails(part.id)}\r\n                        >\r\n                            {part.title}\r\n                            <ReleaseDate size={size}>\r\n                                {moment(part.release_date).format(\"DD/MM/YYYY\")}\r\n                            </ReleaseDate>\r\n                        </CastName>\r\n                        <CastCharacter>\r\n                            <EllipsisText text={part.overview} length={size < 415 ? 50 : 268} />\r\n                        </CastCharacter>\r\n                    </CastNameWrapper>\r\n                </CastItemWrapper>\r\n            </Col>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Container>\r\n            <Section>\r\n                <Row>\r\n                    <Col className=\"font-weight-bold\">\r\n                        <HeaderWrapper>В главных ролях</HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>{castItem}</Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className=\"font-weight-bold\">\r\n                        <HeaderWrapper>Постановщики</HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>{crewItem}</Row>\r\n            </Section>\r\n            <Section>\r\n                <Row>\r\n                    <Col className=\"font-weight-bold\">\r\n                        <HeaderWrapper>{parts.length} фильмов</HeaderWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>{partItem}</Row>\r\n            </Section>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CollectionCast;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { ImgWrapper, Title, DetailsList, Vote, Overview } from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport Rate from '../../shared/rate';\r\nimport { BackgroundWrapper } from '../../moviesPage/components/movieDetailsPage/components/details';\r\nimport CollectionCast from './collectionCast';\r\n\r\nconst DetailsTitleWrapper = styled.div`\r\n    font-weight: 700;\r\n    font-size: 16px;\r\n`;\r\n\r\nconst DetailsContentWrapper = styled.span`\r\n    font-weight: 400;\r\n`;\r\n\r\n\r\nconst CollectionDetails = ({ collection, history, genre, cast, crew, revenue }) => {\r\n\r\n    const { name, poster_path, overview, parts, backdrop_path } = collection;\r\n    const averageVote = (parts.reduce((sum, item) => {\r\n        return sum + item.vote_average;\r\n    }, 0) / parts.length).toFixed(2);\r\n    const { genres } = genre;\r\n    const src = !poster_path ? (process.env.PUBLIC_URL + '/assets/poster.png') : ('https://image.tmdb.org/t/p/w300_and_h450_bestv2' + poster_path);\r\n\r\n    const movieOverview = !overview ? '-' : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty('parts') && Object.keys(genre).length) {\r\n            parts.forEach(part => {\r\n                part.genre_ids.forEach(id => {\r\n                    genres.forEach(genre => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name)\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n        }\r\n        return null;\r\n    }\r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index\r\n    })\r\n    const uniquesToString = uniques.join(', ');\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue ? `$${nf.format(revenue).replace(/\\s/g, ',')}` : '-';\r\n\r\n    return (\r\n        <>\r\n            <BackgroundWrapper backdrop={backdrop_path}>\r\n                <Container>\r\n                    <Row className=\"justify-content-center mx-auto text-center w-100 align-items-center py-4\">\r\n                        <Col className='col-4'>\r\n                            <ImgWrapper src={src} alt={name} />\r\n                        </Col>\r\n                        <Col className='col-8 text-left px-0'>\r\n                            <Title>{name}</Title>\r\n                            <DetailsList>\r\n                                <Row>\r\n                                    <Col className=\"col-auto\">{uniquesToString}</Col>\r\n                                </Row>\r\n                                <Row className=\"font-weight-bold py-3\">\r\n                                    <Col className=\"col-auto d-flex\">\r\n                                        <Rate vote={averageVote} />\r\n                                        <Vote>Пользовательский счёт</Vote>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='flex-column py-2'>\r\n                                    <Col>\r\n                                        <Overview>\r\n                                            Обзор\r\n                                            </Overview>\r\n                                    </Col>\r\n                                    <Col>{movieOverview}</Col>\r\n                                </Row>\r\n                                <Row className='flex-column py-2'>\r\n                                    <Col>\r\n                                        <DetailsTitleWrapper>\r\n                                            Число фильмов: <DetailsContentWrapper>{parts.length}</DetailsContentWrapper>\r\n                                        </DetailsTitleWrapper>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <DetailsTitleWrapper>\r\n                                            Сборы: <DetailsContentWrapper>{movieRevenue}</DetailsContentWrapper>\r\n                                        </DetailsTitleWrapper>\r\n                                    </Col>\r\n                                </Row>\r\n                            </DetailsList>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </BackgroundWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CollectionDetails;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Rate from \"../../shared/rate\";\r\nimport CollectionCast from './collectionCast';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport {\r\n    GlobalWrapper,\r\n    BackgroundWrapper,\r\n    PosterWrapper,\r\n    TitleWrapper,\r\n    Title,\r\n    RateWrapper,\r\n    Vote,\r\n    GenreWrapper,\r\n    GenreList,\r\n    OverviewWrapper,\r\n    Overview,\r\n} from \"../../moviesPage/components/movieDetailsPage/components/mobileComponents/detailsMob\";\r\n\r\nconst SectionTitle = styled.div`\r\n    font-weight: 600;\r\n    font-size: 1em;\r\n\r\n    &:nth-last-of-type(2) {\r\n        margin-top: 20px;\r\n    }\r\n\r\n    & span {\r\n        font-weight: 400;\r\n    }\r\n`;\r\n\r\nconst CollectionDetailsMobile = ({\r\n    collection,\r\n    history,\r\n    cast,\r\n    crew,\r\n    revenue,\r\n    genre,\r\n}) => {\r\n    const { name, poster_path, overview, parts, backdrop_path } = collection;\r\n    const averageVote = (\r\n        parts.reduce((sum, item) => {\r\n            return sum + item.vote_average;\r\n        }, 0) / parts.length\r\n    ).toFixed(2);\r\n    const { genres } = genre;\r\n    const src = !poster_path\r\n        ? process.env.PUBLIC_URL + \"/assets/poster.png\"\r\n        : \"//image.tmdb.org/t/p/w116_and_h174_face\" + poster_path;\r\n\r\n    const movieOverview = !overview ? \"-\" : overview;\r\n    const genresList = [];\r\n    const getGenres = () => {\r\n        if (collection.hasOwnProperty(\"parts\") && Object.keys(genre).length) {\r\n            parts.forEach((part) => {\r\n                part.genre_ids.forEach((id) => {\r\n                    genres.forEach((genre) => {\r\n                        if (genre.id === id) {\r\n                            genresList.push(genre.name);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n    getGenres();\r\n    const uniques = genresList.filter((item, index, array) => {\r\n        return array.indexOf(item) === index;\r\n    });\r\n    const uniquesToString = uniques.join(\", \");\r\n\r\n    let nf = new Intl.NumberFormat();\r\n    const movieRevenue = revenue\r\n        ? `$${nf.format(revenue).replace(/\\s/g, \",\")}`\r\n        : \"-\";\r\n\r\n    return (\r\n        <>\r\n            <GlobalWrapper>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <BackgroundWrapper url={backdrop_path}>\r\n                                <PosterWrapper>\r\n                                    <img src={src} alt={name} />\r\n                                </PosterWrapper>\r\n                            </BackgroundWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <TitleWrapper>\r\n                                <Title>{name}</Title>\r\n                                <RateWrapper>\r\n                                    <Rate vote={averageVote} small isStatic />\r\n                                    <Vote>\r\n                                        Пользовательский <span>счёт</span>\r\n                                    </Vote>\r\n                                </RateWrapper>\r\n                            </TitleWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col className=\"px-0\">\r\n                            <GenreWrapper>\r\n                                <GenreList>{uniquesToString}</GenreList>\r\n                            </GenreWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <OverviewWrapper>\r\n                                <Overview>\r\n                                    <div>Обзор</div>\r\n                                    {movieOverview}\r\n                                </Overview>\r\n                                <SectionTitle>\r\n                                    Число фильмов: <span>{parts.length}</span>\r\n                                </SectionTitle>\r\n                                <SectionTitle>\r\n                                    Сборы: <span>{movieRevenue}</span>\r\n                                </SectionTitle>\r\n                            </OverviewWrapper>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </GlobalWrapper>\r\n            <CollectionCast cast={cast} crew={crew} parts={parts} history={history}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CollectionDetailsMobile;\r\n","export const COLLECTION_REQUESTED = 'COLLECTION_REQUESTED';\r\nexport const COLLECTION_LOADED = 'COLLECTION_LOADED';\r\nexport const COLLECTION_ERROR = 'COLLECTION_ERROR';\r\n\r\nexport const GENRES_REQUESTED = 'GENRES_REQUESTED';\r\nexport const GENRES_LOADED = 'GENRES_LOADED';\r\n\r\nexport const COLLECTION_MOVIE_DETAILS_LOADED = 'COLLECTION_MOVIE_DETAILS_LOADED';\r\n\r\nexport const COLLECTION_CAST_LOADED = 'COLLECTION_CAST_LOADED';","import React, { Component } from \"react\";\r\nimport CollectionDetails from \"./components/collectionDetails\";\r\nimport Spinner from \"../shared/spinner/spinner\";\r\nimport CollectionDetailsMobile from './components/collectionDetailsMob';\r\nimport WithMoviesService from \"../hoc/withMoviesService\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    collectionRequested,\r\n    collectionLoaded,\r\n    collectionError,\r\n    genresRequested,\r\n    genresLoaded,\r\n    collectionMovieDetailsLoaded,\r\n    collectionCastLoaded\r\n} from \"../../actions/actionsCollectionPage/actionCollectionPage\";\r\n\r\nclass CollectionPage extends Component {\r\n    componentWillMount() {\r\n        const {\r\n            collectionId,\r\n            collectionRequested,\r\n            genresRequested\r\n        } = this.props;\r\n\r\n\r\n        collectionRequested();\r\n        genresRequested();   \r\n        this.getGenresName();\r\n        this.loadCollection(collectionId);\r\n    }\r\n\r\n    loadCollection = (collectionId) => {\r\n        const { MoviesService, collectionLoaded, collectionError } = this.props;\r\n        MoviesService.getCollection(collectionId)\r\n            .then((res) => {\r\n                if (res) {\r\n                    const movieIds = res.parts.map((part) => part.id);\r\n                    collectionLoaded(res);\r\n                    this.getCast(res);\r\n                    this.getMovieDetails(movieIds);\r\n                }\r\n            })\r\n            .catch((error) => collectionError());\r\n    };\r\n\r\n    getGenresName = () => {\r\n        const { MoviesService, genresLoaded, collectionError } = this.props;\r\n        MoviesService.getGenreList()\r\n            .then((res) => genresLoaded(res))\r\n            .catch((error) => collectionError());\r\n    };\r\n\r\n    getMovieDetails = (ids) => {\r\n        const {\r\n            MoviesService,\r\n            collectionMovieDetailsLoaded,\r\n            collectionError,\r\n        } = this.props;\r\n        const total = [];\r\n        ids.forEach((id) => {\r\n            MoviesService.getMovieDetails(id)\r\n                .then((response) => {\r\n                    if (response) {\r\n                        total.push(response.revenue);\r\n                        collectionMovieDetailsLoaded(total);\r\n                    }\r\n                })\r\n                .catch((error) => collectionError());\r\n        });\r\n    };\r\n\r\n    getCast = (collection) => {\r\n        const { MoviesService, collectionCastLoaded, collectionError } = this.props;\r\n        const ids = collection.parts.map((part) => part.id);\r\n\r\n        MoviesService.getCast(ids)\r\n            .then((res) => {\r\n                if (res) {\r\n                    const payload = { cast: res.cast, crew: res.crew };\r\n                    collectionCastLoaded(payload);\r\n                }\r\n            })\r\n            .catch((error) => collectionError());\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            collection,\r\n            history,\r\n            loading,\r\n            genres,\r\n            genresLoading,\r\n            revenue,\r\n            cast,\r\n            crew,\r\n            width\r\n        } = this.props;\r\n\r\n\r\n        const globalLoading =\r\n            loading || genresLoading;\r\n\r\n        if (globalLoading) {\r\n            return <Spinner />;\r\n        } else if (width < 415) {\r\n            return (\r\n                <CollectionDetailsMobile\r\n                    collection={collection}\r\n                    history={history}\r\n                    genre={genres}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    revenue={revenue}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <CollectionDetails\r\n                    collection={collection}\r\n                    history={history}\r\n                    genre={genres}\r\n                    cast={cast}\r\n                    crew={crew}\r\n                    revenue={revenue}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {\r\n        collection,\r\n        loading,\r\n        genres,\r\n        genresLoading,\r\n        revenue,\r\n        cast,\r\n        crew,\r\n    } = state.collectionPageReducer;\r\n    return {\r\n        collection,\r\n        loading,\r\n        genres,\r\n        genresLoading,\r\n        revenue,\r\n        cast,\r\n        crew\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    collectionRequested,\r\n    collectionLoaded,\r\n    collectionError,\r\n    genresRequested,\r\n    genresLoaded,\r\n    collectionMovieDetailsLoaded,\r\n    collectionCastLoaded\r\n};\r\n\r\nexport default WithMoviesService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(CollectionPage)\r\n);\r\n","import * as actionTypes from './actionTypesCollectionPage';\r\n\r\nconst collectionRequested = () => {\r\n    return {\r\n        type: actionTypes.COLLECTION_REQUESTED\r\n    }\r\n}\r\n\r\nconst collectionLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst collectionError = () => {\r\n    return {\r\n        type: actionTypes.COLLECTION_ERROR\r\n    }\r\n}\r\n\r\nconst genresRequested = () => {\r\n    return {\r\n        type: actionTypes.GENRES_REQUESTED\r\n    }\r\n}\r\n\r\nconst genresLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.GENRES_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nconst collectionMovieDetailsLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_MOVIE_DETAILS_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nconst collectionCastLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.COLLECTION_CAST_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    collectionRequested,\r\n    collectionLoaded,\r\n    collectionError,\r\n    genresRequested,\r\n    genresLoaded,\r\n    collectionMovieDetailsLoaded,\r\n    collectionCastLoaded,\r\n}","export const IN_TREND_REQUESTED = 'IN_TREND_REQUESTED';\r\nexport const IN_TREND_LOADED = 'IN_TREND_LOADED';\r\nexport const IN_TREND_ERROR = 'IN_TREND_ERROR';","import React, {useState, useRef, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TogglerWrapper = styled.div`\r\n    width: fit-content;\r\n    border: 1px solid rgb(3, 37, 65);;\r\n    border-radius: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    font-size: 1.1em;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ToggleItem = styled.div`\r\n    padding: 0 15px;\r\n    color: ${props => props.isActive ? 'rgb(30, 213, 169)' : 'rgb(3, 37, 65)'};\r\n    position: relative;\r\n    z-index: 2;\r\n`;\r\n\r\nconst ToggleActive = styled.div`\r\n    background-color: rgb(3, 37, 65);\r\n    position: absolute;\r\n    height: 100%;\r\n    width: ${props => (props.width + 'px') || '100px'};\r\n    border-radius: 15px;\r\n    transition: all 200ms;\r\n\r\n    &.first-active {\r\n        left: 0;\r\n    }\r\n\r\n    &.second-active {\r\n        left: ${props => `calc(100% - ${props.width}px)`}\r\n    }\r\n`;\r\n\r\nconst Toggler = ({names, loadTrend, types}) => {\r\n    const buttonsArray = [\r\n        {\r\n            isActive: true,\r\n            text: names[0],\r\n            type: types[0]\r\n        },\r\n        {\r\n            isActive: false,\r\n            text: names[1],\r\n            type: types[1]\r\n        }\r\n    ]\r\n\r\n    const [buttons, setButtons] = useState(buttonsArray || []);\r\n    const [width, setWidth] = useState(0);\r\n    const ref = useRef(null);\r\n    useEffect(() => {\r\n        if (buttons[0].isActive) {\r\n            setWidth(ref.current.clientWidth)\r\n        }\r\n    }, []);\r\n\r\n    let classNames = buttons[0].isActive ? 'first-active' : 'second-active';\r\n\r\n    const onToggle = (event, index) => {\r\n        setWidth(event.currentTarget.clientWidth);\r\n        \r\n        buttons.forEach(item => item.isActive = false);\r\n        buttons[index].isActive = true;\r\n        loadTrend(buttons[index].type)\r\n\r\n        setButtons(buttons);\r\n\r\n    }\r\n\r\n    const toggleItems = buttons.map((item, index) => {\r\n        const reference = item.isActive ? ref : null;\r\n        return (\r\n            <ToggleItem \r\n                isActive={item.isActive}\r\n                key={index}\r\n                onClick={(event) => onToggle(event, index)}\r\n                ref={reference}\r\n            >{item.text}</ToggleItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <TogglerWrapper>\r\n            {toggleItems}\r\n            <ToggleActive className={classNames} width={width}></ToggleActive>\r\n        </TogglerWrapper>\r\n    )\r\n}\r\n\r\nexport default Toggler;","import React from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport Rate from '../../shared/rate';\r\nimport Toggler from '../../shared/toggler/toggler';\r\n\r\nconst CarouselWrapper = styled.div`\r\n    max-width: 100%;\r\n    margin: 0 15px;\r\n    position: relative;\r\n    background-image: url('https://www.themoviedb.org/assets/2/v4/misc/trending-bg-39afc2a5f77e31d469b25c187814c0a2efef225494c038098d62317d923f8415.svg');\r\n    background-repeat: repeat-x;\r\n    background-position: bottom;\r\n    .rec.rec-slider-container {\r\n        margin: 0;\r\n        height: 345px;\r\n        * {\r\n            outline: none;\r\n            \r\n        }\r\n        .rec-item-wrapper {\r\n            height: 335px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PrevButton = styled.button`\r\n    width: 34px;\r\n    height: 34px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: ${props => props.size < 415 ? '5%' : '0'};\r\n    transform: translate(-50%, -50%);\r\n    box-shadow: 0px 0px 7px 0px rgba(0, 0, 0, 0.7);\r\n    background-color: rgb(239, 239, 239);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:focus {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst NextButton = styled(PrevButton)`\r\n    left: ${props => props.size < 415 ? '95%' : '100%'};\r\n`;\r\n\r\nconst SectionTitleWrapper = styled.div`\r\n    display: flex;\r\n    align-items: ${props => props.size < 415 ? 'center' : 'baseline'};\r\n    flex-direction: ${props => props.size < 415 ? 'column' : 'row'};\r\n    margin: 0 15px 30px 5px;\r\n`;\r\n\r\nconst SectionTitle = styled.div`\r\n    font-size: 1.5em;\r\n    font-weight: 600;\r\n    padding-right: 10px; \r\n    margin-bottom: 15px; \r\n`;\r\n\r\nconst TrendCardWrapper = styled.div`\r\n    width: 150px;\r\n    min-width: 150px;\r\n`;\r\n\r\nconst TrendCardImg = styled.img`\r\n    border-radius: 8px;\r\n    width: 150px;\r\n    height: 225px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardTitleWrapper = styled.div`\r\n    position: relative;\r\n    padding-top: 20px;\r\n`;\r\nconst TrendCardTitle = styled.div`\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst TrendCardRelease = styled.div`\r\n    opacity: 0.6;\r\n`;\r\n\r\nconst InTrend = ({inTrend, MoviesService, loadTrend, size}) => {\r\n    const history = useHistory();\r\n\r\n    const handleRouting = (id, type) => {\r\n        MoviesService.getMovieDetails(id)\r\n            .then((res) => {\r\n                if (res && res.status_code === 34) {\r\n                    history.push(`/collection/${id}`)\r\n                } else {\r\n                    history.push(`/${type}/${id}`)\r\n                }\r\n            })\r\n    }\r\n\r\n    const trendItems = inTrend.map((item, index) => {\r\n        const {id, release_date, first_air_date, media_type, name, title, poster_path, vote_average} = item;\r\n        let src = poster_path ? ('//image.tmdb.org/t/p/w220_and_h330_face' + poster_path) : (process.env.PUBLIC_URL + '/assets/poster.png');\r\n        const date = moment(release_date || first_air_date).format('DD.MM.YYYY');\r\n        return (\r\n            <TrendCardWrapper key={index}>\r\n                <TrendCardImg \r\n                    src={src} \r\n                    alt={name || title} \r\n                    onClick={() => handleRouting(id, media_type)}\r\n                />\r\n                <TrendCardTitleWrapper>\r\n                    <TrendCardTitle\r\n                        onClick={() => handleRouting(id, media_type)}\r\n                    >\r\n                        {name || title} \r\n                    </TrendCardTitle>\r\n                    <TrendCardRelease>\r\n                        {date}\r\n                    </TrendCardRelease>\r\n                    <Rate \r\n                        vote={vote_average}\r\n                        small\r\n                    />\r\n                </TrendCardTitleWrapper>\r\n            </TrendCardWrapper>\r\n        )\r\n    })\r\n\r\n    const myArrow = ({ type, onClick, isEdge }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n    const myPagination = ({ pages, activePage, onClick }) => {\r\n        return (\r\n            <span style={{display: 'none'}}></span>\r\n        )\r\n    }\r\n\r\n    let carousel;\r\n\r\n    return (\r\n        <CarouselWrapper>\r\n            <SectionTitleWrapper size={size}>\r\n                <SectionTitle>В тренде </SectionTitle>\r\n                <Toggler names={['Сегодня', 'На этой неделе']} loadTrend={loadTrend} types={['day', 'week']}/>\r\n            </SectionTitleWrapper>\r\n            <Carousel \r\n                renderArrow={myArrow}\r\n                itemsToScroll={size < 415 ? 2 : 5} \r\n                itemsToShow={size < 415 ? 2 : 7}\r\n                focusOnSelect={false}\r\n                ref={ref => (carousel = ref)}\r\n                renderPagination={myPagination}\r\n            >\r\n                {trendItems}\r\n            </Carousel>\r\n            <PrevButton \r\n                onClick={() => carousel.slidePrev()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </PrevButton>\r\n            <NextButton \r\n                onClick={() => carousel.slideNext()}\r\n                size={size}\r\n            >\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </NextButton>\r\n        </CarouselWrapper> \r\n    )\r\n        \r\n}\r\n\r\nexport default InTrend;","import React, {useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\nimport {connect} from 'react-redux';\r\nimport {inTrendRequested, inTrendLoaded, inTrendError} from '../../actions/actionsHomePage/actionHomePage';\r\nimport Spinner from '../shared/spinner/spinner';\r\nimport {InTrend} from './components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport useWindowSize from '../shared/useWindowSize/useWindowSize';\r\n\r\nconst HomePageWrapper = styled.div`\r\n    width: 100%;\r\n    margin: ${props => props.size < 415 ? '0 auto 10%': '10% auto'};\r\n    background-color: #f1f2f6;\r\n    border-radius: ${props => props.size < 415 ? '0' : '10px'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-family: \"Source Sans Pro\", Arial, sans-serif;\r\n    font-size: ${props => props.size < 415 ? '2.4em' : '3em'};\r\n    font-weight: 700;\r\n    padding: 10% 15px;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePageSubTitle = styled.div`\r\n    font-size: 0.7em;\r\n    font-weight: 600;\r\n    text-align: center;\r\n`;\r\n\r\nconst HomePage = ({title, MoviesService, inTrendLoaded, inTrendError, inTrend, loading}) => {\r\n    const size = useWindowSize();\r\n    document.title = title;\r\n\r\n    const loadTrend = (time) => {\r\n        MoviesService.getInTrend(time)\r\n            .then((res) => inTrendLoaded(res.results))\r\n            .catch(error => inTrendError());\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTrend('day')\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <Spinner/>\r\n    } else {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <HomePageWrapper size={size}>\r\n                            Добро пожаловать в Movies Database.\r\n                            <HomePageSubTitle>\r\n                                Миллионы фильмов, сериалов и людей. Исследуйте сейчас.\r\n                            </HomePageSubTitle>\r\n                        </HomePageWrapper>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className='px-0'>\r\n                        <InTrend \r\n                            inTrend={inTrend} \r\n                            MoviesService={MoviesService} \r\n                            loadTrend={loadTrend} \r\n                            size={size}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {inTrend, loading} = state.homePageReducer;\r\n    return {\r\n        inTrend,\r\n        loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError\r\n}\r\n\r\nexport default WithMoviesService()(connect(mapStateToProps, mapDispatchToProps)(HomePage));","import * as actionTypes from './actionTypeHomePage';\r\n\r\nconst inTrendRequested = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_REQUESTED\r\n    }\r\n}\r\n\r\nconst inTrendLoaded = (payload) => {\r\n    return {\r\n        type: actionTypes.IN_TREND_LOADED,\r\n        payload\r\n    }\r\n}\r\n\r\nconst inTrendError = () => {\r\n    return {\r\n        type: actionTypes.IN_TREND_ERROR\r\n    }\r\n}\r\n\r\nexport {\r\n    inTrendRequested,\r\n    inTrendLoaded,\r\n    inTrendError,\r\n}","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBarWrapper = styled.div`\r\n    background-color: #bdcad9;\r\n    background-image: linear-gradient(315deg, #bdcad9 0%, #e1dada 74%);\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst LogoWrapper = styled.div`\r\n    font-family: 'Londrina Outline', cursive;\r\n    font-weight: 700;\r\n    font-size: 2.5em;\r\n    padding-left: 15px;\r\n`;\r\n\r\nconst MenuBurger = styled.div`\r\n    width: 35px;\r\n    height: 5px;\r\n    position: relative;\r\n    background-color: black;\r\n    margin-right: 15px;\r\n\r\n    &::after, &::before {\r\n        content: '';\r\n        width: 35px;\r\n        height: 5px;\r\n        position: absolute;\r\n        background-color: black;\r\n    }\r\n\r\n    &::before {\r\n        top: -10px;\r\n    }\r\n\r\n    &::after {\r\n        top: 10px;\r\n    }\r\n`;\r\n\r\nconst MenuList = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #f1dfd1;\r\n    background-image: linear-gradient(315deg, #f1dfd1 0%, #f6f0ea 74%);\r\n    z-index: 50;\r\n    transform: translate(150%, 0);\r\n    transition: transform 300ms;\r\n    overflow-y: hidden;\r\n\r\n    &.active {\r\n        transform: translate(0, 0);\r\n    }\r\n`;\r\n\r\nconst CloseButton = styled.div`\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 30px;\r\n\r\n    & i {\r\n        font-size: 2.5em;\r\n    }\r\n`;\r\n\r\nconst NavList = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst NavListItem = styled.div`\r\n    padding-top: 10px;\r\n    font-size: 1.5em;\r\n    font-weight: 800;\r\n`;\r\n\r\nconst NavListSubItem = styled.div`\r\n    padding: 15px 0 0 15px;\r\n    font-size: 0.77em;\r\n    font-weight: 600;\r\n    text-decoration: none;\r\n    transition: text-decoration 200ms;\r\n    \r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n\r\n    & a {\r\n        color: rgba(33, 37, 41, 0.8); \r\n    }\r\n`;\r\n\r\nconst HeaderMobile = () => {\r\n    const [classNames, setClassNames] = useState('');\r\n\r\n    const toggleMenu = (clas, overflow) => {\r\n        setClassNames(clas);\r\n        document.getElementsByTagName('html')[0].style.overflow = overflow;\r\n        document.body.style.overflow = overflow;\r\n    }\r\n\r\n    return (\r\n        <NavBarWrapper>\r\n            <LogoWrapper>\r\n                <Link to='/movie-database'>Movies DB</Link>  \r\n            </LogoWrapper>\r\n            <MenuBurger onClick={() => toggleMenu('active', 'hidden')}/>\r\n            <MenuList className={classNames}>\r\n                <CloseButton \r\n                    onClick={() => toggleMenu('', 'visible')}\r\n                >\r\n                    <i className=\"fas fa-times\"></i>\r\n                </CloseButton>\r\n                <NavList>\r\n                    <NavListItem>\r\n                        Фильмы\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/popular/'>Популярные</Link>\r\n                            <span/>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/playing-now/'>Смотрят сейчас</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/upcoming/'>Ожидаемые</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/movie/top-rated/'>Лучшие</Link>\r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                    <NavListItem>\r\n                    Сериалы\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/popular/'>Популярные</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/airing_today/'>В эфире сегодня</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/on_the_air/'>По телевидению</Link>\r\n                        </NavListSubItem>\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/tv/top-rated/'>Лучшие</Link> \r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                    <NavListItem>\r\n                        Люди\r\n                        <NavListSubItem onClick={() => toggleMenu('', 'visible')}>\r\n                            <Link to='/person/'>Популярные люди</Link> \r\n                        </NavListSubItem>\r\n                    </NavListItem>\r\n                </NavList>\r\n            </MenuList>\r\n        </NavBarWrapper>\r\n    )\r\n}\r\n\r\nexport default HeaderMobile;","import React, { Component } from 'react';\r\nimport Header from '../shared/header/header';\r\nimport {PopularPage, PlayingNowPage, TopRatedPage, UpcomingPage} from '../moviesPage';\r\nimport {BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport MovieDetails from '../moviesPage/components/movieDetailsPage/movieDetails';\r\nimport ScrollToTop from '../shared/scrollToTop/scrollToTop';\r\nimport MoviesByKeyword from '../moviesByKeywordsPage/moviesByKeyword';\r\nimport FullCast from '../fullCastPage/castsPage';\r\nimport PersonBiography from '../personDetailsPage/personBiography';\r\nimport {TVPopularPage, OnTheAirPage, TVTopRatedPage, AiringTodayPage} from '../TVPages';\r\nimport PersonPage from '../popularPersonPage/popularPersonPage';\r\nimport CollectionPage from '../collectionPage/collectionPage';\r\nimport HomePage from '../homePage/homePage';\r\nimport HeaderMobile from '../shared/header/headerMob';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { width: 0 };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions());\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth});\r\n    }\r\n\r\n    render() {\r\n        const {width} = this.state;\r\n        const header = width < 415 ? <HeaderMobile/> : <Header/>;\r\n        return(\r\n            <Router>\r\n                {header}\r\n                <ScrollToTop>\r\n                    <Switch>\r\n                        <Redirect exact from='/' to='/movie-database'/>\r\n                        <Route exact path='/movie-database' render={\r\n                            () => {\r\n                                return <HomePage title='Movie Database'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/person' render={\r\n                            ({history}) => {\r\n                                return <PersonPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/popular' render={\r\n                            ({history}) => {\r\n                                return <PopularPage history={history} title='Популярные фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/playing-now' render={\r\n                            ({history}) => {\r\n                                return <PlayingNowPage history={history} title='Сейчас смотрят фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/upcoming' render={\r\n                            ({history}) => {\r\n                                return <UpcomingPage history={history} title='Ожидамые фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/movie/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TopRatedPage history={history} title='Лучшие фильмы'/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/collection/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <CollectionPage collectionId = {id} history={history} width={width}/>   \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/playing-now/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/> \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/upcoming/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/> \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/> \r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/popular/' render={\r\n                            ({history}) => {\r\n                                return <TVPopularPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/airing_today' render={\r\n                            ({history}) => {\r\n                                return <AiringTodayPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/on_the_air' render={\r\n                            ({history}) => {\r\n                                return <OnTheAirPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path='/tv/top-rated' render={\r\n                            ({history}) => {\r\n                                return <TVTopRatedPage history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/popular/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/> \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/airing_today/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/on_the_air/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/> \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/top-rated/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/>\r\n                            }\r\n                        }/>\r\n                        \r\n                        <Route exact path=\"/movie/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id/casts\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <FullCast movieId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route path=\"/keywords/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MoviesByKeyword keywordId = {id} history={history}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/movie/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/>\r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/tv/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <MovieDetails movieId = {id} history={history} width={width}/> \r\n                            }\r\n                        }/>\r\n                        <Route exact path=\"/person/:id\" render={\r\n                            ({match, history}) => {\r\n                                const {id} = match.params;\r\n                                return <PersonBiography personId = {id} history={history} width={width}/>\r\n                            }\r\n                        }/> \r\n                    </Switch>\r\n                </ScrollToTop>\r\n            </Router>\r\n        )\r\n    }\r\n}","import {actionTypes} from '../../actions/actionsMoviesTVPage';\r\n\r\nconst initialState = {\r\n    popularMovies: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    error: false,\r\n    popularPage: 0, \r\n    playingNowMovies: [],\r\n    playingNowPage: 0,\r\n    upcomingMovies: [],\r\n    upcomingPage: 0,\r\n    topRatedMovies: [],\r\n    topRatedPage: 0,\r\n    totalPages: 0\r\n}\r\n\r\nconst moviePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                popularMovies: action.payload,\r\n                loading: false,\r\n                popularPage: state.popularPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_ERROR: \r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularMovies: [...state.popularMovies, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: action.payload,\r\n                loading: false,\r\n                playingNowPage: state.playingNowPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.PLAYING_NOW_MOVIES_MORE_LOADED:\r\n            return {\r\n                ...state,\r\n                playingNowMovies: [...state.playingNowMovies, ...action.payload],\r\n                loadingMore: false,\r\n                playingNowPage: state.playingNowPage + 1\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                upcomingMovies: action.payload,\r\n                loading: false,\r\n                upcomingPage: state.upcomingPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.UPCOMING_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                upcomingMovies: [...state.upcomingMovies, ...action.payload],\r\n                loadingMore: false,\r\n                upcomingPage: state.upcomingPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_LOADED:\r\n            return {\r\n                ...state,\r\n                topRatedMovies: action.payload,\r\n                loading: false,\r\n                topRatedPage: state.topRatedPage + 1,\r\n                totalPages: action.payload\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_MOVIES_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedMovies: [...state.topRatedMovies, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default moviePageReducer;","import {actionTypes} from '../../actions/actionsMoviesTVPage';\r\n\r\nconst initialState = {\r\n    popularTv: [],\r\n    loading: true,\r\n    loadingMore: false,\r\n    popularPage: 0,\r\n    error: false,\r\n    airingTodayTv: [],\r\n    airingTodayPage: 0,\r\n    onTheAirTv: [],\r\n    onTheAirPage: 0,\r\n    topRatedTv: [],\r\n    topRatedPage: 0\r\n}\r\n\r\nconst tvPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.POPULAR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                popularTv: action.payload,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.POPULAR_TV_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.POPULAR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                popularTv: [...state.popularTv, ...action.payload],\r\n                loadingMore: false,\r\n                popularPage: state.popularPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                airingTodayTv: action.payload,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.AIRING_TODAY_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                airingTodayTv: [...state.airingTodayTv, ...action.payload],\r\n                loadingMore: false,\r\n                airingTodayPage: state.airingTodayPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                onTheAirTv: action.payload,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.ON_THE_AIR_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                onTheAirTv: [...state.onTheAirTv, ...action.payload],\r\n                loadingMore: false,\r\n                onTheAirPage: state.onTheAirPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                topRatedTv: action.payload,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingMore: true\r\n            }\r\n        case actionTypes.TOP_RATED_TV_MORE_LOADED: \r\n            return {\r\n                ...state,\r\n                topRatedTv: [...state.topRatedTv, ...action.payload],\r\n                loadingMore: false,\r\n                topRatedPage: state.topRatedPage + 1\r\n            }\r\n        default:\r\n            return state\r\n    }   \r\n}\r\n\r\nexport default tvPageReducer;","import {actionTypes} from '../../actions/actionsPopularPersonPage';\r\n\r\nconst initialState = {\r\n    person: [],\r\n    loading: true,\r\n    page: 1,\r\n    error: false,\r\n    totalPages: 0\r\n}\r\n\r\nconst popularPersonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    \r\n        case actionTypes.POPULAR_PERSON_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.POPULAR_PERSON_LOADED: \r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                totalPages: action.payload.totalPages,\r\n                page: action.payload.page\r\n            }\r\n        case actionTypes.POPULAR_PERSON_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default popularPersonReducer;","import {actionTypes} from '../../actions/actionsMovieDetailsPage';\r\n\r\nconst initialState = {\r\n    movieDetails: [],\r\n    loading: true,\r\n    error: false,\r\n    casts: null,\r\n    loadingCast: true,\r\n    keywords: null,\r\n    loadingKeywords: true,\r\n    modalWindow: false,\r\n    video: null,\r\n    socialLink: {},\r\n    collection: {},\r\n    recommendations: [],\r\n}\r\n\r\nconst movieDetailsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.MOVIE_DETAILS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                movieDetails: action.payload\r\n            }\r\n        case actionTypes.CAST_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loadingCast: true\r\n            }\r\n        case actionTypes.CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                casts: action.payload,\r\n                loadingCast: false\r\n            }\r\n        case actionTypes.KEYWORDS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: true\r\n            }\r\n        case actionTypes.KEYWORDS_LOADED:\r\n            return {\r\n                ...state,\r\n                loadingKeywords: false,\r\n                keywords: action.payload\r\n            }\r\n        case actionTypes.MODAL_WINDOW_TOGGLE:\r\n            return {\r\n                ...state,\r\n                modalWindow: !state.modalWindow\r\n            }\r\n        case actionTypes.VIDEO_LOADED:\r\n            return {\r\n                ...state,\r\n                video: action.payload\r\n            }\r\n        case actionTypes.SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.MOVIE_DETAILS_COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.RECOMMENDATIONS_LOADED:\r\n            return {\r\n                ...state,\r\n                recommendations: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default movieDetailsReducer;","import {actionTypes} from '../../actions/actionsHomePage';\r\n\r\nconst initialState = {\r\n    inTrend: [],\r\n    loading: true,\r\n    error: false,\r\n}\r\n\r\nconst homePageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.IN_TREND_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.IN_TREND_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                inTrend: action.payload\r\n            }\r\n        case actionTypes.IN_TREND_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default homePageReducer;","import {actionTypes} from '../../actions/actionsCollectionPage';\r\n\r\nconst initialState = {\r\n    collection: null,\r\n    loading: true,\r\n    error: false,\r\n    genres: null,\r\n    genresLoading: true,\r\n    cast: [],\r\n    crew: [],\r\n    revenue: 0,\r\n}\r\n\r\nconst collectionPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.COLLECTION_REQUESTED: \r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.COLLECTION_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                collection: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                loading: false\r\n            }\r\n        case actionTypes.GENRES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                genresLoading: true\r\n            }\r\n        case actionTypes.GENRES_LOADED:\r\n            return {\r\n                ...state,\r\n                genresLoading: false,\r\n                genres: action.payload\r\n            }\r\n        case actionTypes.COLLECTION_MOVIE_DETAILS_LOADED:\r\n            return {\r\n                ...state,\r\n                revenue: action.payload.reduce((sum, current) => sum + current, 0)\r\n            }\r\n        case actionTypes.COLLECTION_CAST_LOADED:\r\n            return {\r\n                ...state,\r\n                cast: action.payload.cast,\r\n                crew: action.payload.crew\r\n            }\r\n        default:\r\n            return state\r\n    }  \r\n}\r\n\r\nexport default collectionPageReducer;","import {actionTypes} from '../../actions/actionsPersonDetailsPage';\r\n\r\nconst initialState = {\r\n    person: null,\r\n    loading: true,\r\n    cast: null,\r\n    crew: null,\r\n    socialLink: null,\r\n    socialLinkLoading: true,\r\n    error: false\r\n}\r\n\r\nconst personDetailsPageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PERSON_BIOGRAPHY_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.PERSON_BIOGRAPHY_LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                person: action.payload.person,\r\n                cast: action.payload.cast,\r\n                crew: action.payload.crew\r\n            }\r\n        case actionTypes.PERSON_BIOGRAPHY_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true\r\n            }\r\n        case actionTypes.PERSON_SOCIAL_LINK_REQUESTED:\r\n            return {\r\n                ...state,\r\n                socialLinkLoading: true\r\n            }\r\n        case actionTypes.PERSON_SOCIAL_LINK_LOADED:\r\n            return {\r\n                ...state,\r\n                socialLinkLoading: false,\r\n                socialLink: action.payload\r\n            }\r\n        case actionTypes.PERSON_SOCIAL_LINK_ERROR:\r\n            return {\r\n                ...state,\r\n                socialLinkLoading: false,\r\n                error: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default personDetailsPageReducer;","import { combineReducers } from 'redux'\r\nimport moviePageReducer from './reducers/moviePageReducers';\r\nimport tvPageReducer from './reducers/tvPageReducer';\r\nimport popularPersonReducer from './reducers/popularPersonReducer';\r\nimport movieDetailsReducer from './reducers/movieDetailsReducer';\r\nimport homePageReducer from './reducers/homePageReducer';\r\nimport collectionPageReducer from './reducers/collectionPageReducer';\r\nimport personDetailsPageReducer from './reducers/personDetailsPageReducer';\r\n\r\nexport default combineReducers({\r\n    moviePageReducer,\r\n    tvPageReducer,\r\n    popularPersonReducer,\r\n    movieDetailsReducer,\r\n    homePageReducer,\r\n    collectionPageReducer,\r\n    personDetailsPageReducer\r\n})","import {createStore} from 'redux';\r\nimport combineReducers from './reducers/combineReducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(combineReducers, composeWithDevTools());\r\n\r\nexport default store;","import React, {Component} from 'react';\r\nimport {popularMoviesError} from '../../actions/actionsMoviesTVPage/actionMoviesTVPage';\r\nimport {connect} from 'react-redux';\r\nimport WithMoviesService from '../hoc/withMoviesService';\r\n\r\nclass ErrorBoundry extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n      }\r\n    \r\n    //   static getDerivedStateFromError(error) {\r\n    //     // Update state so the next render will show the fallback UI.\r\n    //     return { hasError: true };\r\n    //   }\r\n    \r\n      componentDidCatch() {\r\n        // You can also log the error to an error reporting service\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n      }\r\n    \r\n      render() {\r\n        if (this.state.hasError) {\r\n          // You can render any custom fallback UI\r\n          return <h1>Something went wrong.</h1>;\r\n        }\r\n\r\n        return this.props.children; \r\n      }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    popularMoviesError\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorBoundry);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport MoviesServices from './services/services';\nimport {Provider} from 'react-redux';\nimport MoviesServicesContext from './components/moviesContext/moviesContext';\nimport store from './store';\nimport ErrorBoundry from './components/errorComponent/errorComponent';\n\nconst moviesServices = new MoviesServices();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<ErrorBoundry>\n\t\t\t\t<MoviesServicesContext.Provider value={moviesServices}>\n\t\t\t\t\t<App/>\n\t\t\t\t</MoviesServicesContext.Provider>\n\t\t\t</ErrorBoundry>\n\t\t</Provider>\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}